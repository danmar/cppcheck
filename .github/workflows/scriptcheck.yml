# Syntax reference https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# Environment reference https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
name: scriptcheck

on:
  push:
    branches:
      - 'main'
      - 'releases/**'
    tags:
      - '2.*'
  pull_request:

permissions:
  contents: read

jobs:
  build:

    # 'ubuntu-22.04' removes Python 2.7, 3.6 and 3.6 so keep the previous LTS version
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.workflow }}-${{ runner.os }}

      - name: Cache Cppcheck
        uses: actions/cache@v3
        with:
          path: cppcheck
          key: ${{ runner.os }}-scriptcheck-cppcheck-${{ github.sha }}

      - name: build cppcheck
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          make -j$(nproc) -s CXXFLAGS="-w"
          strip -s ./cppcheck

  scriptcheck:

    needs: build
    # 'ubuntu-22.04' removes Python 2.7, 3.5 and 3.6 so keep the previous LTS version
    # 'ubutunu-20.04' no longer works on 2.7 - TODO: re-added in a different way or remove support for it?
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, '3.10', '3.11', '3.12']
        include:
          - python-version: '3.12'
            python-latest: true

      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Restore Cppcheck
        uses: actions/cache@v3
        with:
          path: cppcheck
          key: ${{ runner.os }}-scriptcheck-cppcheck-${{ github.sha }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install missing software on ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install tidy libxml2-utils

      - name: Install missing software on ubuntu (Python 2)
        if: matrix.python-version == '2.7'
        run: |
          python -m pip install pip --upgrade
          python -m pip install pathlib
          python -m pip install pytest
          python -m pip install pygments

      - name: Install missing software on ubuntu (Python 3)
        if: matrix.python-version != '2.7'
        run: |
          # shellcheck cannot be installed via pip
          # ERROR: Could not find a version that satisfies the requirement shellcheck (from versions: none)
          # ERROR: No matching distribution found for shellcheck
          sudo apt-get install shellcheck
          python -m pip install pip --upgrade
          python -m pip install natsort
          python -m pip install pexpect
          python -m pip install pylint
          python -m pip install unittest2
          python -m pip install pytest
          python -m pip install pygments
          python -m pip install requests
          python -m pip install psutil

      - name: run Shellcheck
        if: matrix.python-latest
        run: |
          find . -name "*.sh" | xargs shellcheck --exclude SC2002,SC2013,SC2034,SC2035,SC2043,SC2046,SC2086,SC2089,SC2090,SC2129,SC2211,SC2231

      - name: run pylint
        if: matrix.python-latest
        run: |
          echo "FIXME pylint is disabled for now because it fails to import files:"
          echo "FIXME addons/runaddon.py:1:0: E0401: Unable to import 'cppcheckdata' (import-error)"
          echo "FIXME addons/runaddon.py:1:0: E0401: Unable to import 'cppcheck' (import-error)"
          # pylint --rcfile=pylintrc_travis --jobs $(nproc) addons/*.py htmlreport/cppcheck-htmlreport htmlreport/*.py tools/*.py

      - name: check .json files
        if: matrix.python-latest
        run: |
          find . -name '*.json' | xargs -n 1 python -m json.tool > /dev/null

      - name: Validate
        if: matrix.python-latest
        run: |
          make -j$(nproc) validateCFG validatePlatforms validateRules

      - name: check python syntax
        if: matrix.python-version != '2.7'
        run: |
          python -m py_compile addons/*.py
          python -m py_compile htmlreport/cppcheck-htmlreport
          python -m py_compile htmlreport/*.py
          python -m py_compile tools/*.py

      - name: compile addons
        run: |
          python -m compileall ./addons

      - name: test matchcompiler
        run: |
          python tools/test_matchcompiler.py

      # we cannot specify -Werror since xml/etree/ElementTree.py in Python 3.9/3.10 contains an unclosed file
      - name: test addons
        if: matrix.python-version == '3.9' || matrix.python-version == '3.10'
        run: |
          python -m pytest --strict-markers -vv addons/test/test-*.py
        env:
          PYTHONPATH: ./addons

      - name: test addons
        if: matrix.python-version != '3.9' && matrix.python-version != '3.10'
        run: |
          python -m pytest -Werror --strict-markers -vv addons/test/test-*.py
        env:
          PYTHONPATH: ./addons

      - name: test htmlreport
        run: |
          htmlreport/test_htmlreport.py
          cd htmlreport
          ./check.sh

      - name: test reduce
        run: |
          python -m pytest -Werror --strict-markers -vv tools/test_reduce.py
        env:
          PYTHONPATH: ./tools

      - name: test donate_cpu_lib
        if: matrix.python-version != '2.7'
        run: |
          python -m pytest -Werror --strict-markers -vv tools/test_donate_cpu_lib.py
        env:
          PYTHONPATH: ./tools

      - name: test donate_cpu_server
        if: matrix.python-version != '2.7'
        run: |
          python -m pytest -Werror --strict-markers -vv tools/test_donate_cpu_server.py
        env:
          PYTHONPATH: ./tools

      - name: dmake
        if: matrix.python-latest
        run: |
          make -j$(nproc) CXXFLAGS="-w" run-dmake
          git diff --exit-code
