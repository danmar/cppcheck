language: cpp
dist: xenial

compiler:
  - gcc
  - clang

env:
  global:
    - ORIGINAL_CXXFLAGS="-pedantic -Wall -Wextra -Wcast-qual -Wno-deprecated-declarations -Wfloat-equal -Wmissing-declarations -Wmissing-format-attribute -Wno-long-long -Wpacked -Wredundant-decls -Wundef -Wno-shadow -Wno-missing-field-initializers -Wno-missing-braces -Wno-sign-compare -Wno-multichar -D_GLIBCXX_DEBUG -g "
#   unfortunately we need this to stay within 50min timelimit given by travis.
    - CXXFLAGS="${ORIGINAL_CXXFLAGS} -O2 -march=native -Wstrict-aliasing=2 -Werror=strict-aliasing"
    - CPPCHECK=${TRAVIS_BUILD_DIR}/cppcheck
    - ASAN_OPTIONS=detect_stack_use_after_return=1
    - UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1
  matrix:
    - CXXFLAGS="${CXXFLAGS} -DCHECK_INTERNAL"
    - CXXFLAGS="${CXXFLAGS} -DCHECK_INTERNAL" MAKEFLAGS="HAVE_RULES=yes" MATCHCOMPILER=yes VERIFY=1

before_install:
# install needed deps
 - travis_retry sudo apt-get update -qq
 - travis_retry sudo apt-get install -qq python3-pip libxml2-utils libpcre3 gdb unzip wx-common xmlstarlet python3-dev liblua5.3-dev libcurl3 libcairo2-dev libsigc++-2.0-dev tidy libopencv-dev libz3-dev
# Python 2 modules 
 - travis_retry python2 -m pip install --user pytest==4.6.4
# - travis_retry python2 -m pip install --user pylint
 - travis_retry python2 -m pip install --user unittest2
 - travis_retry python2 -m pip install --user pexpect # imported by tools/ci.py
 - travis_retry python2 -m pip install --user pygments
# Python 3 modules
 - travis_retry python3 -m pip install --user setuptools --upgrade
 - travis_retry python3 -m pip install --user pytest
# - travis_retry python3 -m pip install --user pylint
 - travis_retry python3 -m pip install --user unittest2
 - travis_retry python3 -m pip install --user pexpect # imported by tools/ci.py
 - travis_retry python3 -m pip install --user requests # imported by tools/pr.py
 - travis_retry python3 -m pip install --user pygments
 - travis_retry python3 -m pip install --user natsort
 - cp externals/z3_version_old.h externals/z3_version.h # because travis z3 version is old

matrix:
# do notify immediately about it when a job of a build fails.
  fast_finish: true
  allow_failures:
    - name: "rerun dmake?"
      compiler: clang
# defined extra jobs that run besides what is configured in the build matrix
  include:

# check a lot of stuff that only needs to be checked in a single configuration
    - name: "misc"
      compiler: clang
      script:
        - make -j$(nproc) -s
# run extra tests
        - tools/generate_and_run_more_tests.sh
# check for missing CWE entries
        - make checkCWEEntries
# check cfg files
        - make checkcfg
# check platform files
        - make validatePlatforms
# Validate Result XML
        - make validateXML
# Validate rule files
        - make validateRules
# check htmlreport stuff
        - python2 htmlreport/test_htmlreport.py
        - python3 htmlreport/test_htmlreport.py
        - cd htmlreport
        - PYTHON=python2 ./check.sh
        - PYTHON=python3 ./check.sh
        - cd ../
# check if DESTDIR works  TODO: actually execute this
        - mkdir install_test
        - echo $CXXFLAGS
        - make -s DESTDIR=install_test FILESDIR=/usr/share/cppcheck install
# rm everything
        - git clean -dfx
# check what happens if we want to install it to some other dir,
        - echo $CXXFLAGS
        - make -s MATCHCOMPILER=yes FILESDIR=/usr/share/cppcheck -j$(nproc)
        - sudo make MATCHCOMPILER=yes FILESDIR=/usr/share/cppcheck install
# check if it actually works:
        - /usr/bin/cppcheck ./cli
# check if showtime=top5 works
        - ./tools/test_showtimetop5.sh
# check matchcompiler
        - python2 tools/test_matchcompiler.py
        - python3 tools/test_matchcompiler.py
# check --dump
        - ${CPPCHECK} test/testpreprocessor.cpp --dump
        - xmllint --noout test/testpreprocessor.cpp.dump
# run pylint -- FIXME these are temporarily commented out because there is a syntax error in pylint
#        - pylint --rcfile=pylintrc_travis addons/*.py
#        - pylint --rcfile=pylintrc_travis htmlreport/cppcheck-htmlreport
#        - pylint --rcfile=pylintrc_travis htmlreport/*.py
#        - pylint --rcfile=pylintrc_travis --ignore=donate-cpu-server.py --ignore=donate-cpu.py --ignore=donate_cpu_lib.py --ignore=test-my-pr.py tools/*.py
#        - python3 -m pylint --rcfile=pylintrc_travis addons/*.py
#        - python3 -m pylint --rcfile=pylintrc_travis htmlreport/cppcheck-htmlreport
#        - python3 -m pylint --rcfile=pylintrc_travis htmlreport/*.py
#        - python3 -m pylint --rcfile=pylintrc_travis tools/*.py
# check python syntax by compiling some selected scripts
        - python3 -m py_compile ./tools/donate-cpu.py
        - python3 -m py_compile ./tools/donate-cpu-server.py
# check addons/misc.py
        - cd addons/test
        - ${CPPCHECK} --dump misc-test.cpp
        - python3 ../misc.py -verify misc-test.cpp.dump
        - cd ../../
# check addons/cert.py
        - cd addons/test
        - ${CPPCHECK} --dump cert-test.c
        - python3 ../cert.py -verify cert-test.c.dump
        - ${CPPCHECK} --dump cert-test.cpp
        - python3 ../cert.py -verify cert-test.cpp.dump
        - cd ../../
# check addons/misra.py
        - cd addons/test
        # We'll force C89 standard to enable an additional verification for
        # rules 5.4 and 5.5 which have standard-dependent options.
        - ${CPPCHECK} --dump --suppress=uninitvar --suppress=uninitStructMember --std=c89 misra/misra-test.c
        - python3 ../misra.py -verify misra/misra-test.c.dump
        - ${CPPCHECK} --dump misra/misra-test.cpp
        - python3 ../misra.py -verify misra/misra-test.cpp.dump
        - python ../misra.py --rule-texts=misra/misra2012_rules_dummy_ascii.txt -verify misra/misra-test.cpp.dump
        - python3 ../misra.py --rule-texts=misra/misra2012_rules_dummy_ascii.txt -verify misra/misra-test.cpp.dump
        - python ../misra.py --rule-texts=misra/misra2012_rules_dummy_utf8.txt -verify misra/misra-test.cpp.dump
        - python3 ../misra.py --rule-texts=misra/misra2012_rules_dummy_utf8.txt -verify misra/misra-test.cpp.dump
        - python ../misra.py --rule-texts=misra/misra2012_rules_dummy_windows1250.txt -verify misra/misra-test.cpp.dump
        - python3 ../misra.py --rule-texts=misra/misra2012_rules_dummy_windows1250.txt -verify misra/misra-test.cpp.dump
        - cd ../../
# check addons/naming.py
        - cd addons/test
        - ${CPPCHECK} --dump naming_test.c
        - python3 ../naming.py --var='[a-z].*' --function='[a-z].*' naming_test.c.dump
        - ${CPPCHECK} --dump naming_test.cpp
        - python3 ../naming.py --var='[a-z].*' --function='[a-z].*' naming_test.cpp.dump
        - cd ../..
# check addons/namingng.py
        - cd addons/test
        - ${CPPCHECK} --dump namingng_test.c
        - python3 ../namingng.py --configfile ../naming.json --verify namingng_test.c.dump
        - cd ../..

# bug hunting
    - name: "bug hunting"
      compiler: gcc
      script:
        - make clean
        - make USE_Z3=yes -j$(nproc) all
        - ./testrunner TestExprEngine
        # FIXME: this is slowish
        #- python3 test/bug-hunting/cve.py
        #- git clone https://github.com/regehr/itc-benchmarks.git ~/itc
        #- python3 test/bug-hunting/itc.py
        - mkdir ~/juliet
        - curl https://samate.nist.gov/SARD/testsuites/juliet/Juliet_Test_Suite_v1.3_for_C_Cpp.zip -o ~/juliet/juliet.zip
        - cd ~/juliet
        - unzip -qq ~/juliet/juliet.zip
        - cd -
        - python3 test/bug-hunting/juliet.py

# check if dmake needs to be rerun (this job may fail)
    - name: "rerun dmake?"
      compiler: clang
# we don't need to install any deps for dmake so skip it explicitly
      before_install:
      - true
      script:
        - echo "If the following command fails, run 'make dmake; make run-dmake' and commit the resulting change."
        - make -s dmake -j$(nproc)
        - make -s run-dmake
        - git diff --exit-code
# check if cppcheck builds on trusty
    - name: "make ubuntu 14.04 trusty"
      compiler: gcc
      dist: trusty
      before_install:
        - travis_retry sudo apt-get update -qq
        - travis_retry sudo apt-get install libxml2-utils libpcre3
      script:
        - CXX=g++ CXXFLAGS="${ORIGINAL_CXXFLAGS}" make cppcheck check -j$(nproc) -s
        - make clean
        - CXX=clang++ CXXFLAGS="${ORIGINAL_CXXFLAGS}" make cppcheck check -j $(nproc) -s

script:
# fail the entire job as soon as one of the subcommands exits non-zero to save time and resources
  - set -e
# Determine CPU count. As of January 2019 it seems to be 2 - so use this for job count in suitable calls to make or cppcheck
  - cat /proc/cpuinfo
# check with TEST_MATHLIB_VALUE enabled
  - touch lib/mathlib.cpp test/testmathlib.cpp
  - echo $CXXFLAGS
  - make -s check -j$(nproc) CPPFLAGS=-DTEST_MATHLIB_VALUE
  - touch lib/mathlib.cpp test/testmathlib.cpp
# syntax checking of cppcheck source code with -DNONNEG
  - ls lib/*.cpp | xargs -n 1 -P 2 g++ -fsyntax-only -std=c++0x -Ilib -Iexternals -Iexternals/picojson -Iexternals/simplecpp -Iexternals/tinyxml2 -DNONNEG
# compile cppcheck, default build
  - echo $CXXFLAGS
  - make -s check -j$(nproc)
# Testing cli
  - cp -R . ../cppcheck\ 2
  - cd ../cppcheck\ 2/test/cli # path with space
  - python -m pytest test-*.py
  - cd -
# Testing addons (disabled 2020-11-24 because Travis fails, TODO try to enable these)
#  - PYTHONPATH=./addons python -m pytest addons/test/test-*.py
#  - PYTHONPATH=./addons python3 -m pytest addons/test/test-*.py

notifications:
  irc:
    channels:
      - "irc.freenode.org#cppcheck"
    template:
      - "[%{commit} : %{author}] %{message}"
      - "%{build_url}"
    skip_join: true
