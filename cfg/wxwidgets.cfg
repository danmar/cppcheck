<?xml version="1.0"?>
<def format="2">
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#ga437ea6ba615b75dac8603e96ec864160 -->
  <!-- #define wxT(string) -->
  <define name="wxT(str)" value="str"/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#ga2e7c1f911a731a4b98a85fa44f1d9fbc -->
  <!-- #define wxT_2(string) -->
  <define name="wxT_2(str)" value="str"/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#ga0a06701ea0e6bb00c5171ace1b1f5691 -->
  <!-- #define wxS(string) -->
  <define name="wxS(str)" value="str"/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#ga7dfc2888539861afe6c4337ef315472b -->
  <!-- #define _T(string) -->
  <define name="_T(str)" value="str"/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#gab8862de0f74049708bfea75ae9e14c45 -->
  <!-- #define wxTRANSLATE(string) -->
  <define name="wxTRANSLATE(str)" value="str"/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__string.html#ga8a02b8875a521df57263a9e6f090f2d0 -->
  <!-- const wxString& _(const wxString & string) // Macro that expands to wxGetTranslation -->
  <define name="_(str)" value="wxGetTranslation(str)"/>
  <define name="wxPLURAL(str,plural,n)" value="wxGetTranslation(str,plural,n)"/>
  <define name="wxLongLong_t" value="int64_t"/>
  <define name="wxExit" value="exit"/>
  <!-- wxVector<T> is a template class which implements most of the std::vector functions -->
  <define name="wxVector" value="std::vector"/>
  <define name="wxArrayString" value="std::vector &lt; wxString &gt;"/>
  <define name="wxArrayInt" value="std::vector &lt; int &gt;"/>
  <define name="wxColor" value="wxColour"/>
  <define name="wxOVERRIDE" value="override"/>
  <define name="wxEXPLICIT" value="explicit"/>
  <define name="WX_CHECK_BUILD_OPTIONS(libName)" value=""/>
  <define name="IMPLEMENT_VARIANT_OBJECT_SHALLOWCMP(name)" value=""/>
  <define name="wxICON(name)" value="name"/>
  <define name="wxBITMAP(name)" value="name"/>
  <define name="WXSIZEOF(array)" value="(sizeof(array)/sizeof(array[0]))"/>
  <define name="wx_static_cast(t,x)" value="static_cast&lt;t&gt;(x)"/>
  <define name="wx_const_cast(t,x)" value="const_cast&lt;t&gt;(x)"/>
  <define name="wxDynamicCast(p,classname)" value="dynamic_cast&lt;(classname)&gt;(p)"/>
  <define name="wxConstCast(p,classname)" value="const_cast&lt;(classname)&gt;(p)"/>
  <define name="wxStaticCast(p,classname)" value="static_cast&lt;(classname)&gt;(p)"/>
  <define name="wx_reinterpret_cast(t,x)" value="reinterpret_cast&lt;t&gt;(x)"/>
  <define name="wxPtrToUInt(p)" value="reinterpret_cast&lt; wxUIntPtr &gt;(p)"/>
  <define name="wxUIntToPtr(p)" value="reinterpret_cast&lt; void * &gt;(p)"/>
  <define name="wxEVENT_HANDLER_CAST( functype, func )" value="reinterpret_cast&lt;functype&gt;(&amp;func);"/>
  <define name="wxDLG_UNIT(parent,pt)" value="parent-&lt;ConvertDialogToPixels(pt)"/>
  <define name="wxDL_INIT_FUNC_AW(pfx, name, dynlib)" value=""/>
  <define name="wxDYNLIB_FUNCTION(type, name, dynlib)" value=""/>
  <define name="WX_DEFINE_EXPORTED_LIST(name)" value=""/>
  <define name="IMPLEMENT_HELP_PROVISION(name)" value=""/>
  <define name="WX_EVENT_TABLE_INPUT_CONSUMER(name)" value=""/>
  <define name="wxEVT_NULL" value="wxEventType"/>
  <define name="TAG_HANDLER_BEGIN(a,b)" value=""/>
  <define name="TAG_HANDLER_END(a)" value=""/>
  <define name="TAGS_MODULE_BEGIN(a)" value=""/>
  <define name="TAGS_MODULE_ADD(a)" value=""/>
  <define name="TAGS_MODULE_END(a)" value=""/>
  <define name="EVT_HYPERLINK(id,func)" value=""/>
  <define name="EVT_ICONIZE(a)" value=""/>
  <define name="EVT_DROP_FILES(a)" value=""/>
  <define name="EVT_AUI_FIND_MANAGER(func)" value=""/>
  <define name="EVT_CALCULATE_LAYOUT(func)" value=""/>
  <define name="EVT_JOY_BUTTON_DOWN(func)" value=""/>
  <define name="EVT_JOY_BUTTON_UP(func)" value=""/>
  <define name="EVT_JOY_MOVE(func)" value=""/>
  <define name="EVT_JOY_ZMOVE(func)" value=""/>
  <define name="EVT_JOYSTICK_EVENTS(func)" value=""/>
  <define name="EVT_LIST_ITEM_CHECKED(id,func)" value=""/>
  <define name="EVT_LIST_ITEM_UNCHECKED(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TAB_MIDDLE_DOWN(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TAB_MIDDLE_UP(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TAB_RIGHT_DOWN(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TAB_RIGHT_UP(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TAB_LEFT_DCLICK(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_TOGGLED(id,func)" value=""/>
  <define name="EVT_RIBBONBAR_HELP_CLICK(id,func)" value=""/>
  <define name="EVT_RIBBONBUTTONBAR_CLICKED(id,func)" value=""/>
  <define name="EVT_RIBBONBUTTONBAR_DROPDOWN_CLICKED(id,func)" value=""/>
  <define name="EVT_RIBBONGALLERY_SELECTED(id,func)" value=""/>
  <define name="EVT_RIBBONGALLERY_CLICKED(id,func)" value=""/>
  <define name="EVT_RIBBONGALLERY_HOVER_CHANGED(id,func)" value=""/>
  <define name="EVT_RIBBONPANEL_EXTBUTTON_ACTIVATED(id,func)" value=""/>
  <define name="EVT_RIBBONTOOLBAR_CLICKED(id,func)" value=""/>
  <define name="EVT_RIBBONTOOLBAR_DROPDOWN_CLICKED(id,func)" value=""/>
  <define name="EVT_BOOKCTRL_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_BOOKCTRL_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_SPLITTER_SASH_POS_CHANGING(id,func)" value=""/>
  <define name="EVT_SPLITTER_SASH_POS_CHANGED(id,func)" value=""/>
  <define name="EVT_CHOICEBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_CHOICEBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_SPLITTER_UNSPLIT(id,func)" value=""/>
  <define name="EVT_SPLITTER_DCLICK(id,func)" value=""/>
  <define name="EVT_MENU(id,func)" value=""/>
  <define name="EVT_MENU_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_MENU_OPEN(func)" value=""/>
  <define name="EVT_TOOL_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_TOOL_RCLICKED_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_TOOL_RCLICKED(id,func)" value=""/>
  <define name="EVT_MOUSE_AUX1_DOWN(func)" value=""/>
  <define name="EVT_MOUSE_AUX1_UP(func)" value=""/>
  <define name="EVT_MOUSE_AUX1_DCLICK(func)" value=""/>
  <define name="EVT_MOUSE_AUX2_DOWN(func)" value=""/>
  <define name="EVT_MOUSE_AUX2_UP(func)" value=""/>
  <define name="EVT_MOUSE_AUX2_DCLICK(func)" value=""/>
  <define name="EVT_MENU_CLOSE(func)" value=""/>
  <define name="EVT_MENU_HIGHLIGHT(id,func)" value=""/>
  <define name="EVT_MENU_HIGHLIGHT_ALL(func)" value=""/>
  <define name="EVT_CHECKLISTBOX(id,func)" value=""/>
  <define name="EVT_TREE_BEGIN_DRAG(id,func)" value=""/>
  <define name="EVT_TREE_BEGIN_RDRAG(id,func)" value=""/>
  <define name="EVT_TREE_END_DRAG(id,func)" value=""/>
  <define name="EVT_TREE_BEGIN_LABEL_EDIT(id,func)" value=""/>
  <define name="EVT_TREE_END_LABEL_EDIT(id,func)" value=""/>
  <define name="EVT_TREE_DELETE_ITEM(id,func)" value=""/>
  <define name="EVT_TREE_GET_INFO(id,func)" value=""/>
  <define name="EVT_TREE_SET_INFO(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_ACTIVATED(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_COLLAPSED(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_COLLAPSING(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_EXPANDED(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_EXPANDING(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_MIDDLE_CLICK(id,func)" value=""/>
  <define name="EVT_TREE_SEL_CHANGED(id,func)" value=""/>
  <define name="EVT_TREE_SEL_CHANGING(id,func)" value=""/>
  <define name="EVT_TREE_KEY_DOWN(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_GETTOOLTIP(id,func)" value=""/>
  <define name="EVT_TREE_ITEM_MENU(id,func)" value=""/>
  <define name="EVT_TREE_STATE_IMAGE_CLICK(id,func)" value=""/>
  <define name="EVT_SEARCH(id,func)" value=""/>
  <define name="EVT_SEARCH_CANCEL(id,func)" value=""/>
  <define name="EVT_SEARCHCTRL_CANCEL_BTN(id,func)" value=""/>
  <define name="EVT_SEARCHCTRL_SEARCH_BTN(id,func)" value=""/>
  <define name="EVT_HTML_CELL_CLICKED(id,func)" value=""/>
  <define name="EVT_SYS_COLOUR_CHANGED(func)" value=""/>
  <define name="EVT_HTML_CELL_HOVER(id,func)" value=""/>
  <define name="EVT_HTML_LINK_CLICKED(id,func)" value=""/>
  <define name="EVT_MENU(id,func)" value=""/>
  <define name="EVT_BUTTON(id,func)" value=""/>
  <define name="EVT_UPDATE_UI(id,func)" value=""/>
  <define name="EVT_UPDATE_UI_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_TOGGLEBUTTON(id,func)" value=""/>
  <define name="EVT_SPINCTRLDOUBLE(id,func)" value=""/>
  <define name="EVT_SPINCTRL(id,func)" value=""/>
  <define name="EVT_SPIN(id,func)" value=""/>
  <define name="EVT_SPIN_UP(id,func)" value=""/>
  <define name="EVT_SPIN_DOWN(id,func)" value=""/>
  <define name="EVT_SOCKET(id,func)" value=""/>
  <define name="EVT_DATAVIEW_SELECTION_CHANGED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_ACTIVATED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_EDITING_STARTED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_EDITING_DONE(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_COLLAPSING(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_COLLAPSED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_EXPANDING(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_EXPANDED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_VALUE_CHANGED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_CONTEXT_MENU(id,func)" value=""/>
  <define name="EVT_DATAVIEW_COLUMN_HEADER_CLICK(id,func)" value=""/>
  <define name="EVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_DATAVIEW_COLUMN_SORTED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_COLUMN_REORDERED(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_BEGIN_DRAG(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_DROP_POSSIBLE(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_DROP(id,func)" value=""/>
  <define name="EVT_DATAVIEW_CACHE_HINT(id,func)" value=""/>
  <define name="EVT_DATAVIEW_ITEM_START_EDITING(id,func)" value=""/>
  <define name="EVT_RADIOBUTTON(id,func)" value=""/>
  <define name="EVT_SASH_DRAGGED_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_CHECKBOX(id,func)" value=""/>
  <define name="EVT_TIMER(id,func)" value=""/>
  <define name="EVT_TEXT(id,func)" value=""/>
  <define name="EVT_TOOLBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_TOOLBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_CALENDAR(id,func)" value=""/>
  <define name="EVT_CALENDAR_SEL_CHANGED(id,func)" value=""/>
  <define name="EVT_CALENDAR_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_CALENDAR_WEEKDAY_CLICKED(id,func)" value=""/>
  <define name="EVT_CALENDAR_WEEK_CLICKED(id,func)" value=""/>
  <define name="EVT_CALENDAR_DAY(id,func)" value=""/>
  <define name="EVT_CALENDAR_MONTH(id,func)" value=""/>
  <define name="EVT_CALENDAR_YEAR(id,func)" value=""/>
  <define name="EVT_WIZARD_PAGE_SHOWN(id,func)" value=""/>
  <define name="EVT_WIZARD_FINISHED(id,func)" value=""/>
  <define name="EVT_WIZARD_HELP(id,func)" value=""/>
  <define name="EVT_END_PROCESS(id,func)" value=""/>
  <define name="EVT_COLLAPSIBLEPANE_CHANGED(id,func)" value=""/>
  <define name="EVT_WIZARD_CANCEL(id,func)" value=""/>
  <define name="EVT_COLOURPICKER_CHANGED(id,func)" value=""/>
  <define name="EVT_HEADER_CLICK(id,func)" value=""/>
  <define name="EVT_HEADER_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_HEADER_MIDDLE_CLICK(id,func)" value=""/>
  <define name="EVT_HEADER_DCLICK(id,func)" value=""/>
  <define name="EVT_HEADER_RIGHT_DCLICK(id,func)" value=""/>
  <define name="EVT_HEADER_MIDDLE_DCLICK(id,func)" value=""/>
  <define name="EVT_HEADER_SEPARATOR_DCLICK(id,func)" value=""/>
  <define name="EVT_HEADER_BEGIN_RESIZE(id,func)" value=""/>
  <define name="EVT_HEADER_RESIZING(id,func)" value=""/>
  <define name="EVT_HEADER_END_RESIZE(id,func)" value=""/>
  <define name="EVT_HEADER_BEGIN_REORDER(id,func)" value=""/>
  <define name="EVT_HEADER_END_REORDER(id,func)" value=""/>
  <define name="EVT_HEADER_DRAGGING_CANCELLED(id,func)" value=""/>
  <define name="EVT_LISTBOX(id,func)" value=""/>
  <define name="EVT_LISTBOX_DCLICK(id,func)" value=""/>
  <define name="EVT_COMMAND(id,event,func)" value=""/>
  <define name="EVT_COMMAND_RANGE(id1,id2,event,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL(id,func)" value=""/>
  <define name="EVT_TOOL_ENTER(id,func)" value=""/>
  <define name="EVT_TOOL_DROPDOWN(id,func)" value=""/>
  <define name="EVT_COMMAND_LEFT_CLICK(id,func)" value=""/>
  <define name="EVT_COMMAND_LEFT_DCLICK(id,func)" value=""/>
  <define name="EVT_COMMAND_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_COMMAND_SET_FOCUS(id,func)" value=""/>
  <define name="EVT_COMMAND_KILL_FOCUS(id,func)" value=""/>
  <define name="EVT_COMMAND_ENTER(id,func)" value=""/>
  <define name="EVT_FIND(id,func)" value=""/>
  <define name="EVT_FIND_NEXT(id,func)" value=""/>
  <define name="EVT_FIND_REPLACE(id,func)" value=""/>
  <define name="EVT_FIND_REPLACE_ALL(id,func)" value=""/>
  <define name="EVT_FIND_CLOSE(id,func)" value=""/>
  <define name="EVT_SET_CURSOR(func)" value=""/>
  <define name="EVT_MIDDLE_DCLICK(func)" value=""/>
  <define name="EVT_CONTEXT_MENU(func)" value=""/>
  <define name="EVT_IDLE(func)" value=""/>
  <define name="EVT_TEXT_URL(id,func)" value=""/>
  <define name="EVT_TEXT_MAXLEN(id,func)" value=""/>
  <define name="EVT_SCROLLWIN(func)" value=""/>
  <define name="EVT_SCROLLWIN_TOP(func)" value=""/>
  <define name="EVT_SCROLLWIN_BOTTOM(func)" value=""/>
  <define name="EVT_SCROLLWIN_LINEUP(func)" value=""/>
  <define name="EVT_SCROLLWIN_LINEDOWN(func)" value=""/>
  <define name="EVT_SCROLLWIN_PAGEUP(func)" value=""/>
  <define name="EVT_SCROLLWIN_PAGEDOWN(func)" value=""/>
  <define name="EVT_SCROLLWIN_THUMBTRACK(func)" value=""/>
  <define name="EVT_SCROLLWIN_THUMBRELEASE(func)" value=""/>
  <define name="EVT_AUITOOLBAR_TOOL_DROPDOWN(id,func)" value=""/>
  <define name="EVT_AUITOOLBAR_OVERFLOW_CLICK(id,func)" value=""/>
  <define name="EVT_AUITOOLBAR_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_AUITOOLBAR_MIDDLE_CLICK(id,func)" value=""/>
  <define name="EVT_SHOW(func)" value=""/>
  <define name="EVT_MOVE(func)" value=""/>
  <define name="EVT_MOVE_START(func)" value=""/>
  <define name="EVT_MOVING(func)" value=""/>
  <define name="EVT_MOVE_END(func)" value=""/>
  <define name="EVT_TOOL(id,func)" value=""/>
  <define name="EVT_INIT_DIALOG(func)" value=""/>
  <define name="EVT_SLIDER(id,func)" value=""/>
  <define name="EVT_RADIOBOX(id,func)" value=""/>
  <define name="EVT_WIZARD_BEFORE_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_NOTEBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_NOTEBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_FILEPICKER_CHANGED(id,func)" value=""/>
  <define name="EVT_TIME_CHANGED(id,func)" value=""/>
  <define name="EVT_CUSTOM(event,id,func)" value=""/>
  <define name="EVT_NOTIFY(event,id,func)" value=""/>
  <define name="EVT_CUSTOM_RANGE(event,id1,id2, func)" value=""/>
  <define name="EVT_NOTIFY_RANGE(event,id1,id2, func)" value=""/>
  <define name="EVT_UPDATE_UI(id,func)" value=""/>
  <define name="EVT_CHOICE(id,func)" value=""/>
  <define name="EVT_PG_SELECTED(id,func)" value=""/>
  <define name="EVT_PG_CHANGING(id,func)" value=""/>
  <define name="EVT_PG_CHANGED(id,func)" value=""/>
  <define name="EVT_PG_HIGHLIGHTED(id,func)" value=""/>
  <define name="EVT_PG_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_PG_DOUBLE_CLICK(id,func)" value=""/>
  <define name="EVT_PG_ITEM_COLLAPSED(id,func)" value=""/>
  <define name="EVT_PG_ITEM_EXPANDED(id,func)" value=""/>
  <define name="EVT_PG_LABEL_EDIT_BEGIN(id,func)" value=""/>
  <define name="EVT_PG_LABEL_EDIT_ENDING(id,func)" value=""/>
  <define name="EVT_PG_COL_BEGIN_DRAG(id,func)" value=""/>
  <define name="EVT_PG_COL_DRAGGING(id,func)" value=""/>
  <define name="EVT_PG_COL_END_DRAG(id,func)" value=""/>
  <define name="EVT_COMBOBOX(id,func)" value=""/>
  <define name="EVT_GRID_CMD_LABEL_LEFT_DCLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_LABEL_RIGHT_DCLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_LABEL_LEFT_CLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_LABEL_RIGHT_CLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_CELL_RIGHT_DCLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_CELL_CHANGE(id,func)" value=""/>
  <define name="EVT_GRID_CMD_CELL_CHANGED(id,func)" value=""/>
  <define name="EVT_GRID_CMD_CELL_LEFT_CLICK(id,func)" value=""/>
  <define name="EVT_GRID_CMD_SELECT_CELL(id,func)" value=""/>
  <define name="EVT_GRID_CMD_EDITOR_HIDDEN(id,func)" value=""/>
  <define name="EVT_GRID_CMD_EDITOR_SHOWN(id,func)" value=""/>
  <define name="EVT_COLOURPICKER_CHANGED(id,func)" value=""/>
  <define name="EVT_COLOURPICKER_CURRENT_CHANGED(id,func)" value=""/>
  <define name="EVT_COLOURPICKER_DIALOG_CANCELLED(id,func)" value=""/>
  <define name="EVT_COLLAPSIBLEHEADER_CHANGED(id,func)" value=""/>
  <define name="EVT_DIRCTRL_SELECTIONCHANGED(id,func)" value=""/>
  <define name="EVT_DIRCTRL_FILEACTIVATED(id,func)" value=""/>
  <define name="EVT_FILECTRL_FILEACTIVATED(id,func)" value=""/>
  <define name="EVT_FILECTRL_SELECTIONCHANGED(id,func)" value=""/>
  <define name="EVT_FILECTRL_FOLDERCHANGED(id,func)" value=""/>
  <define name="EVT_FILECTRL_FILTERCHANGED(id,func)" value=""/>
  <define name="EVT_LISTBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_LISTBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_TREEBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_TREEBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_TREEBOOK_NODE_COLLAPSED(id,func)" value=""/>
  <define name="EVT_TREEBOOK_NODE_EXPANDED(id,func)" value=""/>
  <define name="EVT_TREELIST_SELECTION_CHANGED(id,func)" value=""/>
  <define name="EVT_TREELIST_ITEM_EXPANDING(id,func)" value=""/>
  <define name="EVT_TREELIST_ITEM_EXPANDED(id,func)" value=""/>
  <define name="EVT_TREELIST_ITEM_CHECKED(id,func)" value=""/>
  <define name="EVT_TREELIST_ITEM_ACTIVATED(id,func)" value=""/>
  <define name="EVT_TREELIST_ITEM_CONTEXT_MENU(id,func)" value=""/>
  <define name="EVT_TREELIST_COLUMN_SORTED(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_PAGE_CLOSE(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_PAGE_CLOSED(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_BUTTON(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_BEGIN_DRAG(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_END_DRAG(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_DRAG_MOTION(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_ALLOW_DND(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_DRAG_DONE(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_TAB_MIDDLE_DOWN(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_TAB_MIDDLE_UP(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_TAB_RIGHT_DOWN(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_TAB_RIGHT_UP(id,func)" value=""/>
  <define name="EVT_AUINOTEBOOK_BG_DCLICK(id,func)" value=""/>
  <define name="EVT_WIZARD_PAGE_CHANGED(id,func)" value=""/>
  <define name="EVT_WIZARD_PAGE_CHANGING(id,func)" value=""/>
  <define name="EVT_DATE_CHANGED(id,func)" value=""/>
  <define name="EVT_CHILD_FOCUS(func)" value=""/>
  <define name="EVT_WEBVIEW_NAVIGATING(id,func)" value=""/>
  <define name="EVT_WEBVIEW_NAVIGATED(id,func)" value=""/>
  <define name="EVT_WEBVIEW_LOADED(id,func)" value=""/>
  <define name="EVT_WEBVIEW_ERROR(id,func)" value=""/>
  <define name="EVT_WEBVIEW_NEWWINDOW(id,func)" value=""/>
  <define name="EVT_WEBVIEW_TITLE_CHANGED(id,func)" value=""/>
  <define name="EVT_HELP(id,func)" value=""/>
  <define name="EVT_HELP_RANGE(id1,id2,func)" value=""/>
  <define name="EVT_ACTIVATE(func)" value=""/>
  <define name="EVT_ACTIVATE_APP(func)" value=""/>
  <define name="EVT_HIBERNATE(func)" value=""/>
  <define name="EVT_SIZE(func)" value=""/>
  <define name="EVT_SET_FOCUS(func)" value=""/>
  <define name="EVT_PAINT(func)" value=""/>
  <define name="EVT_NC_PAINT(func)" value=""/>
  <define name="EVT_LEFT_DOWN(func)" value=""/>
  <define name="EVT_LEFT_UP(func)" value=""/>
  <define name="EVT_DIRPICKER_CHANGED(func)" value=""/>
  <define name="EVT_RIGHT_DCLICK(func)" value=""/>
  <define name="EVT_RIGHT_DOWN(func)" value=""/>
  <define name="EVT_MOTION(func)" value=""/>
  <define name="EVT_MIDDLE_UP(func)" value=""/>
  <define name="EVT_MOUSEWHEEL(func)" value=""/>
  <define name="EVT_MOUSE_CAPTURE_LOST(func)" value=""/>
  <define name="EVT_RIGHT_UP(func)" value=""/>
  <define name="EVT_KEY_DOWN(func)" value=""/>
  <define name="EVT_KEY_UP(func)" value=""/>
  <define name="EVT_LEFT_DCLICK(func)" value=""/>
  <define name="EVT_MOTION(func)" value=""/>
  <define name="EVT_ENTER_WINDOW(func)" value=""/>
  <define name="EVT_LEAVE_WINDOW(func)" value=""/>
  <define name="EVT_MOUSEWHEEL(func)" value=""/>
  <define name="EVT_MOUSE_EVENTS(func)" value=""/>
  <define name="EVT_CHAR(func)" value=""/>
  <define name="EVT_CHAR_HOOK(func)" value=""/>
  <define name="EVT_TEXT_COPY(id,func)" value=""/>
  <define name="EVT_TEXT_CUT(id,func)" value=""/>
  <define name="EVT_TEXT_PASTE(id,func)" value=""/>
  <define name="EVT_CLOSE(func)" value=""/>
  <define name="EVT_QUERY_END_SESSION(func)" value=""/>
  <define name="EVT_END_SESSION(func)" value=""/>
  <define name="EVT_MAXIMIZE(func)" value=""/>
  <define name="EVT_TASKBAR_LEFT_DCLICK(func)" value=""/>
  <define name="EVT_TASKBAR_LEFT_DOWN(func)" value=""/>
  <define name="EVT_TASKBAR_LEFT_UP(func)" value=""/>
  <define name="EVT_SCROLL(func)" value=""/>
  <define name="EVT_SCROLL_TOP(func)" value=""/>
  <define name="EVT_SCROLL_BOTTOM(func)" value=""/>
  <define name="EVT_SCROLL_LINEUP(func)" value=""/>
  <define name="EVT_SCROLL_LINEDOWN(func)" value=""/>
  <define name="EVT_SCROLL_PAGEUP(func)" value=""/>
  <define name="EVT_SCROLL_PAGEDOWN(func)" value=""/>
  <define name="EVT_SCROLL_THUMBTRACK(func)" value=""/>
  <define name="EVT_SCROLL_THUMBRELEASE(func)" value=""/>
  <define name="EVT_SCROLL_CHANGED(func)" value=""/>
  <define name="EVT_WINDOW_CREATE(func)" value=""/>
  <define name="EVT_FONTPICKER_CHANGED(id,func)" value=""/>
  <define name="EVT_THREAD(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_TOP(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_BOTTOM(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_LINEUP(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_LINEDOWN(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_PAGEUP(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_PAGEDOWN(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_THUMBTRACK(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_THUMBRELEASE(id,func)" value=""/>
  <define name="EVT_COMMAND_SCROLL_CHANGED(id,func)" value=""/>
  <define name="EVT_DPI_CHANGED(func)" value=""/>
  <define name="EVT_KILL_FOCUS(func)" value=""/>
  <define name="EVT_MOUSE_CAPTURE_CHANGED(func)" value=""/>
  <define name="EVT_PALETTE_CHANGED(func)" value=""/>
  <define name="EVT_MOUSE_EVENTS(func)" value=""/>
  <define name="EVT_MIDDLE_DOWN(func)" value=""/>
  <define name="EVT_AUI_PANE_BUTTON(func)" value=""/>
  <define name="EVT_AUI_PANE_CLOSE(func)" value=""/>
  <define name="EVT_AUI_PANE_MAXIMIZE(func)" value=""/>
  <define name="EVT_AUI_PANE_RESTORE(func)" value=""/>
  <define name="EVT_AUI_PANE_ACTIVATED(func)" value=""/>
  <define name="EVT_AUI_RENDER(func)" value=""/>
  <define name="EVT_GRID_COL_SORT(func)" value=""/>
  <define name="EVT_GRID_RANGE_SELECT(func)" value=""/>
  <define name="EVT_GRID_ROW_SIZE(func)" value=""/>
  <define name="EVT_GRID_COL_SIZE(func)" value=""/>
  <define name="EVT_GRID_COL_MOVE(func)" value=""/>
  <define name="EVT_GRID_COL_AUTO_SIZE(func)" value=""/>
  <define name="EVT_GRID_LABEL_RIGHT_DCLICK(func)" value=""/>
  <define name="EVT_GRID_LABEL_LEFT_DCLICK(func)" value=""/>
  <define name="EVT_GRID_LABEL_RIGHT_CLICK(func)" value=""/>
  <define name="EVT_GRID_LABEL_LEFT_CLICK(func)" value=""/>
  <define name="EVT_GRID_CELL_RIGHT_DCLICK(func)" value=""/>
  <define name="EVT_GRID_CELL_RIGHT_CLICK(func)" value=""/>
  <define name="EVT_GRID_CELL_LEFT_DCLICK(func)" value=""/>
  <define name="EVT_GRID_EDITOR_SHOWN(func)" value=""/>
  <define name="EVT_GRID_EDITOR_HIDDEN(func)" value=""/>
  <define name="EVT_GRID_EDITOR_CREATED(func)" value=""/>
  <define name="wx__DECLARE_EVT2(evt, id1, id2, fn)" value=""/>
  <define name="wx__DECLARE_EVT1(evt, id, fn)" value=""/>
  <define name="wx__DECLARE_EVT0(evt,fn)" value=""/>
  <!-- wxEVT_GRID_CELL_CHANGE event has been renamed to wxEVT_GRID_CELL_CHANGED since wxWidgets-2.8.x-->
  <define name="EVT_GRID_CELL_CHANGE(func)" value=""/>
  <define name="EVT_GRID_CELL_CHANGED(func)" value=""/>
  <define name="EVT_GRID_CELL_CHANGING(func)" value=""/>
  <define name="EVT_GRID_SELECT_CELL(func)" value=""/>
  <define name="EVT_GRID_CELL_LEFT_CLICK(func)" value=""/>
  <define name="EVT_GRID_CELL_BEGIN_DRAG(func)" value=""/>
  <define name="EVT_GRID_TABBING(func)" value=""/>
  <define name="EVT_ERASE_BACKGROUND(func)" value=""/>
  <define name="EVT_LIST_BEGIN_DRAG(id, func)" value=""/>
  <define name="EVT_LIST_BEGIN_RDRAG(id, func)" value=""/>
  <define name="EVT_LIST_BEGIN_LABEL_EDIT(id, func)" value=""/>
  <define name="EVT_LIST_END_LABEL_EDIT(id, func)" value=""/>
  <define name="EVT_LIST_DELETE_ITEM(id, func)" value=""/>
  <define name="EVT_LIST_DELETE_ALL_ITEMS(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_SELECTED(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_DESELECTED(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_ACTIVATED(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_FOCUSED(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_MIDDLE_CLICK(id, func)" value=""/>
  <define name="EVT_LIST_ITEM_RIGHT_CLICK(id, func)" value=""/>
  <define name="EVT_LIST_KEY_DOWN(id, func)" value=""/>
  <define name="EVT_LIST_INSERT_ITEM(id, func)" value=""/>
  <define name="EVT_LIST_COL_CLICK(id, func)" value=""/>
  <define name="EVT_LIST_COL_RIGHT_CLICK(id, func)" value=""/>
  <define name="EVT_LIST_COL_BEGIN_DRAG(id, func)" value=""/>
  <define name="EVT_LIST_COL_DRAGGING(id, func)" value=""/>
  <define name="EVT_LIST_COL_END_DRAG(id, func)" value=""/>
  <define name="EVT_LIST_CACHE_HINT(id, func)" value=""/>
  <define name="EVT_NAVIGATION_KEY(func)" value=""/>
  <define name="EVT_STC_CHANGE(id, fn)" value=""/>
  <define name="EVT_STC_STYLENEEDED(id, fn)" value=""/>
  <define name="EVT_STC_CHARADDED(id, fn)" value=""/>
  <define name="EVT_STC_SAVEPOINTREACHED(id, fn)" value=""/>
  <define name="EVT_STC_SAVEPOINTLEFT(id, fn)" value=""/>
  <define name="EVT_STC_ROMODIFYATTEMPT(id, fn)" value=""/>
  <define name="EVT_STC_KEY(id, fn)" value=""/>
  <define name="EVT_STC_DOUBLECLICK(id, fn)" value=""/>
  <define name="EVT_STC_UPDATEUI(id, fn)" value=""/>
  <define name="EVT_STC_MODIFIED(id, fn)" value=""/>
  <define name="EVT_STC_MACRORECORD(id, fn)" value=""/>
  <define name="EVT_STC_MARGINCLICK(id, fn)" value=""/>
  <define name="EVT_STC_NEEDSHOWN(id, fn)" value=""/>
  <define name="EVT_STC_PAINTED(id, fn)" value=""/>
  <define name="EVT_STC_USERLISTSELECTION(id, fn)" value=""/>
  <define name="EVT_STC_URIDROPPED(id, fn)" value=""/>
  <define name="EVT_STC_DWELLEND(id, fn)" value=""/>
  <define name="EVT_STC_START_DRAG(id, fn)" value=""/>
  <define name="EVT_STC_DRAG_OVER(id, fn)" value=""/>
  <define name="EVT_STC_DO_DROP(id, fn)" value=""/>
  <define name="EVT_STC_ZOOM(id, fn)" value=""/>
  <define name="EVT_STC_HOTSPOT_CLICK(id, fn)" value=""/>
  <define name="EVT_STC_HOTSPOT_DCLICK(id, fn)" value=""/>
  <define name="EVT_STC_CALLTIP_CLICK(id, fn)" value=""/>
  <define name="EVT_STC_AUTOCOMP_SELECTION(id, fn)" value=""/>
  <define name="EVT_STC_INDICATOR_CLICK(id, fn)" value=""/>
  <define name="EVT_STC_INDICATOR_RELEASE(id, fn)" value=""/>
  <define name="EVT_STC_AUTOCOMP_CANCELLED(id, fn)" value=""/>
  <define name="EVT_STC_AUTOCOMP_CHAR_DELETED(id, fn)" value=""/>
  <define name="EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn)" value=""/>
  <define name="EVT_TEXT_ENTER(id, fn)" value=""/>
  <define name="EVT_COMBOBOX_DROPDOWN(id, fn)" value=""/>
  <define name="EVT_COMBOBOX_CLOSEUP(id, fn)" value=""/>
  <define name="DECLARE_EVENT_TABLE()" value=""/>
  <define name="wxNO_LEN" value="((size_t)-1)"/>
  <define name="wxDECLARE_EVENT_TABLE()" value=""/>
  <define name="wxIMPLEMENT_APP(appname)" value=""/>
  <define name="IMPLEMENT_APP(appname)" value=""/>
  <define name="wxIMPLEMENT_APP_CONSOLE(appname)" value=""/>
  <define name="IMPLEMENT_APP_CONSOLE(appname)" value=""/>
  <define name="wxIMPLEMENT_WX_THEME_SUPPORT" value=""/>
  <define name="IMPLEMENT_WX_THEME_SUPPORT" value=""/>
  <define name="wxIMPLEMENT_APP_NO_THEMES(appname)" value=""/>
  <define name="IMPLEMENT_APP_NO_THEMES(appname)" value=""/>
  <define name="wxIMPLEMENT_APP_WXWIN_MAIN" value=""/>
  <define name="wxDISABLE_DEBUG_SUPPORT" value=""/>
  <define name="wxIMPLEMENT_WXWIN_MAIN" value=""/>
  <define name="IMPLEMENT_WXWIN_MAIN" value=""/>
  <define name="wxIMPLEMENT_WXWIN_MAIN_CONSOLE" value=""/>
  <define name="IMPLEMENT_WXWIN_MAIN_CONSOLE" value=""/>
  <define name="wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD" value=""/>
  <define name="wxIMPLEMENT_APP_NO_MAIN(appname)" value=""/>
  <define name="IMPLEMENT_APP_NO_MAIN(appname)" value=""/>
  <!-- Override macros which don't necessarily require semicolons at the end -->
  <define name="WXUNUSED(n)" value=""/>
  <define name="wxDELETE(ptr)" value="{ delete ptr; ptr = NULL; }"/>
  <define name="wxDELETEA(ptr)" value="{ delete [] ptr; ptr = NULL; }"/>
  <define name="WXDLLIMPEXP_FWD_CORE" value=""/>
  <define name="WXDLLIMPEXP_FWD_BASE" value=""/>
  <define name="WXDLLIMPEXP_CORE" value=""/>
  <define name="WXDLLIMPEXP_PROPGRID" value=""/>
  <define name="WXDLLIMPEXP_BASE" value=""/>
  <define name="WXDLLIMPEXP_ADV" value=""/>
  <define name="WXDLLIMPEXP_FWD_HTML" value=""/>
  <define name="WXDLLIMPEXP_HTML" value=""/>
  <define name="wxUSE_NESTED_CLASSES" value="1"/>
  <define name="WX_APPEND_ARRAY(wxArray_arrayToModify, wxArray_arrayToBeAppended)" value=""/>
  <define name="WX_CLEAR_ARRAY(wxArray_arrayToBeCleared)" value=""/>
  <define name="WX_PREPEND_ARRAY(wxArray_arrayToModify, wxArray_arrayToBePrepended)" value=""/>
  <define name="WX_DECLARE_OBJARRAY(T, name)" value=""/>
  <define name="WX_DECLARE_EXPORTED_OBJARRAY(T, name)" value=""/>
  <define name="WX_DECLARE_USER_EXPORTED_OBJARRAY(T, name, expmode)" value=""/>
  <define name="WX_DEFINE_ARRAY(T, name)" value=""/>
  <define name="WX_DEFINE_EXPORTED_ARRAY(T, name)" value=""/>
  <define name="WX_DEFINE_USER_EXPORTED_ARRAY(T, name, exportspec)" value=""/>
  <define name="WX_DEFINE_OBJARRAY(name)" value=""/>
  <define name="WX_DEFINE_LIST(name)" value=""/>
  <define name="WX_DEFINE_EXPORTED_OBJARRAY(name)" value=""/>
  <define name="WX_DEFINE_USER_EXPORTED_OBJARRAY(name)" value=""/>
  <define name="WX_DEFINE_SORTED_ARRAY(T, name)" value=""/>
  <define name="WX_DEFINE_SORTED_EXPORTED_ARRAY(T, name)" value=""/>
  <define name="WX_DEFINE_SORTED_USER_EXPORTED_ARRAY(T, name, expmode)" value=""/>
  <define name="wxDECLARE_DYNAMIC_CLASS(class)" value=""/>
  <define name="wxDECLARE_DYNAMIC_CLASS_NO_ASSIGN(class)" value=""/>
  <define name="wxDEPRECATED_CONSTRUCTOR(ctor)" value=""/>
  <define name="WXDLLIMPEXP_DATA_CORE(ctor)" value=""/>
  <define name="wxDECLARE_APP(MyApp)" value="extern appname&amp; wxGetApp()"/>
  <define name="DECLARE_APP(MyApp)" value="extern appname&amp; wxGetApp()"/>
  <define name="DECLARE_CLASS(n)" value=""/>
  <define name="CLASSINFO(n)" value="wxCLASSINFO(n)"/>
  <define name="IMPLEMENT_ABSTRACT_CLASS2(n,b1,b2)" value="wxIMPLEMENT_ABSTRACT_CLASS2(n,b1,b2)"/>
  <define name="IMPLEMENT_ABSTRACT_PLUGGABLE_CLASS(n,b)" value="wxIMPLEMENT_ABSTRACT_PLUGGABLE_CLASS(n,b)"/>
  <define name="IMPLEMENT_ABSTRACT_PLUGGABLE_CLASS2(n,b,b2)" value="wxIMPLEMENT_ABSTRACT_PLUGGABLE_CLASS2(n,b,b2)"/>
  <define name="IMPLEMENT_CLASS2(n,b1,b2)" value="wxIMPLEMENT_CLASS2(n,b1,b2)"/>
  <define name="IMPLEMENT_DYNAMIC_CLASS2(n,b1,b2)" value="wxIMPLEMENT_DYNAMIC_CLASS2(n,b1,b2)"/>
  <define name="IMPLEMENT_PLUGGABLE_CLASS(n,b)" value="wxIMPLEMENT_PLUGGABLE_CLASS(n,b)"/>
  <define name="IMPLEMENT_PLUGGABLE_CLASS2(n,b,b2)" value="wxIMPLEMENT_PLUGGABLE_CLASS2(n,b,b2)"/>
  <define name="IMPLEMENT_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS(n,b)" value="wxIMPLEMENT_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS(n,b)"/>
  <define name="IMPLEMENT_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS2(n,b,b2)" value="wxIMPLEMENT_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS2(n,b,b2)"/>
  <define name="IMPLEMENT_USER_EXPORTED_PLUGGABLE_CLASS(n,b)" value="wxIMPLEMENT_USER_EXPORTED_PLUGGABLE_CLASS(n,b)"/>
  <define name="IMPLEMENT_USER_EXPORTED_PLUGGABLE_CLASS2(n,b,b2)" value="wxIMPLEMENT_USER_EXPORTED_PLUGGABLE_CLASS2(n,b,b2)"/>
  <define name="DECLARE_ABSTRACT_PLUGGABLE_CLASS(n)" value="wxDECLARE_ABSTRACT_PLUGGABLE_CLASS(n);"/>
  <define name="DECLARE_CLASS_INFO_ITERATORS()" value="wxDECLARE_CLASS_INFO_ITERATORS();"/>
  <define name="DECLARE_DYNAMIC_CLASS_NO_ASSIGN(n)" value="wxDECLARE_DYNAMIC_CLASS_NO_ASSIGN(n);"/>
  <define name="DECLARE_DYNAMIC_CLASS_NO_COPY(n)" value="wxDECLARE_DYNAMIC_CLASS_NO_COPY(n);"/>
  <define name="DECLARE_PLUGGABLE_CLASS(n)" value="wxDECLARE_PLUGGABLE_CLASS(n);"/>
  <define name="DECLARE_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS(n,u)" value="wxDECLARE_USER_EXPORTED_ABSTRACT_PLUGGABLE_CLASS(n,u);"/>
  <define name="DECLARE_USER_EXPORTED_PLUGGABLE_CLASS(n,u)" value="wxDECLARE_USER_EXPORTED_PLUGGABLE_CLASS(n,u);"/>
  <define name="DECLARE_DYNAMIC_CLASS(n)" value=""/>
  <define name="wxDECLARE_ABSTRACT_CLASS(n)" value=""/>
  <define name="IMPLEMENT_CLASS(a,b)" value=""/>
  <define name="wxIMPLEMENT_CLASS(a,b)" value=""/>
  <define name="DECLARE_ABSTRACT_CLASS(n)" value=""/>
  <define name="IMPLEMENT_DYNAMIC_CLASS(n,b)" value=""/>
  <define name="IMPLEMENT_ABSTRACT_CLASS(n,b)" value=""/>
  <define name="wxDECLARE_EXPORTED_EVENT(n,b,c)" value=""/>
  <define name="DECLARE_EVENT_TYPE(name, value)" value=""/>
  <define name="BEGIN_DECLARE_EVENT_TYPES()" value=""/>
  <define name="END_DECLARE_EVENT_TYPES()" value=""/>
  <define name="DECLARE_EXPORTED_EVENT_TYPE(expdecl, name, value)" value=""/>
  <define name="DECLARE_EVENT_TYPE(name, value)" value=""/>
  <define name="DECLARE_LOCAL_EVENT_TYPE(name, value)" value=""/>
  <define name="DEFINE_EVENT_TYPE(name)" value="const wxEventType name = wxNewEventType();"/>
  <define name="DEFINE_LOCAL_EVENT_TYPE(name)" value=""/>
  <define name="WX_DECLARE_STRING_HASH_MAP(name, value)" value=""/>
  <define name="DECLARE_LOCAL_EVENT_TYPE(name, value)" value=""/>
  <define name="DEFINE_LOCAL_EVENT_TYPE(name)" value=""/>
  <define name="wxDECLARE_EVENT( name, type )" value=""/>
  <define name="WX_DEFINE_ARRAY_PTR( name, type )" value=""/>
  <define name="WX_DECLARE_OBJARRAY_WITH_DECL( a, b, c )" value=""/>
  <define name="DECLARE_NO_COPY_CLASS(classname)" value="private: classname(const classname&amp;); classname&amp; operator=(const classname&amp;)"/>
  <define name="wxDECLARE_NO_COPY_CLASS(classname)" value="private: classname(const classname&amp;); classname&amp; operator=(const classname&amp;)"/>
  <define name="DECLARE_NO_ASSIGN_CLASS(classname)" value="private: classname&amp; operator=(const classname&amp;)"/>
  <define name="wxDECLARE_NO_ASSIGN_CLASS(classname)" value="private: classname&amp; operator=(const classname&amp;)"/>
  <define name="DECLARE_NO_COPY_TEMPLATE_CLASS(classname,arg)" value="private: classname(const classname&lt;arg&gt;&amp;); classname&amp; operator=(const classname&lt;arg&gt;&amp;)"/>
  <define name="wxDECLARE_NO_COPY_TEMPLATE_CLASS(classname,arg)" value="private: classname(const classname&lt;arg&gt;&amp;); classname&amp; operator=(const classname&lt;arg&gt;&amp;)"/>
  <define name="wxDECLARE_NO_COPY_TEMPLATE_CLASS_2(classname,arg1,arg2)" value="private: classname(const classname&lt;arg1, arg2&gt;&amp;); classname&amp; operator=(const classname&lt;arg1, arg2&gt;&amp;)"/>
  <define name="wxDEFINE_EVENT(name,type)" value=""/>
  <define name="BEGIN_EVENT_TABLE(a,b)" value="BeginEventTable("/>
  <define name="END_EVENT_TABLE()" value="EndEventTable);"/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE1(a,b,T1)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE2(a,b,T1,T2)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE3(a,b,T1,T2,T3)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE4(a,b,T1,T2,T3,T4)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE5(a,b,T1,T2,T3,T4,T5)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE6(a,b,T1,T2,T3,T4,T5,T6)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE7(a,b,T1,T2,T3,T4,T5,T6,T7)" value=""/>
  <define name="BEGIN_EVENT_TABLE_TEMPLATE8(a,b,T1,T2,T3,T4,T5,T6,T7,T8)" value=""/>
  <define name="wxBEGIN_EVENT_TABLE(theClass, baseClass)" value=""/>
  <define name="wxDECLARE_EVENT_TABLE_ENTRY(type, winid, idLast, fn, obj)" value="wxEventTableEntry(type, winid, idLast, wxNewEventTableFunctor(type, fn), obj)"/>
  <define name="wxDECLARE_EVENT_TABLE_TERMINATOR()" value=""/>
  <define name="wxDEFINE_EVENT_ALIAS( name, type, value )" value=""/>
  <define name="wxDECLARE_EXPORTED_EVENT_ALIAS( expdecl, name, type )" value=""/>
  <define name="wxEND_EVENT_TABLE()" value=""/>
  <define name="wxDECLARE_EVENT_TABLE_TERMINATOR()" value=""/>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__debug.html -->
  <!-- #define wxASSERT(condition) -->
  <define name="wxASSERT(condition)" value="assert(condition)"/>
  <!-- #define wxASSERT_MSG(condition, message) -->
  <define name="wxASSERT_MSG(condition, message)" value="assert(condition)"/>
  <!-- #define wxASSERT_LEVEL_2(condition) -->
  <define name="wxASSERT_LEVEL_2(condition)" value="assert(condition)"/>
  <!-- #define wxASSERT_LEVEL_2_MSG(condition, message) -->
  <define name="wxASSERT_LEVEL_2_MSG(condition, msg)" value="assert(condition)"/>
  <define name="wxCHECK2_MSG(condition, operation, message)" value=""/>
  <define name="wxCHECK2(condition, operation)" value=""/>
  <define name="wxCHECK(condition, retValue)" value=""/>
  <define name="wxFAIL_MSG(message)" value=""/>
  <define name="wxUnusedVar(var)" value="(void)var"/>
  <define name="wxCOMPILE_TIME_ASSERT(condition, retValue)" value="assert(condition)"/>
  <define name="wxCHECK_MSG(condition, retValue, msg)" value=""/>
  <define name="wxCHECK_RET(condition, retValue)" value=""/>
  <define name="wxVERSION_STRING" value="&quot;wxVersionString&quot;"/>
  <define name="wxIMAGE_OPTION_QUALITY" value="wxString(&quot;quality&quot;)"/>
  <define name="wxIMAGE_OPTION_FILENAME" value="wxString(&quot;FileName&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTION" value="wxString(&quot;Resolution&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONX" value="wxString(&quot;ResolutionX&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONY" value="wxString(&quot;ResolutionY&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONUNIT" value="wxString(&quot;ResolutionUnit&quot;)"/>
  <define name="wxIMAGE_OPTION_MAX_WIDTH" value="wxString(&quot;MaxWidth&quot;)"/>
  <define name="wxIMAGE_OPTION_MAX_HEIGHT" value="wxString(&quot;MaxHeight&quot;)"/>
  <define name="wxIMAGE_OPTION_ORIGINAL_WIDTH" value="wxString(&quot;OriginalWidth&quot;)"/>
  <define name="wxIMAGE_OPTION_ORIGINAL_HEIGHT" value="wxString(&quot;OriginalHeight&quot;)"/>
  <define name="wxIMAGE_OPTION_BMP_FORMAT" value="wxString(&quot;wxBMP_FORMAT&quot;)"/>
  <define name="wxIMAGE_OPTION_CUR_HOTSPOT_X" value="wxString(&quot;HotSpotX&quot;)"/>
  <define name="wxIMAGE_OPTION_CUR_HOTSPOT_Y" value="wxString(&quot;HotSpotY&quot;)"/>
  <define name="wxIMAGE_OPTION_GIF_COMMENT" value="wxString(&quot;GifComment&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_FORMAT" value="wxString(&quot;PngFormat&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_BITDEPTH" value="wxString(&quot;PngBitDepth&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_FILTER" value="wxString(&quot;PngF&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_LEVEL" value="wxString(&quot;PngZL&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_MEM_LEVEL" value="wxString(&quot;PngZM&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_STRATEGY" value="wxString(&quot;PngZS&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_BUFFER_SIZE" value="wxString(&quot;PngZB&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_BITSPERSAMPLE" value="wxString(&quot;BitsPerSample&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL" value="wxString(&quot;SamplesPerPixel&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_COMPRESSION" value="wxString(&quot;Compression&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_PHOTOMETRIC" value="wxString(&quot;Photometric&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_IMAGEDESCRIPTOR" value="wxString(&quot;ImageDescriptor&quot;)"/>
  <define name="wxIMAGE_RESOLUTION_NONE" value="0"/>
  <define name="wxIMAGE_RESOLUTION_INCHES" value="1"/>
  <define name="wxIMAGE_RESOLUTION_CM" value="2"/>
  <define name="wxIMAGE_QUALITY_NEAREST" value="0"/>
  <define name="wxIMAGE_QUALITY_BILINEAR" value="1"/>
  <define name="wxIMAGE_QUALITY_BICUBIC" value="2"/>
  <define name="wxIMAGE_QUALITY_BOX_AVERAGE" value="3"/>
  <define name="wxIMAGE_QUALITY_NORMAL" value="4"/>
  <define name="wxIMAGE_QUALITY_HIGH" value="5"/>
  <define name="wxFS_READ" value="1"/>
  <define name="wxFS_SEEKABLE" value="4"/>
  <define name="wxTextFileType_None" value="0"/>
  <define name="wxTextFileType_Unix" value="1"/>
  <define name="wxTextFileType_Dos" value="2"/>
  <define name="wxTextFileType_Mac" value="3"/>
  <define name="wxTextFileType_Os2" value="4"/>
  <define name="wxTextEntryDialogStyle" value="(wxOK | wxCANCEL | wxCENTRE | wxWS_EX_VALIDATE_RECURSIVELY)"/>
  <define name="wxWS_EX_VALIDATE_RECURSIVELY" value="1"/>
  <define name="wxIMAGE_OPTION_BMP_FORMAT" value="wxString(&quot;wxBMP_FORMAT&quot;)"/>
  <define name="wxIMAGE_OPTION_CUR_HOTSPOT_X" value="wxString(&quot;HotSpotX&quot;)"/>
  <define name="wxIMAGE_OPTION_CUR_HOTSPOT_Y" value="wxString(&quot;HotSpotY&quot;)"/>
  <define name="wxIMAGE_OPTION_FILENAME" value="wxString(&quot;FileName&quot;)"/>
  <define name="wxIMAGE_OPTION_GIF_COMMENT" value="wxString(&quot;GifComment&quot;)"/>
  <define name="wxIMAGE_OPTION_MAX_HEIGHT" value="wxString(&quot;MaxHeight&quot;)"/>
  <define name="wxIMAGE_OPTION_MAX_WIDTH" value="wxString(&quot;MaxWidth&quot;)"/>
  <define name="wxIMAGE_OPTION_ORIGINAL_HEIGHT" value="wxString(&quot;OriginalHeight&quot;)"/>
  <define name="wxIMAGE_OPTION_ORIGINAL_WIDTH" value="wxString(&quot;OriginalWidth&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_BITDEPTH" value="wxString(&quot;PngBitDepth&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_BUFFER_SIZE" value="wxString(&quot;PngZB&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_LEVEL" value="wxString(&quot;PngZL&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_MEM_LEVEL" value="wxString(&quot;PngZM&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_COMPRESSION_STRATEGY" value="wxString(&quot;PngZS&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_FILTER" value="wxString(&quot;PngF&quot;)"/>
  <define name="wxIMAGE_OPTION_PNG_FORMAT" value="wxString(&quot;PngFormat&quot;)"/>
  <define name="wxIMAGE_OPTION_QUALITY" value="wxString(&quot;quality&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTION" value="wxString(&quot;Resolution&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONUNIT" value="wxString(&quot;ResolutionUnit&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONX" value="wxString(&quot;ResolutionX&quot;)"/>
  <define name="wxIMAGE_OPTION_RESOLUTIONY" value="wxString(&quot;ResolutionY&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_BITSPERSAMPLE" value="wxString(&quot;BitsPerSample&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_COMPRESSION" value="wxString(&quot;Compression&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_IMAGEDESCRIPTOR" value="wxString(&quot;ImageDescriptor&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_PHOTOMETRIC" value="wxString(&quot;Photometric&quot;)"/>
  <define name="wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL" value="wxString(&quot;SamplesPerPixel&quot;)"/>
  <define name="wxPNG_TYPE_COLOUR" value="0"/>
  <define name="wxPNG_TYPE_GREY" value="2"/>
  <define name="wxPNG_TYPE_GREY_RED" value="3"/>
  <define name="wxPNG_TYPE_PALETTE" value="4"/>
  <define name="wxBMP_24BPP" value="24"/>
  <define name="wxBMP_8BPP" value="8"/>
  <define name="wxBMP_8BPP_GREY" value="9"/>
  <define name="wxBMP_8BPP_GRAY" value="9"/>
  <define name="wxBMP_8BPP_RED" value="10"/>
  <define name="wxBMP_8BPP_PALETTE" value="11"/>
  <define name="wxBMP_4BPP" value="4"/>
  <define name="wxBMP_1BPP" value="1"/>
  <define name="wxBMP_1BPP_BW" value="2"/>
  <define name="wxSHUTDOWN_FORCE" value="1"/>
  <define name="wxSHUTDOWN_POWEROFF" value="2"/>
  <define name="wxSHUTDOWN_REBOOT" value="4"/>
  <define name="wxSHUTDOWN_LOGOFF" value="8"/>
  <define name="wxDIR_FILES" value="0x0001"/>
  <define name="wxDIR_DIRS" value="0x0002"/>
  <define name="wxDIR_HIDDEN" value="0x0004"/>
  <define name="wxDIR_DOTDOT" value="0x0008"/>
  <define name="wxDIR_NO_FOLLOW" value="0x0010"/>
  <define name="wxDIR_DEFAULT" value="7"/>
  <define name="wxDIR_IGNORE" value="-1"/>
  <define name="wxDIR_STOP" value="0"/>
  <define name="wxDIR_CONTINUE" value="1"/>
  <define name="wxCLEAR" value="0"/>
  <define name="wxXOR" value="1"/>
  <define name="wxINVERT" value="2"/>
  <define name="wxOR_REVERSE" value="3"/>
  <define name="wxAND_REVERSE" value="4"/>
  <define name="wxCOPY" value="5"/>
  <define name="wxAND" value="6"/>
  <define name="wxAND_INVERT" value="7"/>
  <define name="wxNO_OP" value="8"/>
  <define name="wxNOR" value="9"/>
  <define name="wxEQUIV" value="10"/>
  <define name="wxSRC_INVERT" value="11"/>
  <define name="wxOR_INVERT" value="12"/>
  <define name="wxNAND" value="13"/>
  <define name="wxOR" value="14"/>
  <define name="wxSET" value="15"/>
  <define name="wxFLOOD_SURFACE" value="1"/>
  <define name="wxFLOOD_BORDER" value="2"/>
  <define name="wxMM_TEXT" value="1"/>
  <define name="wxMM_METRIC" value="2"/>
  <define name="wxMM_LOMETRIC" value="3"/>
  <define name="wxMM_TWIPS" value="4"/>
  <define name="wxMM_POINTS" value="5"/>
  <define name="wxFromStart" value="0"/>
  <define name="wxFromCurrent" value="1"/>
  <define name="wxFromEnd" value="2"/>
  <define name="wxDVC_DEFAULT_RENDERER_SIZE" value="20"/>
  <define name="wxDVC_DEFAULT_WIDTH" value="80"/>
  <define name="wxDVC_TOGGLE_DEFAULT_WIDTH" value="30"/>
  <define name="wxDVC_DEFAULT_MINWIDTH" value="30"/>
  <define name="wxDVR_DEFAULT_ALIGNMENT" value="-1"/>
  <define name="wxDV_SINGLE" value="0x0000"/>
  <define name="wxDV_MULTIPLE" value="0x0001"/>
  <define name="wxDV_NO_HEADER" value="0x0002"/>
  <define name="wxDV_HORIZ_RULES" value="0x0004"/>
  <define name="wxDV_VERT_RULES" value="0x0008"/>
  <define name="wxDV_ROW_LINES" value="0x0010"/>
  <define name="wxDV_VARIABLE_LINE_HEIGHT" value="0x0020"/>
  <define name="wxDATAVIEW_CELL_INERT" value="0"/>
  <define name="wxDATAVIEW_CELL_ACTIVATABLE" value="1"/>
  <define name="wxDATAVIEW_CELL_EDITABLE" value="2"/>
  <define name="wxDATAVIEW_CELL_SELECTED" value="1"/>
  <define name="wxDATAVIEW_CELL_PRELIT" value="2"/>
  <define name="wxDATAVIEW_CELL_INSENSITIVE" value="4"/>
  <define name="wxDATAVIEW_CELL_FOCUSED" value="8"/>
  <define name="wxDATAVIEW_COL_RESIZABLE" value="1"/>
  <define name="wxDATAVIEW_COL_SORTABLE" value="2"/>
  <define name="wxDATAVIEW_COL_REORDERABLE" value="4"/>
  <define name="wxDATAVIEW_COL_HIDDEN" value="8"/>
  <define name="wxANIMATION_TYPE_INVALID" value="0"/>
  <define name="wxANIMATION_TYPE_GIF" value="1"/>
  <define name="wxANIMATION_TYPE_ANI" value="2"/>
  <define name="wxANIMATION_TYPE_ANY" value="3"/>
  <define name="wxAC_NO_AUTORESIZE" value="0x0010"/>
  <define name="wxAC_DEFAULT_STYLE" value="0x00200000"/>
  <define name="NO_IMAGE" value="0"/>
  <define name="wxCLRP_USE_TEXTCTRL" value="2"/>
  <define name="wxCLRP_DEFAULT_STYLE" value="0"/>
  <define name="wxCLRP_SHOW_LABEL" value="0x0008"/>
  <define name="wxCLRP_SHOW_ALPHA" value="0x0010"/>
  <define name="wxCLRBTN_SHOW_LABEL" value="100"/>
  <define name="wxCLRBTN_DEFAULT_STYLE" value="100"/>
  <define name="wxFLEX_GROWMODE_NONE" value="0"/>
  <define name="wxFLEX_GROWMODE_SPECIFIED" value="1"/>
  <define name="wxFLEX_GROWMODE_ALL" value="2"/>
  <define name="wxFLP_OPEN" value="0x0400"/>
  <define name="wxFLP_SAVE" value="0x0800"/>
  <define name="wxFLP_OVERWRITE_PROMPT" value="0x1000"/>
  <define name="wxFLP_FILE_MUST_EXIST" value="0x2000"/>
  <define name="wxFLP_CHANGE_DIR" value="0x4000"/>
  <define name="wxFLP_SMALL" value="0x8000"/>
  <define name="wxGridSelectCells" value="0"/>
  <define name="wxGridSelectRows" value="1"/>
  <define name="wxGridSelectColumns" value="2"/>
  <define name="wxGridSelectRowsOrColumns" value="3"/>
  <define name="wxANTIALIAS_NONE" value="0"/>
  <define name="wxANTIALIAS_DEFAULT" value="1"/>
  <define name="wxINTERPOLATION_DEFAULT" value="0"/>
  <define name="wxINTERPOLATION_NONE" value="1"/>
  <define name="wxINTERPOLATION_FAST" value="2"/>
  <define name="wxINTERPOLATION_GOOD" value="3"/>
  <define name="wxINTERPOLATION_BEST" value="4"/>
  <define name="wxCOMPOSITION_INVALID" value="-1"/>
  <define name="wxCOMPOSITION_CLEAR" value="0"/>
  <define name="wxCOMPOSITION_SOURCE" value="1"/>
  <define name="wxCOMPOSITION_OVER" value="2"/>
  <define name="wxCOMPOSITION_IN" value="3"/>
  <define name="wxCOMPOSITION_OUT" value="4"/>
  <define name="wxCOMPOSITION_ATOP" value="5"/>
  <define name="wxCOMPOSITION_DEST" value="6"/>
  <define name="wxCOMPOSITION_DEST_OVER" value="7"/>
  <define name="wxCOMPOSITION_DEST_IN" value="8"/>
  <define name="wxCOMPOSITION_DEST_OUT" value="9"/>
  <define name="wxCOMPOSITION_DEST_ATOP" value="10"/>
  <define name="wxCOMPOSITION_XOR" value="11"/>
  <define name="wxCOMPOSITION_ADD" value="12"/>
  <define name="wxFONTFLAG_DEFAULT" value="0"/>
  <define name="wxFONTFLAG_ITALIC" value="1"/>
  <define name="wxFONTFLAG_SLANT" value="0x2"/>
  <define name="wxFONTFLAG_LIGHT" value="0x4"/>
  <define name="wxFONTFLAG_BOLD" value="0x8"/>
  <define name="wxFONTFLAG_ANTIALIASED" value="0x10"/>
  <define name="wxFONTFLAG_NOT_ANTIALIASED" value="0x20"/>
  <define name="wxFONTFLAG_UNDERLINED" value="0x40"/>
  <define name="wxFONTFLAG_STRIKETHROUGH" value="0x80"/>
  <define name="wxFONTFLAG_MASK" value="0x100"/>
  <define name="wxFONTENCODING_SYSTEM" value="-1"/>
  <define name="wxFONTENCODING_DEFAULT" value="0"/>
  <define name="wxFONTENCODING_ISO8859_1" value="1"/>
  <define name="wxFONTENCODING_ISO8859_2" value="2"/>
  <define name="wxFONTENCODING_ISO8859_3" value="3"/>
  <define name="wxFONTENCODING_ISO8859_4" value="4"/>
  <define name="wxFONTENCODING_ISO8859_5" value="5"/>
  <define name="wxFONTENCODING_ISO8859_6" value="6"/>
  <define name="wxFONTENCODING_ISO8859_7" value="7"/>
  <define name="wxFONTENCODING_ISO8859_8" value="8"/>
  <define name="wxFONTENCODING_ISO8859_9" value="9"/>
  <define name="wxFONTENCODING_ISO8859_10" value="10"/>
  <define name="wxFONTENCODING_ISO8859_11" value="11"/>
  <define name="wxFONTENCODING_ISO8859_12" value="12"/>
  <define name="wxFONTENCODING_ISO8859_13" value="13"/>
  <define name="wxFONTENCODING_ISO8859_14" value="14"/>
  <define name="wxFONTENCODING_ISO8859_15" value="15"/>
  <define name="wxFONTENCODING_ISO8859_MAX" value="16"/>
  <define name="wxFONTENCODING_KOI8" value="17"/>
  <define name="wxFONTENCODING_KOI8_U" value="18"/>
  <define name="wxFONTENCODING_ALTERNATIVE" value="19"/>
  <define name="wxFONTENCODING_BULGARIAN" value="20"/>
  <define name="wxFONTENCODING_CP437" value="21"/>
  <define name="wxFONTENCODING_CP850" value="22"/>
  <define name="wxFONTENCODING_CP852" value="23"/>
  <define name="wxFONTENCODING_CP855" value="24"/>
  <define name="wxFONTENCODING_CP866" value="25"/>
  <define name="wxFONTENCODING_CP874" value="26"/>
  <define name="wxFONTENCODING_CP932" value="27"/>
  <define name="wxFONTENCODING_CP936" value="28"/>
  <define name="wxFONTENCODING_CP949" value="29"/>
  <define name="wxFONTENCODING_CP950" value="30"/>
  <define name="wxFONTENCODING_CP1250" value="31"/>
  <define name="wxFONTENCODING_CP1251" value="32"/>
  <define name="wxFONTENCODING_CP1252" value="33"/>
  <define name="wxFONTENCODING_CP1253" value="34"/>
  <define name="wxFONTENCODING_CP1254" value="35"/>
  <define name="wxFONTENCODING_CP1255" value="36"/>
  <define name="wxFONTENCODING_CP1256" value="37"/>
  <define name="wxFONTENCODING_CP1257" value="38"/>
  <define name="wxFONTENCODING_CP1258" value="39"/>
  <define name="wxFONTENCODING_CP1361" value="40"/>
  <define name="wxFONTENCODING_CP12_MAX" value="41"/>
  <define name="wxFONTENCODING_UTF7" value="42"/>
  <define name="wxFONTENCODING_UTF8" value="43"/>
  <define name="wxFONTENCODING_EUC_JP" value="44"/>
  <define name="wxFONTENCODING_UTF16BE" value="45"/>
  <define name="wxFONTENCODING_UTF16LE" value="46"/>
  <define name="wxFONTENCODING_UTF32BE" value="47"/>
  <define name="wxFONTENCODING_UTF32LE" value="48"/>
  <define name="wxFONTENCODING_MACROMAN" value="49"/>
  <define name="wxFONTENCODING_MACJAPANESE" value="50"/>
  <define name="wxFONTENCODING_MACCHINESETRAD" value="51"/>
  <define name="wxFONTENCODING_MACKOREAN" value="52"/>
  <define name="wxFONTENCODING_MACARABIC" value="53"/>
  <define name="wxFONTENCODING_MACHEBREW" value="54"/>
  <define name="wxFONTENCODING_MACGREEK" value="55"/>
  <define name="wxFONTENCODING_MACCYRILLIC" value="56"/>
  <define name="wxFONTENCODING_MACDEVANAGARI" value="57"/>
  <define name="wxFONTENCODING_MACGURMUKHI" value="58"/>
  <define name="wxFONTENCODING_MACGUJARATI" value="59"/>
  <define name="wxFONTENCODING_MACORIYA" value="60"/>
  <define name="wxFONTENCODING_MACBENGALI" value="61"/>
  <define name="wxFONTENCODING_MACTAMIL" value="62"/>
  <define name="wxFONTENCODING_MACTELUGU" value="63"/>
  <define name="wxFONTENCODING_MACKANNADA" value="64"/>
  <define name="wxFONTENCODING_MACMALAJALAM" value="65"/>
  <define name="wxFONTENCODING_MACSINHALESE" value="66"/>
  <define name="wxFONTENCODING_MACBURMESE" value="67"/>
  <define name="wxFONTENCODING_MACKHMER" value="68"/>
  <define name="wxFONTENCODING_MACTHAI" value="69"/>
  <define name="wxFONTENCODING_MACLAOTIAN" value="70"/>
  <define name="wxFONTENCODING_MACGEORGIAN" value="71"/>
  <define name="wxFONTENCODING_MACARMENIAN" value="72"/>
  <define name="wxFONTENCODING_MACCHINESESIMP" value="73"/>
  <define name="wxFONTENCODING_MACTIBETAN" value="74"/>
  <define name="wxFONTENCODING_MACMONGOLIAN" value="75"/>
  <define name="wxFONTENCODING_MACETHIOPIC" value="76"/>
  <define name="wxFONTENCODING_MACCENTRALEUR" value="77"/>
  <define name="wxFONTENCODING_MACVIATNAMESE" value="78"/>
  <define name="wxFONTENCODING_MACARABICEXT" value="79"/>
  <define name="wxFONTENCODING_MACSYMBOL" value="80"/>
  <define name="wxFONTENCODING_MACDINGBATS" value="81"/>
  <define name="wxFONTENCODING_MACTURKISH" value="82"/>
  <define name="wxFONTENCODING_MACCROATIAN" value="83"/>
  <define name="wxFONTENCODING_MACICELANDIC" value="84"/>
  <define name="wxFONTENCODING_MACROMANIAN" value="85"/>
  <define name="wxFONTENCODING_MACCELTIC" value="86"/>
  <define name="wxFONTENCODING_MACGAELIC" value="87"/>
  <define name="wxFONTENCODING_MACKEYBOARD" value="88"/>
  <define name="wxFONTENCODING_ISO2022_JP" value="89"/>
  <define name="wxFONTENCODING_MAX" value="90"/>
  <define name="wxFONTENCODING_MACMIN" value="49"/>
  <define name="wxFONTENCODING_MACMAX" value="88"/>
  <define name="wxFONTENCODING_UTF16" value="91"/>
  <define name="wxFONTENCODING_UTF32" value="92"/>
  <define name="wxFONTENCODING_UNICODE" value="93"/>
  <define name="wxFONTENCODING_GB2312" value="28"/>
  <define name="wxFONTENCODING_BIG5" value="30"/>
  <define name="wxFONTENCODING_SHIFT_JIS" value="27"/>
  <define name="wxFONTENCODING_EUC_KR" value="29"/>
  <define name="wxFONTENCODING_JOHAB" value="40"/>
  <define name="wxFONTENCODING_VIETNAMESE" value="39"/>
  <define name="wxSYS_OEM_FIXED_FONT" value="10"/>
  <define name="wxSYS_ANSI_FIXED_FONT" value="11"/>
  <define name="wxSYS_ANSI_VAR_FONT" value="12"/>
  <define name="wxSYS_SYSTEM_FONT" value="13"/>
  <define name="wxSYS_DEVICE_DEFAULT_FONT" value="14"/>
  <define name="wxSYS_COLOUR_SCROLLBAR" value="0"/>
  <define name="wxSYS_COLOUR_DESKTOP" value="1"/>
  <define name="wxSYS_COLOUR_ACTIVECAPTION" value="2"/>
  <define name="wxSYS_COLOUR_INACTIVECAPTION" value="3"/>
  <define name="wxSYS_COLOUR_MENU" value="4"/>
  <define name="wxSYS_COLOUR_WINDOW" value="5"/>
  <define name="wxSYS_COLOUR_WINDOWFRAME" value="6"/>
  <define name="wxSYS_COLOUR_MENUTEXT" value="7"/>
  <define name="wxSYS_COLOUR_WINDOWTEXT" value="8"/>
  <define name="wxSYS_COLOUR_CAPTIONTEXT" value="9"/>
  <define name="wxSYS_COLOUR_ACTIVEBORDER" value="10"/>
  <define name="wxSYS_COLOUR_APPWORKSPACE" value="12"/>
  <define name="wxSYS_COLOUR_HIGHLIGHT" value="13"/>
  <define name="wxSYS_COLOUR_HIGHLIGHTTEXT" value="14"/>
  <define name="wxSYS_COLOUR_BTNFACE" value="15"/>
  <define name="wxSYS_COLOUR_BTNSHADOW" value="16"/>
  <define name="wxSYS_COLOUR_GRAYTEXT" value="17"/>
  <define name="wxSYS_COLOUR_BTNTEXT" value="18"/>
  <define name="wxSYS_COLOUR_INACTIVECAPTIONTEXT" value="19"/>
  <define name="wxSYS_COLOUR_BTNHIGHLIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DDKSHADOW" value="21"/>
  <define name="wxSYS_COLOUR_3DLIGHT" value="22"/>
  <define name="wxSYS_COLOUR_INFOTEXT" value="23"/>
  <define name="wxSYS_COLOUR_INFOBK" value="24"/>
  <define name="wxSYS_COLOUR_LISTBOX" value="25"/>
  <define name="wxSYS_COLOUR_HOTLIGHT" value="26"/>
  <define name="wxSYS_COLOUR_GRADIENTACTIVECAPTION" value="27"/>
  <define name="wxSYS_COLOUR_GRADIENTINACTIVECAPTION" value="28"/>
  <define name="wxSYS_COLOUR_MENUHILIGHT" value="29"/>
  <define name="wxSYS_COLOUR_MENUBAR" value="30"/>
  <define name="wxSYS_COLOUR_LISTBOXTEXT" value="31"/>
  <define name="wxSYS_COLOUR_LISTBOXHIGHLIGHTTEXT" value="32"/>
  <define name="wxSYS_COLOUR_3DFACE" value="15"/>
  <define name="wxSYS_COLOUR_3DSHADOW" value="16"/>
  <define name="wxSYS_COLOUR_BTNHILIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DHIGHLIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DHILIGHT" value="20"/>
  <define name="wxSYS_COLOUR_FRAMEBK" value="15"/>
  <define name="wxSYS_MOUSE_BUTTONS" value="0"/>
  <define name="wxSYS_BORDER_X" value="1"/>
  <define name="wxSYS_BORDER_Y" value="2"/>
  <define name="wxSYS_CURSOR_X" value="3"/>
  <define name="wxSYS_CURSOR_Y" value="4"/>
  <define name="wxSYS_DCLICK_X" value="5"/>
  <define name="wxSYS_DCLICK_Y" value="6"/>
  <define name="wxSYS_DRAG_X" value="7"/>
  <define name="wxSYS_DRAG_Y" value="8"/>
  <define name="wxSYS_EDGE_X" value="9"/>
  <define name="wxSYS_EDGE_Y" value="10"/>
  <define name="wxSYS_HSCROLL_ARROW_X" value="11"/>
  <define name="wxSYS_HSCROLL_ARROW_Y" value="12"/>
  <define name="wxSYS_HTHUMB_X" value="13"/>
  <define name="wxSYS_ICON_X" value="14"/>
  <define name="wxSYS_ICON_Y" value="15"/>
  <define name="wxSYS_ICONSPACING_X" value="16"/>
  <define name="wxSYS_ICONSPACING_Y" value="17"/>
  <define name="wxSYS_WINDOWMIN_X" value="18"/>
  <define name="wxSYS_WINDOWMIN_Y" value="19"/>
  <define name="wxSYS_SCREEN_X" value="20"/>
  <define name="wxSYS_SCREEN_Y" value="21"/>
  <define name="wxSYS_FRAMESIZE_X" value="22"/>
  <define name="wxSYS_FRAMESIZE_Y" value="23"/>
  <define name="wxSYS_SMALLICON_X" value="24"/>
  <define name="wxSYS_SMALLICON_Y" value="25"/>
  <define name="wxSYS_HSCROLL_Y" value="26"/>
  <define name="wxSYS_VSCROLL_X" value="27"/>
  <define name="wxSYS_VSCROLL_ARROW_X" value="28"/>
  <define name="wxSYS_VSCROLL_ARROW_Y" value="29"/>
  <define name="wxSYS_VTHUMB_Y" value="30"/>
  <define name="wxSYS_CAPTION_Y" value="31"/>
  <define name="wxSYS_MENU_Y" value="32"/>
  <define name="wxSYS_NETWORK_PRESENT" value="33"/>
  <define name="wxSYS_PENWINDOWS_PRESENT" value="34"/>
  <define name="wxSYS_SHOW_SOUNDS" value="35"/>
  <define name="wxSYS_SWAP_BUTTONS" value="36"/>
  <define name="wxSYS_DCLICK_MSEC" value="37"/>
  <define name="wxSYS_CAN_DRAW_FRAME_DECORATIONS" value="1"/>
  <define name="wxSYS_CAN_ICONIZE_FRAME" value="2"/>
  <define name="wxSYS_TABLET_PRESENT" value="3"/>
  <define name="wxSYS_SCREEN_NONE" value="0"/>
  <define name="wxSYS_SCREEN_TINY" value="1"/>
  <define name="wxSYS_SCREEN_PDA" value="2"/>
  <define name="wxSYS_SCREEN_SMALL" value="3"/>
  <define name="wxSYS_SCREEN_DESKTOP" value="4"/>
  <define name="wxFONTSIZE_XX_SMALL" value="-3"/>
  <define name="wxFONTSIZE_X_SMALL" value="-2"/>
  <define name="wxFONTSIZE_SMALL" value="-1"/>
  <define name="wxFONTSIZE_MEDIUM" value="0"/>
  <define name="wxFONTSIZE_LARGE" value="1"/>
  <define name="wxFONTSIZE_X_LARGE" value="2"/>
  <define name="wxFONTSIZE_XX_LARGE" value="3"/>
  <define name="wxDATAVIEW_CELL_INERT" value="0"/>
  <define name="wxDATAVIEW_CELL_ACTIVATABLE" value="1"/>
  <define name="wxDATAVIEW_CELL_EDITABLE" value="2"/>
  <define name="wxDATAVIEW_CELL_SELECTED" value="1"/>
  <define name="wxDATAVIEW_CELL_PRELIT" value="2"/>
  <define name="wxDATAVIEW_CELL_INSENSITIVE" value="4"/>
  <define name="wxDATAVIEW_CELL_FOCUSED" value="8"/>
  <define name="wxDIRP_DIR_MUST_EXIST" value="0x0008"/>
  <define name="wxDIRP_CHANGE_DIR" value="0x0010"/>
  <define name="wxDIRP_SMALL" value="0x8000"/>
  <define name="wxPB_USE_TEXTCTRL" value="0x0002"/>
  <define name="wxPB_SMALL" value="0x8000"/>
  <define name="wxCHK_2STATE" value="0x4000"/>
  <define name="wxCHK_3STATE" value="0x1000"/>
  <define name="wxCHK_ALLOW_3RD_STATE_FOR_USER" value="0x2000"/>
  <define name="wxSYS_OEM_FIXED_FONT" value="10"/>
  <define name="wxSYS_ANSI_FIXED_FONT" value="11"/>
  <define name="wxSYS_ANSI_VAR_FONT" value="12"/>
  <define name="wxSYS_SYSTEM_FONT" value="13"/>
  <define name="wxSYS_DEVICE_DEFAULT_FONT" value="14"/>
  <define name="wxSYS_DEFAULT_PALETTE" value="15"/>
  <define name="wxSYS_SYSTEM_FIXED_FONT" value="16"/>
  <define name="wxSYS_DEFAULT_GUI_FONT" value="17"/>
  <define name="wxSYS_ICONTITLE_FONT" value="17"/>
  <define name="wxSTC_CMD_REDO" value="2011"/>
  <define name="wxSTC_CMD_SELECTALL" value="2013"/>
  <define name="wxSTC_CMD_UNDO" value="2176"/>
  <define name="wxSTC_CMD_CUT" value="2177"/>
  <define name="wxSTC_CMD_COPY" value="2178"/>
  <define name="wxSTC_CMD_PASTE" value="2179"/>
  <define name="wxSTC_CMD_CLEAR" value="2180"/>
  <define name="wxSTC_CMD_LINEDOWN" value="2300"/>
  <define name="wxSTC_CMD_LINEDOWNEXTEND" value="2301"/>
  <define name="wxSTC_CMD_LINEUP" value="2302"/>
  <define name="wxSTC_CMD_LINEUPEXTEND" value="2303"/>
  <define name="wxSTC_CMD_CHARLEFT" value="2304"/>
  <define name="wxSTC_CMD_CHARLEFTEXTEND" value="2305"/>
  <define name="wxSTC_CMD_CHARRIGHT" value="2306"/>
  <define name="wxSTC_CMD_CHARRIGHTEXTEND" value="2307"/>
  <define name="wxSTC_CMD_WORDLEFT" value="2308"/>
  <define name="wxSTC_CMD_WORDLEFTEXTEND" value="2309"/>
  <define name="wxSTC_CMD_WORDRIGHT" value="2310"/>
  <define name="wxSTC_CMD_WORDRIGHTEXTEND" value="2311"/>
  <define name="wxSTC_CMD_HOME" value="2312"/>
  <define name="wxSTC_CMD_HOMEEXTEND" value="2313"/>
  <define name="wxSTC_CMD_LINEEND" value="2314"/>
  <define name="wxSTC_CMD_LINEENDEXTEND" value="2315"/>
  <define name="wxSTC_CMD_DOCUMENTSTART" value="2316"/>
  <define name="wxSTC_CMD_DOCUMENTSTARTEXTEND" value="2317"/>
  <define name="wxSTC_CMD_DOCUMENTEND" value="2318"/>
  <define name="wxSTC_CMD_DOCUMENTENDEXTEND" value="2319"/>
  <define name="wxSTC_CMD_PAGEUP" value="2320"/>
  <define name="wxSTC_CMD_PAGEUPEXTEND" value="2321"/>
  <define name="wxSTC_CMD_PAGEDOWN" value="2322"/>
  <define name="wxSTC_CMD_PAGEDOWNEXTEND" value="2323"/>
  <define name="wxSTC_CMD_EDITTOGGLEOVERTYPE" value="2324"/>
  <define name="wxSTC_CMD_CANCEL" value="2325"/>
  <define name="wxSTC_CMD_DELETEBACK" value="2326"/>
  <define name="wxSTC_CMD_TAB" value="2327"/>
  <define name="wxSTC_CMD_BACKTAB" value="2328"/>
  <define name="wxSTC_CMD_NEWLINE" value="2329"/>
  <define name="wxSTC_CMD_FORMFEED" value="2330"/>
  <define name="wxSTC_CMD_VCHOME" value="2331"/>
  <define name="wxSTC_CMD_VCHOMEEXTEND" value="2332"/>
  <define name="wxSTC_CMD_ZOOMIN" value="2333"/>
  <define name="wxSTC_CMD_ZOOMOUT" value="2334"/>
  <define name="wxSTC_CMD_DELWORDLEFT" value="2335"/>
  <define name="wxSTC_CMD_DELWORDRIGHT" value="2336"/>
  <define name="wxSTC_CMD_DELWORDRIGHTEND" value="2518"/>
  <define name="wxSTC_CMD_LINECUT" value="2337"/>
  <define name="wxSTC_CMD_LINEDELETE" value="2338"/>
  <define name="wxSTC_CMD_LINETRANSPOSE" value="2339"/>
  <define name="wxSTC_CMD_LINEDUPLICATE" value="2404"/>
  <define name="wxSTC_CMD_LOWERCASE" value="2340"/>
  <define name="wxSTC_CMD_UPPERCASE" value="2341"/>
  <define name="wxSTC_CMD_LINESCROLLDOWN" value="2342"/>
  <define name="wxSTC_CMD_LINESCROLLUP" value="2343"/>
  <define name="wxSTC_CMD_DELETEBACKNOTLINE" value="2344"/>
  <define name="wxSTC_CMD_HOMEDISPLAY" value="2345"/>
  <define name="wxSTC_CMD_HOMEDISPLAYEXTEND" value="2346"/>
  <define name="wxSTC_CMD_LINEENDDISPLAY" value="2347"/>
  <define name="wxSTC_CMD_LINEENDDISPLAYEXTEND" value="2348"/>
  <define name="wxSTC_CMD_HOMEWRAP" value="2349"/>
  <define name="wxSTC_CMD_HOMEWRAPEXTEND" value="2450"/>
  <define name="wxSTC_CMD_LINEENDWRAP" value="2451"/>
  <define name="wxSTC_CMD_LINEENDWRAPEXTEND" value="2452"/>
  <define name="wxSTC_CMD_VCHOMEWRAP" value="2453"/>
  <define name="wxSTC_CMD_VCHOMEWRAPEXTEND" value="2454"/>
  <define name="wxSTC_CMD_LINECOPY" value="2455"/>
  <define name="wxSTC_CMD_WORDPARTLEFT" value="2390"/>
  <define name="wxSTC_CMD_WORDPARTLEFTEXTEND" value="2391"/>
  <define name="wxSTC_CMD_WORDPARTRIGHT" value="2392"/>
  <define name="wxSTC_CMD_WORDPARTRIGHTEXTEND" value="2393"/>
  <define name="wxSTC_CMD_DELLINELEFT" value="2395"/>
  <define name="wxSTC_CMD_DELLINERIGHT" value="2396"/>
  <define name="wxSTC_CMD_PARADOWN" value="2413"/>
  <define name="wxSTC_CMD_PARADOWNEXTEND" value="2414"/>
  <define name="wxSTC_CMD_PARAUP" value="2415"/>
  <define name="wxSTC_CMD_PARAUPEXTEND" value="2416"/>
  <define name="wxSTC_CMD_LINEDOWNRECTEXTEND" value="2426"/>
  <define name="wxSTC_CMD_LINEUPRECTEXTEND" value="2427"/>
  <define name="wxSTC_CMD_CHARLEFTRECTEXTEND" value="2428"/>
  <define name="wxSTC_CMD_CHARRIGHTRECTEXTEND" value="2429"/>
  <define name="wxSTC_CMD_HOMERECTEXTEND" value="2430"/>
  <define name="wxSTC_CMD_VCHOMERECTEXTEND" value="2431"/>
  <define name="wxSTC_CMD_LINEENDRECTEXTEND" value="2432"/>
  <define name="wxSTC_CMD_PAGEUPRECTEXTEND" value="2433"/>
  <define name="wxSTC_CMD_PAGEDOWNRECTEXTEND" value="2434"/>
  <define name="wxSTC_CMD_STUTTEREDPAGEUP" value="2435"/>
  <define name="wxSTC_CMD_STUTTEREDPAGEUPEXTEND" value="2436"/>
  <define name="wxSTC_CMD_STUTTEREDPAGEDOWN" value="2437"/>
  <define name="wxSTC_CMD_STUTTEREDPAGEDOWNEXTEND" value="2438"/>
  <define name="wxSTC_CMD_WORDLEFTEND" value="2439"/>
  <define name="wxSTC_CMD_WORDLEFTENDEXTEND" value="2440"/>
  <define name="wxSTC_CMD_WORDRIGHTEND" value="2441"/>
  <define name="wxSTC_CMD_WORDRIGHTENDEXTEND" value="2442"/>
  <define name="wxSTC_CMD_VERTICALCENTRECARET" value="2619"/>
  <define name="wxSTC_CMD_MOVESELECTEDLINESUP" value="2620"/>
  <define name="wxSTC_CMD_MOVESELECTEDLINESDOWN" value="2621"/>
  <define name="wxSTC_CMD_SCROLLTOSTART" value="2628"/>
  <define name="wxSTC_CMD_SCROLLTOEND" value="2629"/>
  <define name="wxSTC_CMD_VCHOMEDISPLAY" value="2652"/>
  <define name="wxSTC_CMD_VCHOMEDISPLAYEXTEND" value="2653"/>
  <define name="wxSTC_INVALID_POSITION" value="-1"/>
  <define name="wxSTC_START" value="2000"/>
  <define name="wxSTC_OPTIONAL_START" value="3000"/>
  <define name="wxSTC_LEXER_START" value="4000"/>
  <define name="wxSTC_WS_INVISIBLE" value="0"/>
  <define name="wxSTC_WS_VISIBLEALWAYS" value="1"/>
  <define name="wxSTC_WS_VISIBLEAFTERINDENT" value="2"/>
  <define name="wxSTC_WS_VISIBLEONLYININDENT" value="3"/>
  <define name="wxSTC_TD_LONGARROW" value="0"/>
  <define name="wxSTC_TD_STRIKEOUT" value="1"/>
  <define name="wxSTC_EOL_CRLF" value="0"/>
  <define name="wxSTC_EOL_CR" value="1"/>
  <define name="wxSTC_EOL_LF" value="2"/>
  <define name="wxSTC_CP_UTF8" value="65001"/>
  <define name="wxSTC_IME_WINDOWED" value="0"/>
  <define name="wxSTC_IME_INLINE" value="1"/>
  <define name="wxSTC_MARKER_MAX" value="31"/>
  <define name="wxSTC_MARK_CIRCLE" value="0"/>
  <define name="wxSTC_MARK_ROUNDRECT" value="1"/>
  <define name="wxSTC_MARK_ARROW" value="2"/>
  <define name="wxSTC_MARK_SMALLRECT" value="3"/>
  <define name="wxSTC_MARK_SHORTARROW" value="4"/>
  <define name="wxSTC_MARK_EMPTY" value="5"/>
  <define name="wxSTC_MARK_ARROWDOWN" value="6"/>
  <define name="wxSTC_MARK_MINUS" value="7"/>
  <define name="wxSTC_MARK_PLUS" value="8"/>
  <define name="wxSTC_MARK_VLINE" value="9"/>
  <define name="wxSTC_MARK_LCORNER" value="10"/>
  <define name="wxSTC_MARK_TCORNER" value="11"/>
  <define name="wxSTC_MARK_BOXPLUS" value="12"/>
  <define name="wxSTC_MARK_BOXPLUSCONNECTED" value="13"/>
  <define name="wxSTC_MARK_BOXMINUS" value="14"/>
  <define name="wxSTC_MARK_BOXMINUSCONNECTED" value="15"/>
  <define name="wxSTC_MARK_LCORNERCURVE" value="16"/>
  <define name="wxSTC_MARK_TCORNERCURVE" value="17"/>
  <define name="wxSTC_MARK_CIRCLEPLUS" value="18"/>
  <define name="wxSTC_MARK_CIRCLEPLUSCONNECTED" value="19"/>
  <define name="wxSTC_MARK_CIRCLEMINUS" value="20"/>
  <define name="wxSTC_MARK_CIRCLEMINUSCONNECTED" value="21"/>
  <define name="wxSTC_MARK_BACKGROUND" value="22"/>
  <define name="wxSTC_MARK_DOTDOTDOT" value="23"/>
  <define name="wxSTC_MARK_ARROWS" value="24"/>
  <define name="wxSTC_MARK_PIXMAP" value="25"/>
  <define name="wxSTC_MARK_FULLRECT" value="26"/>
  <define name="wxSTC_MARK_LEFTRECT" value="27"/>
  <define name="wxSTC_MARK_AVAILABLE" value="28"/>
  <define name="wxSTC_MARK_UNDERLINE" value="29"/>
  <define name="wxSTC_MARK_RGBAIMAGE" value="30"/>
  <define name="wxSTC_MARK_BOOKMARK" value="31"/>
  <define name="wxSTC_MARK_CHARACTER" value="10000"/>
  <define name="wxSTC_MARKNUM_FOLDEREND" value="25"/>
  <define name="wxSTC_MARKNUM_FOLDEROPENMID" value="26"/>
  <define name="wxSTC_MARKNUM_FOLDERMIDTAIL" value="27"/>
  <define name="wxSTC_MARKNUM_FOLDERTAIL" value="28"/>
  <define name="wxSTC_MARKNUM_FOLDERSUB" value="29"/>
  <define name="wxSTC_MARKNUM_FOLDER" value="30"/>
  <define name="wxSTC_MARKNUM_FOLDEROPEN" value="31"/>
  <define name="wxSTC_MASK_FOLDERS" value="0xFE000000"/>
  <define name="wxSTC_MAX_MARGIN" value="4"/>
  <define name="wxSTC_MARGIN_SYMBOL" value="0"/>
  <define name="wxSTC_MARGIN_NUMBER" value="1"/>
  <define name="wxSTC_MARGIN_BACK" value="2"/>
  <define name="wxSTC_MARGIN_FORE" value="3"/>
  <define name="wxSTC_MARGIN_TEXT" value="4"/>
  <define name="wxSTC_MARGIN_RTEXT" value="5"/>
  <define name="wxSTC_MARGIN_COLOUR" value="6"/>
  <define name="wxSTC_STYLE_DEFAULT" value="32"/>
  <define name="wxSTC_STYLE_LINENUMBER" value="33"/>
  <define name="wxSTC_STYLE_BRACELIGHT" value="34"/>
  <define name="wxSTC_STYLE_BRACEBAD" value="35"/>
  <define name="wxSTC_STYLE_CONTROLCHAR" value="36"/>
  <define name="wxSTC_STYLE_INDENTGUIDE" value="37"/>
  <define name="wxSTC_STYLE_CALLTIP" value="38"/>
  <define name="wxSTC_STYLE_FOLDDISPLAYTEXT" value="39"/>
  <define name="wxSTC_STYLE_LASTPREDEFINED" value="39"/>
  <define name="wxSTC_STYLE_MAX" value="255"/>
  <define name="wxSTC_CHARSET_ANSI" value="0"/>
  <define name="wxSTC_CHARSET_DEFAULT" value="1"/>
  <define name="wxSTC_CHARSET_BALTIC" value="186"/>
  <define name="wxSTC_CHARSET_CHINESEBIG5" value="136"/>
  <define name="wxSTC_CHARSET_EASTEUROPE" value="238"/>
  <define name="wxSTC_CHARSET_GB2312" value="134"/>
  <define name="wxSTC_CHARSET_GREEK" value="161"/>
  <define name="wxSTC_CHARSET_HANGUL" value="129"/>
  <define name="wxSTC_CHARSET_MAC" value="77"/>
  <define name="wxSTC_CHARSET_OEM" value="255"/>
  <define name="wxSTC_CHARSET_RUSSIAN" value="204"/>
  <define name="wxSTC_CHARSET_OEM866" value="866"/>
  <define name="wxSTC_CHARSET_CYRILLIC" value="1251"/>
  <define name="wxSTC_CHARSET_SHIFTJIS" value="128"/>
  <define name="wxSTC_CHARSET_SYMBOL" value="2"/>
  <define name="wxSTC_CHARSET_TURKISH" value="162"/>
  <define name="wxSTC_CHARSET_JOHAB" value="130"/>
  <define name="wxSTC_CHARSET_HEBREW" value="177"/>
  <define name="wxSTC_CHARSET_ARABIC" value="178"/>
  <define name="wxSTC_CHARSET_VIETNAMESE" value="163"/>
  <define name="wxSTC_CHARSET_THAI" value="222"/>
  <define name="wxSTC_CHARSET_8859_15" value="1000"/>
  <define name="wxSTC_CASE_MIXED" value="0"/>
  <define name="wxSTC_CASE_UPPER" value="1"/>
  <define name="wxSTC_CASE_LOWER" value="2"/>
  <define name="wxSTC_CASE_CAMEL" value="3"/>
  <define name="wxSTC_FONT_SIZE_MULTIPLIER" value="100"/>
  <define name="wxSTC_WEIGHT_NORMAL" value="400"/>
  <define name="wxSTC_WEIGHT_SEMIBOLD" value="600"/>
  <define name="wxSTC_WEIGHT_BOLD" value="700"/>
  <define name="wxSTC_INDIC_PLAIN" value="0"/>
  <define name="wxSTC_INDIC_SQUIGGLE" value="1"/>
  <define name="wxSTC_INDIC_TT" value="2"/>
  <define name="wxSTC_INDIC_DIAGONAL" value="3"/>
  <define name="wxSTC_INDIC_STRIKE" value="4"/>
  <define name="wxSTC_INDIC_HIDDEN" value="5"/>
  <define name="wxSTC_INDIC_BOX" value="6"/>
  <define name="wxSTC_INDIC_ROUNDBOX" value="7"/>
  <define name="wxSTC_INDIC_STRAIGHTBOX" value="8"/>
  <define name="wxSTC_INDIC_DASH" value="9"/>
  <define name="wxSTC_INDIC_DOTS" value="10"/>
  <define name="wxSTC_INDIC_SQUIGGLELOW" value="11"/>
  <define name="wxSTC_INDIC_DOTBOX" value="12"/>
  <define name="wxSTC_INDIC_SQUIGGLEPIXMAP" value="13"/>
  <define name="wxSTC_INDIC_COMPOSITIONTHICK" value="14"/>
  <define name="wxSTC_INDIC_COMPOSITIONTHIN" value="15"/>
  <define name="wxSTC_INDIC_FULLBOX" value="16"/>
  <define name="wxSTC_INDIC_TEXTFORE" value="17"/>
  <define name="wxSTC_INDIC_POINT" value="18"/>
  <define name="wxSTC_INDIC_POINTCHARACTER" value="19"/>
  <define name="wxSTC_INDIC_IME" value="32"/>
  <define name="wxSTC_INDIC_IME_MAX" value="35"/>
  <define name="wxSTC_INDIC_MAX" value="35"/>
  <define name="wxSTC_INDIC_CONTAINER" value="8"/>
  <define name="wxSTC_INDICVALUEBIT" value="0x1000000"/>
  <define name="wxSTC_INDICVALUEMASK" value="0xFFFFFF"/>
  <define name="wxSTC_INDICFLAG_VALUEFORE" value="1"/>
  <define name="wxSTC_IV_NONE" value="0"/>
  <define name="wxSTC_IV_REAL" value="1"/>
  <define name="wxSTC_IV_LOOKFORWARD" value="2"/>
  <define name="wxSTC_IV_LOOKBOTH" value="3"/>
  <define name="wxSTC_PRINT_NORMAL" value="0"/>
  <define name="wxSTC_PRINT_INVERTLIGHT" value="1"/>
  <define name="wxSTC_PRINT_BLACKONWHITE" value="2"/>
  <define name="wxSTC_PRINT_COLOURONWHITE" value="3"/>
  <define name="wxSTC_PRINT_COLOURONWHITEDEFAULTBG" value="4"/>
  <define name="wxSTC_FIND_WHOLEWORD" value="0x2"/>
  <define name="wxSTC_FIND_MATCHCASE" value="0x4"/>
  <define name="wxSTC_FIND_WORDSTART" value="0x00100000"/>
  <define name="wxSTC_FIND_REGEXP" value="0x00200000"/>
  <define name="wxSTC_FIND_POSIX" value="0x00400000"/>
  <define name="wxSTC_FIND_CXX11REGEX" value="0x00800000"/>
  <define name="wxSTC_FOLDLEVELBASE" value="0x400"/>
  <define name="wxSTC_FOLDLEVELWHITEFLAG" value="0x1000"/>
  <define name="wxSTC_FOLDLEVELHEADERFLAG" value="0x2000"/>
  <define name="wxSTC_FOLDLEVELNUMBERMASK" value="0x0FFF"/>
  <define name="wxSTC_FOLDDISPLAYTEXT_HIDDEN" value="0"/>
  <define name="wxSTC_FOLDDISPLAYTEXT_STANDARD" value="1"/>
  <define name="wxSTC_FOLDDISPLAYTEXT_BOXED" value="2"/>
  <define name="wxSTC_FOLDACTION_CONTRACT" value="0"/>
  <define name="wxSTC_FOLDACTION_EXPAND" value="1"/>
  <define name="wxSTC_FOLDACTION_TOGGLE" value="2"/>
  <define name="wxSTC_AUTOMATICFOLD_SHOW" value="0x0001"/>
  <define name="wxSTC_AUTOMATICFOLD_CLICK" value="0x0002"/>
  <define name="wxSTC_AUTOMATICFOLD_CHANGE" value="0x0004"/>
  <define name="wxSTC_FOLDFLAG_LINEBEFORE_EXPANDED" value="0x0002"/>
  <define name="wxSTC_FOLDFLAG_LINEBEFORE_CONTRACTED" value="0x0004"/>
  <define name="wxSTC_FOLDFLAG_LINEAFTER_EXPANDED" value="0x0008"/>
  <define name="wxSTC_FOLDFLAG_LINEAFTER_CONTRACTED" value="0x0010"/>
  <define name="wxSTC_FOLDFLAG_LEVELNUMBERS" value="0x0040"/>
  <define name="wxSTC_FOLDFLAG_LINESTATE" value="0x0080"/>
  <define name="wxSTC_TIME_FOREVER" value="10000000"/>
  <define name="wxSTC_IDLESTYLING_NONE" value="0"/>
  <define name="wxSTC_IDLESTYLING_TOVISIBLE" value="1"/>
  <define name="wxSTC_IDLESTYLING_AFTERVISIBLE" value="2"/>
  <define name="wxSTC_IDLESTYLING_ALL" value="3"/>
  <define name="wxSTC_WRAP_NONE" value="0"/>
  <define name="wxSTC_WRAP_WORD" value="1"/>
  <define name="wxSTC_WRAP_CHAR" value="2"/>
  <define name="wxSTC_WRAP_WHITESPACE" value="3"/>
  <define name="wxSTC_WRAPVISUALFLAG_NONE" value="0x0000"/>
  <define name="wxSTC_WRAPVISUALFLAG_END" value="0x0001"/>
  <define name="wxSTC_WRAPVISUALFLAG_START" value="0x0002"/>
  <define name="wxSTC_WRAPVISUALFLAG_MARGIN" value="0x0004"/>
  <define name="wxSTC_WRAPVISUALFLAGLOC_DEFAULT" value="0x0000"/>
  <define name="wxSTC_WRAPVISUALFLAGLOC_END_BY_TEXT" value="0x0001"/>
  <define name="wxSTC_WRAPVISUALFLAGLOC_START_BY_TEXT" value="0x0002"/>
  <define name="wxSTC_WRAPINDENT_FIXED" value="0"/>
  <define name="wxSTC_WRAPINDENT_SAME" value="1"/>
  <define name="wxSTC_WRAPINDENT_INDENT" value="2"/>
  <define name="wxSTC_CACHE_NONE" value="0"/>
  <define name="wxSTC_CACHE_CARET" value="1"/>
  <define name="wxSTC_CACHE_PAGE" value="2"/>
  <define name="wxSTC_CACHE_DOCUMENT" value="3"/>
  <define name="wxSTC_PHASES_ONE" value="0"/>
  <define name="wxSTC_PHASES_TWO" value="1"/>
  <define name="wxSTC_PHASES_MULTIPLE" value="2"/>
  <define name="wxSTC_EFF_QUALITY_MASK" value="0xF"/>
  <define name="wxSTC_EFF_QUALITY_DEFAULT" value="0"/>
  <define name="wxSTC_EFF_QUALITY_NON_ANTIALIASED" value="1"/>
  <define name="wxSTC_EFF_QUALITY_ANTIALIASED" value="2"/>
  <define name="wxSTC_EFF_QUALITY_LCD_OPTIMIZED" value="3"/>
  <define name="wxSTC_MULTIPASTE_ONCE" value="0"/>
  <define name="wxSTC_MULTIPASTE_EACH" value="1"/>
  <define name="wxSTC_EDGE_NONE" value="0"/>
  <define name="wxSTC_EDGE_LINE" value="1"/>
  <define name="wxSTC_EDGE_BACKGROUND" value="2"/>
  <define name="wxSTC_EDGE_MULTILINE" value="3"/>
  <define name="wxSTC_POPUP_NEVER" value="0"/>
  <define name="wxSTC_POPUP_ALL" value="1"/>
  <define name="wxSTC_POPUP_TEXT" value="2"/>
  <define name="wxSTC_STATUS_OK" value="0"/>
  <define name="wxSTC_STATUS_FAILURE" value="1"/>
  <define name="wxSTC_STATUS_BADALLOC" value="2"/>
  <define name="wxSTC_STATUS_WARN_START" value="1000"/>
  <define name="wxSTC_STATUS_WARN_REGEX" value="1001"/>
  <define name="wxSTC_CURSORNORMAL" value="-1"/>
  <define name="wxSTC_CURSORARROW" value="2"/>
  <define name="wxSTC_CURSORWAIT" value="4"/>
  <define name="wxSTC_CURSORREVERSEARROW" value="7"/>
  <define name="wxSTC_VISIBLE_SLOP" value="0x01"/>
  <define name="wxSTC_VISIBLE_STRICT" value="0x04"/>
  <define name="wxSTC_CARET_SLOP" value="0x01"/>
  <define name="wxSTC_CARET_STRICT" value="0x04"/>
  <define name="wxSTC_CARET_JUMPS" value="0x10"/>
  <define name="wxSTC_CARET_EVEN" value="0x08"/>
  <define name="wxSTC_SEL_STREAM" value="0"/>
  <define name="wxSTC_SEL_RECTANGLE" value="1"/>
  <define name="wxSTC_SEL_LINES" value="2"/>
  <define name="wxSTC_SEL_THIN" value="3"/>
  <define name="wxSTC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE" value="0"/>
  <define name="wxSTC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE" value="1"/>
  <define name="wxSTC_MULTIAUTOC_ONCE" value="0"/>
  <define name="wxSTC_MULTIAUTOC_EACH" value="1"/>
  <define name="wxSTC_ORDER_PRESORTED" value="0"/>
  <define name="wxSTC_ORDER_PERFORMSORT" value="1"/>
  <define name="wxSTC_ORDER_CUSTOM" value="2"/>
  <define name="wxSTC_CARETSTICKY_OFF" value="0"/>
  <define name="wxSTC_CARETSTICKY_ON" value="1"/>
  <define name="wxSTC_CARETSTICKY_WHITESPACE" value="2"/>
  <define name="wxSTC_ALPHA_TRANSPARENT" value="0"/>
  <define name="wxSTC_ALPHA_OPAQUE" value="255"/>
  <define name="wxSTC_ALPHA_NOALPHA" value="256"/>
  <define name="wxSTC_CARETSTYLE_INVISIBLE" value="0"/>
  <define name="wxSTC_CARETSTYLE_LINE" value="1"/>
  <define name="wxSTC_CARETSTYLE_BLOCK" value="2"/>
  <define name="wxSTC_MARGINOPTION_NONE" value="0"/>
  <define name="wxSTC_MARGINOPTION_SUBLINESELECT" value="1"/>
  <define name="wxSTC_ANNOTATION_HIDDEN" value="0"/>
  <define name="wxSTC_ANNOTATION_STANDARD" value="1"/>
  <define name="wxSTC_ANNOTATION_BOXED" value="2"/>
  <define name="wxSTC_ANNOTATION_INDENTED" value="3"/>
  <define name="wxSTC_UNDO_MAY_COALESCE" value="1"/>
  <define name="wxSTC_VS_NONE" value="0"/>
  <define name="wxSTC_VS_RECTANGULARSELECTION" value="1"/>
  <define name="wxSTC_VS_USERACCESSIBLE" value="2"/>
  <define name="wxSTC_VS_NOWRAPLINESTART" value="4"/>
  <define name="wxSTC_TECHNOLOGY_DEFAULT" value="0"/>
  <define name="wxSTC_TECHNOLOGY_DIRECTWRITE" value="1"/>
  <define name="wxSTC_LINE_END_TYPE_DEFAULT" value="0"/>
  <define name="wxSTC_LINE_END_TYPE_UNICODE" value="1"/>
  <define name="wxSTC_KEYWORDSET_MAX" value="8"/>
  <define name="wxSTC_TYPE_BOOLEAN" value="0"/>
  <define name="wxSTC_TYPE_INTEGER" value="1"/>
  <define name="wxSTC_TYPE_STRING" value="2"/>
  <define name="wxSTC_MOD_INSERTTEXT" value="0x1"/>
  <define name="wxSTC_MOD_DELETETEXT" value="0x2"/>
  <define name="wxSTC_MOD_CHANGESTYLE" value="0x4"/>
  <define name="wxSTC_MOD_CHANGEFOLD" value="0x8"/>
  <define name="wxSTC_PERFORMED_USER" value="0x10"/>
  <define name="wxSTC_PERFORMED_UNDO" value="0x20"/>
  <define name="wxSTC_PERFORMED_REDO" value="0x40"/>
  <define name="wxSTC_MULTISTEPUNDOREDO" value="0x80"/>
  <define name="wxSTC_LASTSTEPINUNDOREDO" value="0x100"/>
  <define name="wxSTC_MOD_CHANGEMARKER" value="0x200"/>
  <define name="wxSTC_MOD_BEFOREINSERT" value="0x400"/>
  <define name="wxSTC_MOD_BEFOREDELETE" value="0x800"/>
  <define name="wxSTC_MULTILINEUNDOREDO" value="0x1000"/>
  <define name="wxSTC_STARTACTION" value="0x2000"/>
  <define name="wxSTC_MOD_CHANGEINDICATOR" value="0x4000"/>
  <define name="wxSTC_MOD_CHANGELINESTATE" value="0x8000"/>
  <define name="wxSTC_MOD_CHANGEMARGIN" value="0x10000"/>
  <define name="wxSTC_MOD_CHANGEANNOTATION" value="0x20000"/>
  <define name="wxSTC_MOD_CONTAINER" value="0x40000"/>
  <define name="wxSTC_MOD_LEXERSTATE" value="0x80000"/>
  <define name="wxSTC_MOD_INSERTCHECK" value="0x100000"/>
  <define name="wxSTC_MOD_CHANGETABSTOPS" value="0x200000"/>
  <define name="wxSTC_MODEVENTMASKALL" value="0x3FFFFF"/>
  <define name="wxSTC_UPDATE_CONTENT" value="0x1"/>
  <define name="wxSTC_UPDATE_SELECTION" value="0x2"/>
  <define name="wxSTC_UPDATE_V_SCROLL" value="0x4"/>
  <define name="wxSTC_UPDATE_H_SCROLL" value="0x8"/>
  <define name="wxSTC_KEY_DOWN" value="300"/>
  <define name="wxSTC_KEY_UP" value="301"/>
  <define name="wxSTC_KEY_LEFT" value="302"/>
  <define name="wxSTC_KEY_RIGHT" value="303"/>
  <define name="wxSTC_KEY_HOME" value="304"/>
  <define name="wxSTC_KEY_END" value="305"/>
  <define name="wxSTC_KEY_PRIOR" value="306"/>
  <define name="wxSTC_KEY_NEXT" value="307"/>
  <define name="wxSTC_KEY_DELETE" value="308"/>
  <define name="wxSTC_KEY_INSERT" value="309"/>
  <define name="wxSTC_KEY_ESCAPE" value="7"/>
  <define name="wxSTC_KEY_BACK" value="8"/>
  <define name="wxSTC_KEY_TAB" value="9"/>
  <define name="wxSTC_KEY_RETURN" value="13"/>
  <define name="wxSTC_KEY_ADD" value="310"/>
  <define name="wxSTC_KEY_SUBTRACT" value="311"/>
  <define name="wxSTC_KEY_DIVIDE" value="312"/>
  <define name="wxSTC_KEY_WIN" value="313"/>
  <define name="wxSTC_KEY_RWIN" value="314"/>
  <define name="wxSTC_KEY_MENU" value="315"/>
  <define name="wxSTC_KEYMOD_NORM" value="0"/>
  <define name="wxSTC_KEYMOD_SHIFT" value="1"/>
  <define name="wxSTC_KEYMOD_CTRL" value="2"/>
  <define name="wxSTC_KEYMOD_ALT" value="4"/>
  <define name="wxSTC_KEYMOD_SUPER" value="8"/>
  <define name="wxSTC_KEYMOD_META" value="16"/>
  <define name="wxSTC_AC_FILLUP" value="1"/>
  <define name="wxSTC_AC_DOUBLECLICK" value="2"/>
  <define name="wxSTC_AC_TAB" value="3"/>
  <define name="wxSTC_AC_NEWLINE" value="4"/>
  <define name="wxSTC_AC_COMMAND" value="5"/>
  <define name="wxSTC_LEX_CONTAINER" value="0"/>
  <define name="wxSTC_LEX_NULL" value="1"/>
  <define name="wxSTC_LEX_PYTHON" value="2"/>
  <define name="wxSTC_LEX_CPP" value="3"/>
  <define name="wxSTC_LEX_HTML" value="4"/>
  <define name="wxSTC_LEX_XML" value="5"/>
  <define name="wxSTC_LEX_PERL" value="6"/>
  <define name="wxSTC_LEX_SQL" value="7"/>
  <define name="wxSTC_LEX_VB" value="8"/>
  <define name="wxSTC_LEX_PROPERTIES" value="9"/>
  <define name="wxSTC_LEX_ERRORLIST" value="10"/>
  <define name="wxSTC_LEX_MAKEFILE" value="11"/>
  <define name="wxSTC_LEX_BATCH" value="12"/>
  <define name="wxSTC_LEX_XCODE" value="13"/>
  <define name="wxSTC_LEX_LATEX" value="14"/>
  <define name="wxSTC_LEX_LUA" value="15"/>
  <define name="wxSTC_LEX_DIFF" value="16"/>
  <define name="wxSTC_LEX_CONF" value="17"/>
  <define name="wxSTC_LEX_PASCAL" value="18"/>
  <define name="wxSTC_LEX_AVE" value="19"/>
  <define name="wxSTC_LEX_ADA" value="20"/>
  <define name="wxSTC_LEX_LISP" value="21"/>
  <define name="wxSTC_LEX_RUBY" value="22"/>
  <define name="wxSTC_LEX_EIFFEL" value="23"/>
  <define name="wxSTC_LEX_EIFFELKW" value="24"/>
  <define name="wxSTC_LEX_TCL" value="25"/>
  <define name="wxSTC_LEX_NNCRONTAB" value="26"/>
  <define name="wxSTC_LEX_BULLANT" value="27"/>
  <define name="wxSTC_LEX_VBSCRIPT" value="28"/>
  <define name="wxSTC_LEX_BAAN" value="31"/>
  <define name="wxSTC_LEX_MATLAB" value="32"/>
  <define name="wxSTC_LEX_SCRIPTOL" value="33"/>
  <define name="wxSTC_LEX_ASM" value="34"/>
  <define name="wxSTC_LEX_CPPNOCASE" value="35"/>
  <define name="wxSTC_LEX_FORTRAN" value="36"/>
  <define name="wxSTC_LEX_F77" value="37"/>
  <define name="wxSTC_LEX_CSS" value="38"/>
  <define name="wxSTC_LEX_POV" value="39"/>
  <define name="wxSTC_LEX_LOUT" value="40"/>
  <define name="wxSTC_LEX_ESCRIPT" value="41"/>
  <define name="wxSTC_LEX_PS" value="42"/>
  <define name="wxSTC_LEX_NSIS" value="43"/>
  <define name="wxSTC_LEX_MMIXAL" value="44"/>
  <define name="wxSTC_LEX_CLW" value="45"/>
  <define name="wxSTC_LEX_CLWNOCASE" value="46"/>
  <define name="wxSTC_LEX_LOT" value="47"/>
  <define name="wxSTC_LEX_YAML" value="48"/>
  <define name="wxSTC_LEX_TEX" value="49"/>
  <define name="wxSTC_LEX_METAPOST" value="50"/>
  <define name="wxSTC_LEX_POWERBASIC" value="51"/>
  <define name="wxSTC_LEX_FORTH" value="52"/>
  <define name="wxSTC_LEX_ERLANG" value="53"/>
  <define name="wxSTC_LEX_OCTAVE" value="54"/>
  <define name="wxSTC_LEX_MSSQL" value="55"/>
  <define name="wxSTC_LEX_VERILOG" value="56"/>
  <define name="wxSTC_LEX_KIX" value="57"/>
  <define name="wxSTC_LEX_GUI4CLI" value="58"/>
  <define name="wxSTC_LEX_SPECMAN" value="59"/>
  <define name="wxSTC_LEX_AU3" value="60"/>
  <define name="wxSTC_LEX_APDL" value="61"/>
  <define name="wxSTC_LEX_BASH" value="62"/>
  <define name="wxSTC_LEX_ASN1" value="63"/>
  <define name="wxSTC_LEX_VHDL" value="64"/>
  <define name="wxSTC_LEX_CAML" value="65"/>
  <define name="wxSTC_LEX_BLITZBASIC" value="66"/>
  <define name="wxSTC_LEX_PUREBASIC" value="67"/>
  <define name="wxSTC_LEX_HASKELL" value="68"/>
  <define name="wxSTC_LEX_PHPSCRIPT" value="69"/>
  <define name="wxSTC_LEX_TADS3" value="70"/>
  <define name="wxSTC_LEX_REBOL" value="71"/>
  <define name="wxSTC_LEX_SMALLTALK" value="72"/>
  <define name="wxSTC_LEX_FLAGSHIP" value="73"/>
  <define name="wxSTC_LEX_CSOUND" value="74"/>
  <define name="wxSTC_LEX_FREEBASIC" value="75"/>
  <define name="wxSTC_LEX_INNOSETUP" value="76"/>
  <define name="wxSTC_LEX_OPAL" value="77"/>
  <define name="wxSTC_LEX_SPICE" value="78"/>
  <define name="wxSTC_LEX_D" value="79"/>
  <define name="wxSTC_LEX_CMAKE" value="80"/>
  <define name="wxSTC_LEX_GAP" value="81"/>
  <define name="wxSTC_LEX_PLM" value="82"/>
  <define name="wxSTC_LEX_PROGRESS" value="83"/>
  <define name="wxSTC_LEX_ABAQUS" value="84"/>
  <define name="wxSTC_LEX_ASYMPTOTE" value="85"/>
  <define name="wxSTC_LEX_R" value="86"/>
  <define name="wxSTC_LEX_MAGIK" value="87"/>
  <define name="wxSTC_LEX_POWERSHELL" value="88"/>
  <define name="wxSTC_LEX_MYSQL" value="89"/>
  <define name="wxSTC_LEX_PO" value="90"/>
  <define name="wxSTC_LEX_TAL" value="91"/>
  <define name="wxSTC_LEX_COBOL" value="92"/>
  <define name="wxSTC_LEX_TACL" value="93"/>
  <define name="wxSTC_LEX_SORCUS" value="94"/>
  <define name="wxSTC_LEX_POWERPRO" value="95"/>
  <define name="wxSTC_LEX_NIMROD" value="96"/>
  <define name="wxSTC_LEX_SML" value="97"/>
  <define name="wxSTC_LEX_MARKDOWN" value="98"/>
  <define name="wxSTC_LEX_TXT2TAGS" value="99"/>
  <define name="wxSTC_LEX_A68K" value="100"/>
  <define name="wxSTC_LEX_MODULA" value="101"/>
  <define name="wxSTC_LEX_COFFEESCRIPT" value="102"/>
  <define name="wxSTC_LEX_TCMD" value="103"/>
  <define name="wxSTC_LEX_AVS" value="104"/>
  <define name="wxSTC_LEX_ECL" value="105"/>
  <define name="wxSTC_LEX_OSCRIPT" value="106"/>
  <define name="wxSTC_LEX_VISUALPROLOG" value="107"/>
  <define name="wxSTC_LEX_LITERATEHASKELL" value="108"/>
  <define name="wxSTC_LEX_STTXT" value="109"/>
  <define name="wxSTC_LEX_KVIRC" value="110"/>
  <define name="wxSTC_LEX_RUST" value="111"/>
  <define name="wxSTC_LEX_DMAP" value="112"/>
  <define name="wxSTC_LEX_AS" value="113"/>
  <define name="wxSTC_LEX_DMIS" value="114"/>
  <define name="wxSTC_LEX_REGISTRY" value="115"/>
  <define name="wxSTC_LEX_BIBTEX" value="116"/>
  <define name="wxSTC_LEX_SREC" value="117"/>
  <define name="wxSTC_LEX_IHEX" value="118"/>
  <define name="wxSTC_LEX_TEHEX" value="119"/>
  <define name="wxSTC_LEX_JSON" value="120"/>
  <define name="wxSTC_LEX_EDIFACT" value="121"/>
  <define name="wxSTC_LEX_AUTOMATIC" value="1000"/>
  <define name="wxSTC_P_DEFAULT" value="0"/>
  <define name="wxSTC_P_COMMENTLINE" value="1"/>
  <define name="wxSTC_P_NUMBER" value="2"/>
  <define name="wxSTC_P_STRING" value="3"/>
  <define name="wxSTC_P_CHARACTER" value="4"/>
  <define name="wxSTC_P_WORD" value="5"/>
  <define name="wxSTC_P_TRIPLE" value="6"/>
  <define name="wxSTC_P_TRIPLEDOUBLE" value="7"/>
  <define name="wxSTC_P_CLASSNAME" value="8"/>
  <define name="wxSTC_P_DEFNAME" value="9"/>
  <define name="wxSTC_P_OPERATOR" value="10"/>
  <define name="wxSTC_P_IDENTIFIER" value="11"/>
  <define name="wxSTC_P_COMMENTBLOCK" value="12"/>
  <define name="wxSTC_P_STRINGEOL" value="13"/>
  <define name="wxSTC_P_WORD2" value="14"/>
  <define name="wxSTC_P_DECORATOR" value="15"/>
  <define name="wxSTC_C_DEFAULT" value="0"/>
  <define name="wxSTC_C_COMMENT" value="1"/>
  <define name="wxSTC_C_COMMENTLINE" value="2"/>
  <define name="wxSTC_C_COMMENTDOC" value="3"/>
  <define name="wxSTC_C_NUMBER" value="4"/>
  <define name="wxSTC_C_WORD" value="5"/>
  <define name="wxSTC_C_STRING" value="6"/>
  <define name="wxSTC_C_CHARACTER" value="7"/>
  <define name="wxSTC_C_UUID" value="8"/>
  <define name="wxSTC_C_PREPROCESSOR" value="9"/>
  <define name="wxSTC_C_OPERATOR" value="10"/>
  <define name="wxSTC_C_IDENTIFIER" value="11"/>
  <define name="wxSTC_C_STRINGEOL" value="12"/>
  <define name="wxSTC_C_VERBATIM" value="13"/>
  <define name="wxSTC_C_REGEX" value="14"/>
  <define name="wxSTC_C_COMMENTLINEDOC" value="15"/>
  <define name="wxSTC_C_WORD2" value="16"/>
  <define name="wxSTC_C_COMMENTDOCKEYWORD" value="17"/>
  <define name="wxSTC_C_COMMENTDOCKEYWORDERROR" value="18"/>
  <define name="wxSTC_C_GLOBALCLASS" value="19"/>
  <define name="wxSTC_C_STRINGRAW" value="20"/>
  <define name="wxSTC_C_TRIPLEVERBATIM" value="21"/>
  <define name="wxSTC_C_HASHQUOTEDSTRING" value="22"/>
  <define name="wxSTC_C_PREPROCESSORCOMMENT" value="23"/>
  <define name="wxSTC_C_PREPROCESSORCOMMENTDOC" value="24"/>
  <define name="wxSTC_C_USERLITERAL" value="25"/>
  <define name="wxSTC_C_TASKMARKER" value="26"/>
  <define name="wxSTC_C_ESCAPESEQUENCE" value="27"/>
  <define name="wxSTC_D_DEFAULT" value="0"/>
  <define name="wxSTC_D_COMMENT" value="1"/>
  <define name="wxSTC_D_COMMENTLINE" value="2"/>
  <define name="wxSTC_D_COMMENTDOC" value="3"/>
  <define name="wxSTC_D_COMMENTNESTED" value="4"/>
  <define name="wxSTC_D_NUMBER" value="5"/>
  <define name="wxSTC_D_WORD" value="6"/>
  <define name="wxSTC_D_WORD2" value="7"/>
  <define name="wxSTC_D_WORD3" value="8"/>
  <define name="wxSTC_D_TYPEDEF" value="9"/>
  <define name="wxSTC_D_STRING" value="10"/>
  <define name="wxSTC_D_STRINGEOL" value="11"/>
  <define name="wxSTC_D_CHARACTER" value="12"/>
  <define name="wxSTC_D_OPERATOR" value="13"/>
  <define name="wxSTC_D_IDENTIFIER" value="14"/>
  <define name="wxSTC_D_COMMENTLINEDOC" value="15"/>
  <define name="wxSTC_D_COMMENTDOCKEYWORD" value="16"/>
  <define name="wxSTC_D_COMMENTDOCKEYWORDERROR" value="17"/>
  <define name="wxSTC_D_STRINGB" value="18"/>
  <define name="wxSTC_D_STRINGR" value="19"/>
  <define name="wxSTC_D_WORD5" value="20"/>
  <define name="wxSTC_D_WORD6" value="21"/>
  <define name="wxSTC_D_WORD7" value="22"/>
  <define name="wxSTC_TCL_DEFAULT" value="0"/>
  <define name="wxSTC_TCL_COMMENT" value="1"/>
  <define name="wxSTC_TCL_COMMENTLINE" value="2"/>
  <define name="wxSTC_TCL_NUMBER" value="3"/>
  <define name="wxSTC_TCL_WORD_IN_QUOTE" value="4"/>
  <define name="wxSTC_TCL_IN_QUOTE" value="5"/>
  <define name="wxSTC_TCL_OPERATOR" value="6"/>
  <define name="wxSTC_TCL_IDENTIFIER" value="7"/>
  <define name="wxSTC_TCL_SUBSTITUTION" value="8"/>
  <define name="wxSTC_TCL_SUB_BRACE" value="9"/>
  <define name="wxSTC_TCL_MODIFIER" value="10"/>
  <define name="wxSTC_TCL_EXPAND" value="11"/>
  <define name="wxSTC_TCL_WORD" value="12"/>
  <define name="wxSTC_TCL_WORD2" value="13"/>
  <define name="wxSTC_TCL_WORD3" value="14"/>
  <define name="wxSTC_TCL_WORD4" value="15"/>
  <define name="wxSTC_TCL_WORD5" value="16"/>
  <define name="wxSTC_TCL_WORD6" value="17"/>
  <define name="wxSTC_TCL_WORD7" value="18"/>
  <define name="wxSTC_TCL_WORD8" value="19"/>
  <define name="wxSTC_TCL_COMMENT_BOX" value="20"/>
  <define name="wxSTC_TCL_BLOCK_COMMENT" value="21"/>
  <define name="wxSTC_H_DEFAULT" value="0"/>
  <define name="wxSTC_H_TAG" value="1"/>
  <define name="wxSTC_H_TAGUNKNOWN" value="2"/>
  <define name="wxSTC_H_ATTRIBUTE" value="3"/>
  <define name="wxSTC_H_ATTRIBUTEUNKNOWN" value="4"/>
  <define name="wxSTC_H_NUMBER" value="5"/>
  <define name="wxSTC_H_DOUBLESTRING" value="6"/>
  <define name="wxSTC_H_SINGLESTRING" value="7"/>
  <define name="wxSTC_H_OTHER" value="8"/>
  <define name="wxSTC_H_COMMENT" value="9"/>
  <define name="wxSTC_H_ENTITY" value="10"/>
  <define name="wxSTC_H_TAGEND" value="11"/>
  <define name="wxSTC_H_XMLSTART" value="12"/>
  <define name="wxSTC_H_XMLEND" value="13"/>
  <define name="wxSTC_H_SCRIPT" value="14"/>
  <define name="wxSTC_H_ASP" value="15"/>
  <define name="wxSTC_H_ASPAT" value="16"/>
  <define name="wxSTC_H_CDATA" value="17"/>
  <define name="wxSTC_H_QUESTION" value="18"/>
  <define name="wxSTC_H_VALUE" value="19"/>
  <define name="wxSTC_H_XCCOMMENT" value="20"/>
  <define name="wxSTC_H_SGML_DEFAULT" value="21"/>
  <define name="wxSTC_H_SGML_COMMAND" value="22"/>
  <define name="wxSTC_H_SGML_1ST_PARAM" value="23"/>
  <define name="wxSTC_H_SGML_DOUBLESTRING" value="24"/>
  <define name="wxSTC_H_SGML_SIMPLESTRING" value="25"/>
  <define name="wxSTC_H_SGML_ERROR" value="26"/>
  <define name="wxSTC_H_SGML_SPECIAL" value="27"/>
  <define name="wxSTC_H_SGML_ENTITY" value="28"/>
  <define name="wxSTC_H_SGML_COMMENT" value="29"/>
  <define name="wxSTC_H_SGML_1ST_PARAM_COMMENT" value="30"/>
  <define name="wxSTC_H_SGML_BLOCK_DEFAULT" value="31"/>
  <define name="wxSTC_HJ_START" value="40"/>
  <define name="wxSTC_HJ_DEFAULT" value="41"/>
  <define name="wxSTC_HJ_COMMENT" value="42"/>
  <define name="wxSTC_HJ_COMMENTLINE" value="43"/>
  <define name="wxSTC_HJ_COMMENTDOC" value="44"/>
  <define name="wxSTC_HJ_NUMBER" value="45"/>
  <define name="wxSTC_HJ_WORD" value="46"/>
  <define name="wxSTC_HJ_KEYWORD" value="47"/>
  <define name="wxSTC_HJ_DOUBLESTRING" value="48"/>
  <define name="wxSTC_HJ_SINGLESTRING" value="49"/>
  <define name="wxSTC_HJ_SYMBOLS" value="50"/>
  <define name="wxSTC_HJ_STRINGEOL" value="51"/>
  <define name="wxSTC_HJ_REGEX" value="52"/>
  <define name="wxSTC_HJA_START" value="55"/>
  <define name="wxSTC_HJA_DEFAULT" value="56"/>
  <define name="wxSTC_HJA_COMMENT" value="57"/>
  <define name="wxSTC_HJA_COMMENTLINE" value="58"/>
  <define name="wxSTC_HJA_COMMENTDOC" value="59"/>
  <define name="wxSTC_HJA_NUMBER" value="60"/>
  <define name="wxSTC_HJA_WORD" value="61"/>
  <define name="wxSTC_HJA_KEYWORD" value="62"/>
  <define name="wxSTC_HJA_DOUBLESTRING" value="63"/>
  <define name="wxSTC_HJA_SINGLESTRING" value="64"/>
  <define name="wxSTC_HJA_SYMBOLS" value="65"/>
  <define name="wxSTC_HJA_STRINGEOL" value="66"/>
  <define name="wxSTC_HJA_REGEX" value="67"/>
  <define name="wxSTC_HB_START" value="70"/>
  <define name="wxSTC_HB_DEFAULT" value="71"/>
  <define name="wxSTC_HB_COMMENTLINE" value="72"/>
  <define name="wxSTC_HB_NUMBER" value="73"/>
  <define name="wxSTC_HB_WORD" value="74"/>
  <define name="wxSTC_HB_STRING" value="75"/>
  <define name="wxSTC_HB_IDENTIFIER" value="76"/>
  <define name="wxSTC_HB_STRINGEOL" value="77"/>
  <define name="wxSTC_HBA_START" value="80"/>
  <define name="wxSTC_HBA_DEFAULT" value="81"/>
  <define name="wxSTC_HBA_COMMENTLINE" value="82"/>
  <define name="wxSTC_HBA_NUMBER" value="83"/>
  <define name="wxSTC_HBA_WORD" value="84"/>
  <define name="wxSTC_HBA_STRING" value="85"/>
  <define name="wxSTC_HBA_IDENTIFIER" value="86"/>
  <define name="wxSTC_HBA_STRINGEOL" value="87"/>
  <define name="wxSTC_HP_START" value="90"/>
  <define name="wxSTC_HP_DEFAULT" value="91"/>
  <define name="wxSTC_HP_COMMENTLINE" value="92"/>
  <define name="wxSTC_HP_NUMBER" value="93"/>
  <define name="wxSTC_HP_STRING" value="94"/>
  <define name="wxSTC_HP_CHARACTER" value="95"/>
  <define name="wxSTC_HP_WORD" value="96"/>
  <define name="wxSTC_HP_TRIPLE" value="97"/>
  <define name="wxSTC_HP_TRIPLEDOUBLE" value="98"/>
  <define name="wxSTC_HP_CLASSNAME" value="99"/>
  <define name="wxSTC_HP_DEFNAME" value="100"/>
  <define name="wxSTC_HP_OPERATOR" value="101"/>
  <define name="wxSTC_HP_IDENTIFIER" value="102"/>
  <define name="wxSTC_HPHP_COMPLEX_VARIABLE" value="104"/>
  <define name="wxSTC_HPA_START" value="105"/>
  <define name="wxSTC_HPA_DEFAULT" value="106"/>
  <define name="wxSTC_HPA_COMMENTLINE" value="107"/>
  <define name="wxSTC_HPA_NUMBER" value="108"/>
  <define name="wxSTC_HPA_STRING" value="109"/>
  <define name="wxSTC_HPA_CHARACTER" value="110"/>
  <define name="wxSTC_HPA_WORD" value="111"/>
  <define name="wxSTC_HPA_TRIPLE" value="112"/>
  <define name="wxSTC_HPA_TRIPLEDOUBLE" value="113"/>
  <define name="wxSTC_HPA_CLASSNAME" value="114"/>
  <define name="wxSTC_HPA_DEFNAME" value="115"/>
  <define name="wxSTC_HPA_OPERATOR" value="116"/>
  <define name="wxSTC_HPA_IDENTIFIER" value="117"/>
  <define name="wxSTC_HPHP_DEFAULT" value="118"/>
  <define name="wxSTC_HPHP_HSTRING" value="119"/>
  <define name="wxSTC_HPHP_SIMPLESTRING" value="120"/>
  <define name="wxSTC_HPHP_WORD" value="121"/>
  <define name="wxSTC_HPHP_NUMBER" value="122"/>
  <define name="wxSTC_HPHP_VARIABLE" value="123"/>
  <define name="wxSTC_HPHP_COMMENT" value="124"/>
  <define name="wxSTC_HPHP_COMMENTLINE" value="125"/>
  <define name="wxSTC_HPHP_HSTRING_VARIABLE" value="126"/>
  <define name="wxSTC_HPHP_OPERATOR" value="127"/>
  <define name="wxSTC_PL_DEFAULT" value="0"/>
  <define name="wxSTC_PL_ERROR" value="1"/>
  <define name="wxSTC_PL_COMMENTLINE" value="2"/>
  <define name="wxSTC_PL_POD" value="3"/>
  <define name="wxSTC_PL_NUMBER" value="4"/>
  <define name="wxSTC_PL_WORD" value="5"/>
  <define name="wxSTC_PL_STRING" value="6"/>
  <define name="wxSTC_PL_CHARACTER" value="7"/>
  <define name="wxSTC_PL_PUNCTUATION" value="8"/>
  <define name="wxSTC_PL_PREPROCESSOR" value="9"/>
  <define name="wxSTC_PL_OPERATOR" value="10"/>
  <define name="wxSTC_PL_IDENTIFIER" value="11"/>
  <define name="wxSTC_PL_SCALAR" value="12"/>
  <define name="wxSTC_PL_ARRAY" value="13"/>
  <define name="wxSTC_PL_HASH" value="14"/>
  <define name="wxSTC_PL_SYMBOLTABLE" value="15"/>
  <define name="wxSTC_PL_VARIABLE_INDEXER" value="16"/>
  <define name="wxSTC_PL_REGEX" value="17"/>
  <define name="wxSTC_PL_REGSUBST" value="18"/>
  <define name="wxSTC_PL_LONGQUOTE" value="19"/>
  <define name="wxSTC_PL_BACKTICKS" value="20"/>
  <define name="wxSTC_PL_DATASECTION" value="21"/>
  <define name="wxSTC_PL_HERE_DELIM" value="22"/>
  <define name="wxSTC_PL_HERE_Q" value="23"/>
  <define name="wxSTC_PL_HERE_QQ" value="24"/>
  <define name="wxSTC_PL_HERE_QX" value="25"/>
  <define name="wxSTC_PL_STRING_Q" value="26"/>
  <define name="wxSTC_PL_STRING_QQ" value="27"/>
  <define name="wxSTC_PL_STRING_QX" value="28"/>
  <define name="wxSTC_PL_STRING_QR" value="29"/>
  <define name="wxSTC_PL_STRING_QW" value="30"/>
  <define name="wxSTC_PL_POD_VERB" value="31"/>
  <define name="wxSTC_PL_SUB_PROTOTYPE" value="40"/>
  <define name="wxSTC_PL_FORMAT_IDENT" value="41"/>
  <define name="wxSTC_PL_FORMAT" value="42"/>
  <define name="wxSTC_PL_STRING_VAR" value="43"/>
  <define name="wxSTC_PL_XLAT" value="44"/>
  <define name="wxSTC_PL_REGEX_VAR" value="54"/>
  <define name="wxSTC_PL_REGSUBST_VAR" value="55"/>
  <define name="wxSTC_PL_BACKTICKS_VAR" value="57"/>
  <define name="wxSTC_PL_HERE_QQ_VAR" value="61"/>
  <define name="wxSTC_PL_HERE_QX_VAR" value="62"/>
  <define name="wxSTC_PL_STRING_QQ_VAR" value="64"/>
  <define name="wxSTC_PL_STRING_QX_VAR" value="65"/>
  <define name="wxSTC_PL_STRING_QR_VAR" value="66"/>
  <define name="wxSTC_RB_DEFAULT" value="0"/>
  <define name="wxSTC_RB_ERROR" value="1"/>
  <define name="wxSTC_RB_COMMENTLINE" value="2"/>
  <define name="wxSTC_RB_POD" value="3"/>
  <define name="wxSTC_RB_NUMBER" value="4"/>
  <define name="wxSTC_RB_WORD" value="5"/>
  <define name="wxSTC_RB_STRING" value="6"/>
  <define name="wxSTC_RB_CHARACTER" value="7"/>
  <define name="wxSTC_RB_CLASSNAME" value="8"/>
  <define name="wxSTC_RB_DEFNAME" value="9"/>
  <define name="wxSTC_RB_OPERATOR" value="10"/>
  <define name="wxSTC_RB_IDENTIFIER" value="11"/>
  <define name="wxSTC_RB_REGEX" value="12"/>
  <define name="wxSTC_RB_GLOBAL" value="13"/>
  <define name="wxSTC_RB_SYMBOL" value="14"/>
  <define name="wxSTC_RB_MODULE_NAME" value="15"/>
  <define name="wxSTC_RB_INSTANCE_VAR" value="16"/>
  <define name="wxSTC_RB_CLASS_VAR" value="17"/>
  <define name="wxSTC_RB_BACKTICKS" value="18"/>
  <define name="wxSTC_RB_DATASECTION" value="19"/>
  <define name="wxSTC_RB_HERE_DELIM" value="20"/>
  <define name="wxSTC_RB_HERE_Q" value="21"/>
  <define name="wxSTC_RB_HERE_QQ" value="22"/>
  <define name="wxSTC_RB_HERE_QX" value="23"/>
  <define name="wxSTC_RB_STRING_Q" value="24"/>
  <define name="wxSTC_RB_STRING_QQ" value="25"/>
  <define name="wxSTC_RB_STRING_QX" value="26"/>
  <define name="wxSTC_RB_STRING_QR" value="27"/>
  <define name="wxSTC_RB_STRING_QW" value="28"/>
  <define name="wxSTC_RB_WORD_DEMOTED" value="29"/>
  <define name="wxSTC_RB_STDIN" value="30"/>
  <define name="wxSTC_RB_STDOUT" value="31"/>
  <define name="wxSTC_RB_STDERR" value="40"/>
  <define name="wxSTC_RB_UPPER_BOUND" value="41"/>
  <define name="wxSTC_B_DEFAULT" value="0"/>
  <define name="wxSTC_B_COMMENT" value="1"/>
  <define name="wxSTC_B_NUMBER" value="2"/>
  <define name="wxSTC_B_KEYWORD" value="3"/>
  <define name="wxSTC_B_STRING" value="4"/>
  <define name="wxSTC_B_PREPROCESSOR" value="5"/>
  <define name="wxSTC_B_OPERATOR" value="6"/>
  <define name="wxSTC_B_IDENTIFIER" value="7"/>
  <define name="wxSTC_B_DATE" value="8"/>
  <define name="wxSTC_B_STRINGEOL" value="9"/>
  <define name="wxSTC_B_KEYWORD2" value="10"/>
  <define name="wxSTC_B_KEYWORD3" value="11"/>
  <define name="wxSTC_B_KEYWORD4" value="12"/>
  <define name="wxSTC_B_CONSTANT" value="13"/>
  <define name="wxSTC_B_ASM" value="14"/>
  <define name="wxSTC_B_LABEL" value="15"/>
  <define name="wxSTC_B_ERROR" value="16"/>
  <define name="wxSTC_B_HEXNUMBER" value="17"/>
  <define name="wxSTC_B_BINNUMBER" value="18"/>
  <define name="wxSTC_B_COMMENTBLOCK" value="19"/>
  <define name="wxSTC_B_DOCLINE" value="20"/>
  <define name="wxSTC_B_DOCBLOCK" value="21"/>
  <define name="wxSTC_B_DOCKEYWORD" value="22"/>
  <define name="wxSTC_PROPS_DEFAULT" value="0"/>
  <define name="wxSTC_PROPS_COMMENT" value="1"/>
  <define name="wxSTC_PROPS_SECTION" value="2"/>
  <define name="wxSTC_PROPS_ASSIGNMENT" value="3"/>
  <define name="wxSTC_PROPS_DEFVAL" value="4"/>
  <define name="wxSTC_PROPS_KEY" value="5"/>
  <define name="wxSTC_L_DEFAULT" value="0"/>
  <define name="wxSTC_L_COMMAND" value="1"/>
  <define name="wxSTC_L_TAG" value="2"/>
  <define name="wxSTC_L_MATH" value="3"/>
  <define name="wxSTC_L_COMMENT" value="4"/>
  <define name="wxSTC_L_TAG2" value="5"/>
  <define name="wxSTC_L_MATH2" value="6"/>
  <define name="wxSTC_L_COMMENT2" value="7"/>
  <define name="wxSTC_L_VERBATIM" value="8"/>
  <define name="wxSTC_L_SHORTCMD" value="9"/>
  <define name="wxSTC_L_SPECIAL" value="10"/>
  <define name="wxSTC_L_CMDOPT" value="11"/>
  <define name="wxSTC_L_ERROR" value="12"/>
  <define name="wxSTC_LUA_DEFAULT" value="0"/>
  <define name="wxSTC_LUA_COMMENT" value="1"/>
  <define name="wxSTC_LUA_COMMENTLINE" value="2"/>
  <define name="wxSTC_LUA_COMMENTDOC" value="3"/>
  <define name="wxSTC_LUA_NUMBER" value="4"/>
  <define name="wxSTC_LUA_WORD" value="5"/>
  <define name="wxSTC_LUA_STRING" value="6"/>
  <define name="wxSTC_LUA_CHARACTER" value="7"/>
  <define name="wxSTC_LUA_LITERALSTRING" value="8"/>
  <define name="wxSTC_LUA_PREPROCESSOR" value="9"/>
  <define name="wxSTC_LUA_OPERATOR" value="10"/>
  <define name="wxSTC_LUA_IDENTIFIER" value="11"/>
  <define name="wxSTC_LUA_STRINGEOL" value="12"/>
  <define name="wxSTC_LUA_WORD2" value="13"/>
  <define name="wxSTC_LUA_WORD3" value="14"/>
  <define name="wxSTC_LUA_WORD4" value="15"/>
  <define name="wxSTC_LUA_WORD5" value="16"/>
  <define name="wxSTC_LUA_WORD6" value="17"/>
  <define name="wxSTC_LUA_WORD7" value="18"/>
  <define name="wxSTC_LUA_WORD8" value="19"/>
  <define name="wxSTC_LUA_LABEL" value="20"/>
  <define name="wxSTC_ERR_DEFAULT" value="0"/>
  <define name="wxSTC_ERR_PYTHON" value="1"/>
  <define name="wxSTC_ERR_GCC" value="2"/>
  <define name="wxSTC_ERR_MS" value="3"/>
  <define name="wxSTC_ERR_CMD" value="4"/>
  <define name="wxSTC_ERR_BORLAND" value="5"/>
  <define name="wxSTC_ERR_PERL" value="6"/>
  <define name="wxSTC_ERR_NET" value="7"/>
  <define name="wxSTC_ERR_LUA" value="8"/>
  <define name="wxSTC_ERR_CTAG" value="9"/>
  <define name="wxSTC_ERR_DIFF_CHANGED" value="10"/>
  <define name="wxSTC_ERR_DIFF_ADDITION" value="11"/>
  <define name="wxSTC_ERR_DIFF_DELETION" value="12"/>
  <define name="wxSTC_ERR_DIFF_MESSAGE" value="13"/>
  <define name="wxSTC_ERR_PHP" value="14"/>
  <define name="wxSTC_ERR_ELF" value="15"/>
  <define name="wxSTC_ERR_IFC" value="16"/>
  <define name="wxSTC_ERR_IFORT" value="17"/>
  <define name="wxSTC_ERR_ABSF" value="18"/>
  <define name="wxSTC_ERR_TIDY" value="19"/>
  <define name="wxSTC_ERR_JAVA_STACK" value="20"/>
  <define name="wxSTC_ERR_VALUE" value="21"/>
  <define name="wxSTC_ERR_GCC_INCLUDED_FROM" value="22"/>
  <define name="wxSTC_ERR_ESCSEQ" value="23"/>
  <define name="wxSTC_ERR_ESCSEQ_UNKNOWN" value="24"/>
  <define name="wxSTC_ERR_ES_BLACK" value="40"/>
  <define name="wxSTC_ERR_ES_RED" value="41"/>
  <define name="wxSTC_ERR_ES_GREEN" value="42"/>
  <define name="wxSTC_ERR_ES_BROWN" value="43"/>
  <define name="wxSTC_ERR_ES_BLUE" value="44"/>
  <define name="wxSTC_ERR_ES_MAGENTA" value="45"/>
  <define name="wxSTC_ERR_ES_CYAN" value="46"/>
  <define name="wxSTC_ERR_ES_GRAY" value="47"/>
  <define name="wxSTC_ERR_ES_DARK_GRAY" value="48"/>
  <define name="wxSTC_ERR_ES_BRIGHT_RED" value="49"/>
  <define name="wxSTC_ERR_ES_BRIGHT_GREEN" value="50"/>
  <define name="wxSTC_ERR_ES_YELLOW" value="51"/>
  <define name="wxSTC_ERR_ES_BRIGHT_BLUE" value="52"/>
  <define name="wxSTC_ERR_ES_BRIGHT_MAGENTA" value="53"/>
  <define name="wxSTC_ERR_ES_BRIGHT_CYAN" value="54"/>
  <define name="wxSTC_ERR_ES_WHITE" value="55"/>
  <define name="wxSTC_BAT_DEFAULT" value="0"/>
  <define name="wxSTC_BAT_COMMENT" value="1"/>
  <define name="wxSTC_BAT_WORD" value="2"/>
  <define name="wxSTC_BAT_LABEL" value="3"/>
  <define name="wxSTC_BAT_HIDE" value="4"/>
  <define name="wxSTC_BAT_COMMAND" value="5"/>
  <define name="wxSTC_BAT_IDENTIFIER" value="6"/>
  <define name="wxSTC_BAT_OPERATOR" value="7"/>
  <define name="wxSTC_TCMD_DEFAULT" value="0"/>
  <define name="wxSTC_TCMD_COMMENT" value="1"/>
  <define name="wxSTC_TCMD_WORD" value="2"/>
  <define name="wxSTC_TCMD_LABEL" value="3"/>
  <define name="wxSTC_TCMD_HIDE" value="4"/>
  <define name="wxSTC_TCMD_COMMAND" value="5"/>
  <define name="wxSTC_TCMD_IDENTIFIER" value="6"/>
  <define name="wxSTC_TCMD_OPERATOR" value="7"/>
  <define name="wxSTC_TCMD_ENVIRONMENT" value="8"/>
  <define name="wxSTC_TCMD_EXPANSION" value="9"/>
  <define name="wxSTC_TCMD_CLABEL" value="10"/>
  <define name="wxSTC_MAKE_DEFAULT" value="0"/>
  <define name="wxSTC_MAKE_COMMENT" value="1"/>
  <define name="wxSTC_MAKE_PREPROCESSOR" value="2"/>
  <define name="wxSTC_MAKE_IDENTIFIER" value="3"/>
  <define name="wxSTC_MAKE_OPERATOR" value="4"/>
  <define name="wxSTC_MAKE_TARGET" value="5"/>
  <define name="wxSTC_MAKE_IDEOL" value="9"/>
  <define name="wxSTC_DIFF_DEFAULT" value="0"/>
  <define name="wxSTC_DIFF_COMMENT" value="1"/>
  <define name="wxSTC_DIFF_COMMAND" value="2"/>
  <define name="wxSTC_DIFF_HEADER" value="3"/>
  <define name="wxSTC_DIFF_POSITION" value="4"/>
  <define name="wxSTC_DIFF_DELETED" value="5"/>
  <define name="wxSTC_DIFF_ADDED" value="6"/>
  <define name="wxSTC_DIFF_CHANGED" value="7"/>
  <define name="wxSTC_CONF_DEFAULT" value="0"/>
  <define name="wxSTC_CONF_COMMENT" value="1"/>
  <define name="wxSTC_CONF_NUMBER" value="2"/>
  <define name="wxSTC_CONF_IDENTIFIER" value="3"/>
  <define name="wxSTC_CONF_EXTENSION" value="4"/>
  <define name="wxSTC_CONF_PARAMETER" value="5"/>
  <define name="wxSTC_CONF_STRING" value="6"/>
  <define name="wxSTC_CONF_OPERATOR" value="7"/>
  <define name="wxSTC_CONF_IP" value="8"/>
  <define name="wxSTC_CONF_DIRECTIVE" value="9"/>
  <define name="wxSTC_AVE_DEFAULT" value="0"/>
  <define name="wxSTC_AVE_COMMENT" value="1"/>
  <define name="wxSTC_AVE_NUMBER" value="2"/>
  <define name="wxSTC_AVE_WORD" value="3"/>
  <define name="wxSTC_AVE_STRING" value="6"/>
  <define name="wxSTC_AVE_ENUM" value="7"/>
  <define name="wxSTC_AVE_STRINGEOL" value="8"/>
  <define name="wxSTC_AVE_IDENTIFIER" value="9"/>
  <define name="wxSTC_AVE_OPERATOR" value="10"/>
  <define name="wxSTC_AVE_WORD1" value="11"/>
  <define name="wxSTC_AVE_WORD2" value="12"/>
  <define name="wxSTC_AVE_WORD3" value="13"/>
  <define name="wxSTC_AVE_WORD4" value="14"/>
  <define name="wxSTC_AVE_WORD5" value="15"/>
  <define name="wxSTC_AVE_WORD6" value="16"/>
  <define name="wxSTC_ADA_DEFAULT" value="0"/>
  <define name="wxSTC_ADA_WORD" value="1"/>
  <define name="wxSTC_ADA_IDENTIFIER" value="2"/>
  <define name="wxSTC_ADA_NUMBER" value="3"/>
  <define name="wxSTC_ADA_DELIMITER" value="4"/>
  <define name="wxSTC_ADA_CHARACTER" value="5"/>
  <define name="wxSTC_ADA_CHARACTEREOL" value="6"/>
  <define name="wxSTC_ADA_STRING" value="7"/>
  <define name="wxSTC_ADA_STRINGEOL" value="8"/>
  <define name="wxSTC_ADA_LABEL" value="9"/>
  <define name="wxSTC_ADA_COMMENTLINE" value="10"/>
  <define name="wxSTC_ADA_ILLEGAL" value="11"/>
  <define name="wxSTC_BAAN_DEFAULT" value="0"/>
  <define name="wxSTC_BAAN_COMMENT" value="1"/>
  <define name="wxSTC_BAAN_COMMENTDOC" value="2"/>
  <define name="wxSTC_BAAN_NUMBER" value="3"/>
  <define name="wxSTC_BAAN_WORD" value="4"/>
  <define name="wxSTC_BAAN_STRING" value="5"/>
  <define name="wxSTC_BAAN_PREPROCESSOR" value="6"/>
  <define name="wxSTC_BAAN_OPERATOR" value="7"/>
  <define name="wxSTC_BAAN_IDENTIFIER" value="8"/>
  <define name="wxSTC_BAAN_STRINGEOL" value="9"/>
  <define name="wxSTC_BAAN_WORD2" value="10"/>
  <define name="wxSTC_BAAN_WORD3" value="11"/>
  <define name="wxSTC_BAAN_WORD4" value="12"/>
  <define name="wxSTC_BAAN_WORD5" value="13"/>
  <define name="wxSTC_BAAN_WORD6" value="14"/>
  <define name="wxSTC_BAAN_WORD7" value="15"/>
  <define name="wxSTC_BAAN_WORD8" value="16"/>
  <define name="wxSTC_BAAN_WORD9" value="17"/>
  <define name="wxSTC_BAAN_TABLEDEF" value="18"/>
  <define name="wxSTC_BAAN_TABLESQL" value="19"/>
  <define name="wxSTC_BAAN_FUNCTION" value="20"/>
  <define name="wxSTC_BAAN_DOMDEF" value="21"/>
  <define name="wxSTC_BAAN_FUNCDEF" value="22"/>
  <define name="wxSTC_BAAN_OBJECTDEF" value="23"/>
  <define name="wxSTC_BAAN_DEFINEDEF" value="24"/>
  <define name="wxSTC_LISP_DEFAULT" value="0"/>
  <define name="wxSTC_LISP_COMMENT" value="1"/>
  <define name="wxSTC_LISP_NUMBER" value="2"/>
  <define name="wxSTC_LISP_KEYWORD" value="3"/>
  <define name="wxSTC_LISP_KEYWORD_KW" value="4"/>
  <define name="wxSTC_LISP_SYMBOL" value="5"/>
  <define name="wxSTC_LISP_STRING" value="6"/>
  <define name="wxSTC_LISP_STRINGEOL" value="8"/>
  <define name="wxSTC_LISP_IDENTIFIER" value="9"/>
  <define name="wxSTC_LISP_OPERATOR" value="10"/>
  <define name="wxSTC_LISP_SPECIAL" value="11"/>
  <define name="wxSTC_LISP_MULTI_COMMENT" value="12"/>
  <define name="wxSTC_EIFFEL_DEFAULT" value="0"/>
  <define name="wxSTC_EIFFEL_COMMENTLINE" value="1"/>
  <define name="wxSTC_EIFFEL_NUMBER" value="2"/>
  <define name="wxSTC_EIFFEL_WORD" value="3"/>
  <define name="wxSTC_EIFFEL_STRING" value="4"/>
  <define name="wxSTC_EIFFEL_CHARACTER" value="5"/>
  <define name="wxSTC_EIFFEL_OPERATOR" value="6"/>
  <define name="wxSTC_EIFFEL_IDENTIFIER" value="7"/>
  <define name="wxSTC_EIFFEL_STRINGEOL" value="8"/>
  <define name="wxSTC_NNCRONTAB_DEFAULT" value="0"/>
  <define name="wxSTC_NNCRONTAB_COMMENT" value="1"/>
  <define name="wxSTC_NNCRONTAB_TASK" value="2"/>
  <define name="wxSTC_NNCRONTAB_SECTION" value="3"/>
  <define name="wxSTC_NNCRONTAB_KEYWORD" value="4"/>
  <define name="wxSTC_NNCRONTAB_MODIFIER" value="5"/>
  <define name="wxSTC_NNCRONTAB_ASTERISK" value="6"/>
  <define name="wxSTC_NNCRONTAB_NUMBER" value="7"/>
  <define name="wxSTC_NNCRONTAB_STRING" value="8"/>
  <define name="wxSTC_NNCRONTAB_ENVIRONMENT" value="9"/>
  <define name="wxSTC_NNCRONTAB_IDENTIFIER" value="10"/>
  <define name="wxSTC_FORTH_DEFAULT" value="0"/>
  <define name="wxSTC_FORTH_COMMENT" value="1"/>
  <define name="wxSTC_FORTH_COMMENT_ML" value="2"/>
  <define name="wxSTC_FORTH_IDENTIFIER" value="3"/>
  <define name="wxSTC_FORTH_CONTROL" value="4"/>
  <define name="wxSTC_FORTH_KEYWORD" value="5"/>
  <define name="wxSTC_FORTH_DEFWORD" value="6"/>
  <define name="wxSTC_FORTH_PREWORD1" value="7"/>
  <define name="wxSTC_FORTH_PREWORD2" value="8"/>
  <define name="wxSTC_FORTH_NUMBER" value="9"/>
  <define name="wxSTC_FORTH_STRING" value="10"/>
  <define name="wxSTC_FORTH_LOCALE" value="11"/>
  <define name="wxSTC_MATLAB_DEFAULT" value="0"/>
  <define name="wxSTC_MATLAB_COMMENT" value="1"/>
  <define name="wxSTC_MATLAB_COMMAND" value="2"/>
  <define name="wxSTC_MATLAB_NUMBER" value="3"/>
  <define name="wxSTC_MATLAB_KEYWORD" value="4"/>
  <define name="wxSTC_MATLAB_STRING" value="5"/>
  <define name="wxSTC_MATLAB_OPERATOR" value="6"/>
  <define name="wxSTC_MATLAB_IDENTIFIER" value="7"/>
  <define name="wxSTC_MATLAB_DOUBLEQUOTESTRING" value="8"/>
  <define name="wxSTC_SCRIPTOL_DEFAULT" value="0"/>
  <define name="wxSTC_SCRIPTOL_WHITE" value="1"/>
  <define name="wxSTC_SCRIPTOL_COMMENTLINE" value="2"/>
  <define name="wxSTC_SCRIPTOL_PERSISTENT" value="3"/>
  <define name="wxSTC_SCRIPTOL_CSTYLE" value="4"/>
  <define name="wxSTC_SCRIPTOL_COMMENTBLOCK" value="5"/>
  <define name="wxSTC_SCRIPTOL_NUMBER" value="6"/>
  <define name="wxSTC_SCRIPTOL_STRING" value="7"/>
  <define name="wxSTC_SCRIPTOL_CHARACTER" value="8"/>
  <define name="wxSTC_SCRIPTOL_STRINGEOL" value="9"/>
  <define name="wxSTC_SCRIPTOL_KEYWORD" value="10"/>
  <define name="wxSTC_SCRIPTOL_OPERATOR" value="11"/>
  <define name="wxSTC_SCRIPTOL_IDENTIFIER" value="12"/>
  <define name="wxSTC_SCRIPTOL_TRIPLE" value="13"/>
  <define name="wxSTC_SCRIPTOL_CLASSNAME" value="14"/>
  <define name="wxSTC_SCRIPTOL_PREPROCESSOR" value="15"/>
  <define name="wxSTC_ASM_DEFAULT" value="0"/>
  <define name="wxSTC_ASM_COMMENT" value="1"/>
  <define name="wxSTC_ASM_NUMBER" value="2"/>
  <define name="wxSTC_ASM_STRING" value="3"/>
  <define name="wxSTC_ASM_OPERATOR" value="4"/>
  <define name="wxSTC_ASM_IDENTIFIER" value="5"/>
  <define name="wxSTC_ASM_CPUINSTRUCTION" value="6"/>
  <define name="wxSTC_ASM_MATHINSTRUCTION" value="7"/>
  <define name="wxSTC_ASM_REGISTER" value="8"/>
  <define name="wxSTC_ASM_DIRECTIVE" value="9"/>
  <define name="wxSTC_ASM_DIRECTIVEOPERAND" value="10"/>
  <define name="wxSTC_ASM_COMMENTBLOCK" value="11"/>
  <define name="wxSTC_ASM_CHARACTER" value="12"/>
  <define name="wxSTC_ASM_STRINGEOL" value="13"/>
  <define name="wxSTC_ASM_EXTINSTRUCTION" value="14"/>
  <define name="wxSTC_ASM_COMMENTDIRECTIVE" value="15"/>
  <define name="wxSTC_F_DEFAULT" value="0"/>
  <define name="wxSTC_F_COMMENT" value="1"/>
  <define name="wxSTC_F_NUMBER" value="2"/>
  <define name="wxSTC_F_STRING1" value="3"/>
  <define name="wxSTC_F_STRING2" value="4"/>
  <define name="wxSTC_F_STRINGEOL" value="5"/>
  <define name="wxSTC_F_OPERATOR" value="6"/>
  <define name="wxSTC_F_IDENTIFIER" value="7"/>
  <define name="wxSTC_F_WORD" value="8"/>
  <define name="wxSTC_F_WORD2" value="9"/>
  <define name="wxSTC_F_WORD3" value="10"/>
  <define name="wxSTC_F_PREPROCESSOR" value="11"/>
  <define name="wxSTC_F_OPERATOR2" value="12"/>
  <define name="wxSTC_F_LABEL" value="13"/>
  <define name="wxSTC_F_CONTINUATION" value="14"/>
  <define name="wxSTC_CSS_DEFAULT" value="0"/>
  <define name="wxSTC_CSS_TAG" value="1"/>
  <define name="wxSTC_CSS_CLASS" value="2"/>
  <define name="wxSTC_CSS_PSEUDOCLASS" value="3"/>
  <define name="wxSTC_CSS_UNKNOWN_PSEUDOCLASS" value="4"/>
  <define name="wxSTC_CSS_OPERATOR" value="5"/>
  <define name="wxSTC_CSS_IDENTIFIER" value="6"/>
  <define name="wxSTC_CSS_UNKNOWN_IDENTIFIER" value="7"/>
  <define name="wxSTC_CSS_VALUE" value="8"/>
  <define name="wxSTC_CSS_COMMENT" value="9"/>
  <define name="wxSTC_CSS_ID" value="10"/>
  <define name="wxSTC_CSS_IMPORTANT" value="11"/>
  <define name="wxSTC_CSS_DIRECTIVE" value="12"/>
  <define name="wxSTC_CSS_DOUBLESTRING" value="13"/>
  <define name="wxSTC_CSS_SINGLESTRING" value="14"/>
  <define name="wxSTC_CSS_IDENTIFIER2" value="15"/>
  <define name="wxSTC_CSS_ATTRIBUTE" value="16"/>
  <define name="wxSTC_CSS_IDENTIFIER3" value="17"/>
  <define name="wxSTC_CSS_PSEUDOELEMENT" value="18"/>
  <define name="wxSTC_CSS_EXTENDED_IDENTIFIER" value="19"/>
  <define name="wxSTC_CSS_EXTENDED_PSEUDOCLASS" value="20"/>
  <define name="wxSTC_CSS_EXTENDED_PSEUDOELEMENT" value="21"/>
  <define name="wxSTC_CSS_MEDIA" value="22"/>
  <define name="wxSTC_CSS_VARIABLE" value="23"/>
  <define name="wxSTC_POV_DEFAULT" value="0"/>
  <define name="wxSTC_POV_COMMENT" value="1"/>
  <define name="wxSTC_POV_COMMENTLINE" value="2"/>
  <define name="wxSTC_POV_NUMBER" value="3"/>
  <define name="wxSTC_POV_OPERATOR" value="4"/>
  <define name="wxSTC_POV_IDENTIFIER" value="5"/>
  <define name="wxSTC_POV_STRING" value="6"/>
  <define name="wxSTC_POV_STRINGEOL" value="7"/>
  <define name="wxSTC_POV_DIRECTIVE" value="8"/>
  <define name="wxSTC_POV_BADDIRECTIVE" value="9"/>
  <define name="wxSTC_POV_WORD2" value="10"/>
  <define name="wxSTC_POV_WORD3" value="11"/>
  <define name="wxSTC_POV_WORD4" value="12"/>
  <define name="wxSTC_POV_WORD5" value="13"/>
  <define name="wxSTC_POV_WORD6" value="14"/>
  <define name="wxSTC_POV_WORD7" value="15"/>
  <define name="wxSTC_POV_WORD8" value="16"/>
  <define name="wxSTC_LOUT_DEFAULT" value="0"/>
  <define name="wxSTC_LOUT_COMMENT" value="1"/>
  <define name="wxSTC_LOUT_NUMBER" value="2"/>
  <define name="wxSTC_LOUT_WORD" value="3"/>
  <define name="wxSTC_LOUT_WORD2" value="4"/>
  <define name="wxSTC_LOUT_WORD3" value="5"/>
  <define name="wxSTC_LOUT_WORD4" value="6"/>
  <define name="wxSTC_LOUT_STRING" value="7"/>
  <define name="wxSTC_LOUT_OPERATOR" value="8"/>
  <define name="wxSTC_LOUT_IDENTIFIER" value="9"/>
  <define name="wxSTC_LOUT_STRINGEOL" value="10"/>
  <define name="wxSTC_ESCRIPT_DEFAULT" value="0"/>
  <define name="wxSTC_ESCRIPT_COMMENT" value="1"/>
  <define name="wxSTC_ESCRIPT_COMMENTLINE" value="2"/>
  <define name="wxSTC_ESCRIPT_COMMENTDOC" value="3"/>
  <define name="wxSTC_ESCRIPT_NUMBER" value="4"/>
  <define name="wxSTC_ESCRIPT_WORD" value="5"/>
  <define name="wxSTC_ESCRIPT_STRING" value="6"/>
  <define name="wxSTC_ESCRIPT_OPERATOR" value="7"/>
  <define name="wxSTC_ESCRIPT_IDENTIFIER" value="8"/>
  <define name="wxSTC_ESCRIPT_BRACE" value="9"/>
  <define name="wxSTC_ESCRIPT_WORD2" value="10"/>
  <define name="wxSTC_ESCRIPT_WORD3" value="11"/>
  <define name="wxSTC_PS_DEFAULT" value="0"/>
  <define name="wxSTC_PS_COMMENT" value="1"/>
  <define name="wxSTC_PS_DSC_COMMENT" value="2"/>
  <define name="wxSTC_PS_DSC_VALUE" value="3"/>
  <define name="wxSTC_PS_NUMBER" value="4"/>
  <define name="wxSTC_PS_NAME" value="5"/>
  <define name="wxSTC_PS_KEYWORD" value="6"/>
  <define name="wxSTC_PS_LITERAL" value="7"/>
  <define name="wxSTC_PS_IMMEVAL" value="8"/>
  <define name="wxSTC_PS_PAREN_ARRAY" value="9"/>
  <define name="wxSTC_PS_PAREN_DICT" value="10"/>
  <define name="wxSTC_PS_PAREN_PROC" value="11"/>
  <define name="wxSTC_PS_TEXT" value="12"/>
  <define name="wxSTC_PS_HEXSTRING" value="13"/>
  <define name="wxSTC_PS_BASE85STRING" value="14"/>
  <define name="wxSTC_PS_BADSTRINGCHAR" value="15"/>
  <define name="wxSTC_NSIS_DEFAULT" value="0"/>
  <define name="wxSTC_NSIS_COMMENT" value="1"/>
  <define name="wxSTC_NSIS_STRINGDQ" value="2"/>
  <define name="wxSTC_NSIS_STRINGLQ" value="3"/>
  <define name="wxSTC_NSIS_STRINGRQ" value="4"/>
  <define name="wxSTC_NSIS_FUNCTION" value="5"/>
  <define name="wxSTC_NSIS_VARIABLE" value="6"/>
  <define name="wxSTC_NSIS_LABEL" value="7"/>
  <define name="wxSTC_NSIS_USERDEFINED" value="8"/>
  <define name="wxSTC_NSIS_SECTIONDEF" value="9"/>
  <define name="wxSTC_NSIS_SUBSECTIONDEF" value="10"/>
  <define name="wxSTC_NSIS_IFDEFINEDEF" value="11"/>
  <define name="wxSTC_NSIS_MACRODEF" value="12"/>
  <define name="wxSTC_NSIS_STRINGVAR" value="13"/>
  <define name="wxSTC_NSIS_NUMBER" value="14"/>
  <define name="wxSTC_NSIS_SECTIONGROUP" value="15"/>
  <define name="wxSTC_NSIS_PAGEEX" value="16"/>
  <define name="wxSTC_NSIS_FUNCTIONDEF" value="17"/>
  <define name="wxSTC_NSIS_COMMENTBOX" value="18"/>
  <define name="wxSTC_MMIXAL_LEADWS" value="0"/>
  <define name="wxSTC_MMIXAL_COMMENT" value="1"/>
  <define name="wxSTC_MMIXAL_LABEL" value="2"/>
  <define name="wxSTC_MMIXAL_OPCODE" value="3"/>
  <define name="wxSTC_MMIXAL_OPCODE_PRE" value="4"/>
  <define name="wxSTC_MMIXAL_OPCODE_VALID" value="5"/>
  <define name="wxSTC_MMIXAL_OPCODE_UNKNOWN" value="6"/>
  <define name="wxSTC_MMIXAL_OPCODE_POST" value="7"/>
  <define name="wxSTC_MMIXAL_OPERANDS" value="8"/>
  <define name="wxSTC_MMIXAL_NUMBER" value="9"/>
  <define name="wxSTC_MMIXAL_REF" value="10"/>
  <define name="wxSTC_MMIXAL_CHAR" value="11"/>
  <define name="wxSTC_MMIXAL_STRING" value="12"/>
  <define name="wxSTC_MMIXAL_REGISTER" value="13"/>
  <define name="wxSTC_MMIXAL_HEX" value="14"/>
  <define name="wxSTC_MMIXAL_OPERATOR" value="15"/>
  <define name="wxSTC_MMIXAL_SYMBOL" value="16"/>
  <define name="wxSTC_MMIXAL_INCLUDE" value="17"/>
  <define name="wxSTC_CLW_DEFAULT" value="0"/>
  <define name="wxSTC_CLW_LABEL" value="1"/>
  <define name="wxSTC_CLW_COMMENT" value="2"/>
  <define name="wxSTC_CLW_STRING" value="3"/>
  <define name="wxSTC_CLW_USER_IDENTIFIER" value="4"/>
  <define name="wxSTC_CLW_INTEGER_CONSTANT" value="5"/>
  <define name="wxSTC_CLW_REAL_CONSTANT" value="6"/>
  <define name="wxSTC_CLW_PICTURE_STRING" value="7"/>
  <define name="wxSTC_CLW_KEYWORD" value="8"/>
  <define name="wxSTC_CLW_COMPILER_DIRECTIVE" value="9"/>
  <define name="wxSTC_CLW_RUNTIME_EXPRESSIONS" value="10"/>
  <define name="wxSTC_CLW_BUILTIN_PROCEDURES_FUNCTION" value="11"/>
  <define name="wxSTC_CLW_STRUCTURE_DATA_TYPE" value="12"/>
  <define name="wxSTC_CLW_ATTRIBUTE" value="13"/>
  <define name="wxSTC_CLW_STANDARD_EQUATE" value="14"/>
  <define name="wxSTC_CLW_ERROR" value="15"/>
  <define name="wxSTC_CLW_DEPRECATED" value="16"/>
  <define name="wxSTC_LOT_DEFAULT" value="0"/>
  <define name="wxSTC_LOT_HEADER" value="1"/>
  <define name="wxSTC_LOT_BREAK" value="2"/>
  <define name="wxSTC_LOT_SET" value="3"/>
  <define name="wxSTC_LOT_PASS" value="4"/>
  <define name="wxSTC_LOT_FAIL" value="5"/>
  <define name="wxSTC_LOT_ABORT" value="6"/>
  <define name="wxSTC_YAML_DEFAULT" value="0"/>
  <define name="wxSTC_YAML_COMMENT" value="1"/>
  <define name="wxSTC_YAML_IDENTIFIER" value="2"/>
  <define name="wxSTC_YAML_KEYWORD" value="3"/>
  <define name="wxSTC_YAML_NUMBER" value="4"/>
  <define name="wxSTC_YAML_REFERENCE" value="5"/>
  <define name="wxSTC_YAML_DOCUMENT" value="6"/>
  <define name="wxSTC_YAML_TEXT" value="7"/>
  <define name="wxSTC_YAML_ERROR" value="8"/>
  <define name="wxSTC_YAML_OPERATOR" value="9"/>
  <define name="wxSTC_TEX_DEFAULT" value="0"/>
  <define name="wxSTC_TEX_SPECIAL" value="1"/>
  <define name="wxSTC_TEX_GROUP" value="2"/>
  <define name="wxSTC_TEX_SYMBOL" value="3"/>
  <define name="wxSTC_TEX_COMMAND" value="4"/>
  <define name="wxSTC_TEX_TEXT" value="5"/>
  <define name="wxSTC_METAPOST_DEFAULT" value="0"/>
  <define name="wxSTC_METAPOST_SPECIAL" value="1"/>
  <define name="wxSTC_METAPOST_GROUP" value="2"/>
  <define name="wxSTC_METAPOST_SYMBOL" value="3"/>
  <define name="wxSTC_METAPOST_COMMAND" value="4"/>
  <define name="wxSTC_METAPOST_TEXT" value="5"/>
  <define name="wxSTC_METAPOST_EXTRA" value="6"/>
  <define name="wxSTC_ERLANG_DEFAULT" value="0"/>
  <define name="wxSTC_ERLANG_COMMENT" value="1"/>
  <define name="wxSTC_ERLANG_VARIABLE" value="2"/>
  <define name="wxSTC_ERLANG_NUMBER" value="3"/>
  <define name="wxSTC_ERLANG_KEYWORD" value="4"/>
  <define name="wxSTC_ERLANG_STRING" value="5"/>
  <define name="wxSTC_ERLANG_OPERATOR" value="6"/>
  <define name="wxSTC_ERLANG_ATOM" value="7"/>
  <define name="wxSTC_ERLANG_FUNCTION_NAME" value="8"/>
  <define name="wxSTC_ERLANG_CHARACTER" value="9"/>
  <define name="wxSTC_ERLANG_MACRO" value="10"/>
  <define name="wxSTC_ERLANG_RECORD" value="11"/>
  <define name="wxSTC_ERLANG_PREPROC" value="12"/>
  <define name="wxSTC_ERLANG_NODE_NAME" value="13"/>
  <define name="wxSTC_ERLANG_COMMENT_FUNCTION" value="14"/>
  <define name="wxSTC_ERLANG_COMMENT_MODULE" value="15"/>
  <define name="wxSTC_ERLANG_COMMENT_DOC" value="16"/>
  <define name="wxSTC_ERLANG_COMMENT_DOC_MACRO" value="17"/>
  <define name="wxSTC_ERLANG_ATOM_QUOTED" value="18"/>
  <define name="wxSTC_ERLANG_MACRO_QUOTED" value="19"/>
  <define name="wxSTC_ERLANG_RECORD_QUOTED" value="20"/>
  <define name="wxSTC_ERLANG_NODE_NAME_QUOTED" value="21"/>
  <define name="wxSTC_ERLANG_BIFS" value="22"/>
  <define name="wxSTC_ERLANG_MODULES" value="23"/>
  <define name="wxSTC_ERLANG_MODULES_ATT" value="24"/>
  <define name="wxSTC_ERLANG_UNKNOWN" value="31"/>
  <define name="wxSTC_MSSQL_DEFAULT" value="0"/>
  <define name="wxSTC_MSSQL_COMMENT" value="1"/>
  <define name="wxSTC_MSSQL_LINE_COMMENT" value="2"/>
  <define name="wxSTC_MSSQL_NUMBER" value="3"/>
  <define name="wxSTC_MSSQL_STRING" value="4"/>
  <define name="wxSTC_MSSQL_OPERATOR" value="5"/>
  <define name="wxSTC_MSSQL_IDENTIFIER" value="6"/>
  <define name="wxSTC_MSSQL_VARIABLE" value="7"/>
  <define name="wxSTC_MSSQL_COLUMN_NAME" value="8"/>
  <define name="wxSTC_MSSQL_STATEMENT" value="9"/>
  <define name="wxSTC_MSSQL_DATATYPE" value="10"/>
  <define name="wxSTC_MSSQL_SYSTABLE" value="11"/>
  <define name="wxSTC_MSSQL_GLOBAL_VARIABLE" value="12"/>
  <define name="wxSTC_MSSQL_FUNCTION" value="13"/>
  <define name="wxSTC_MSSQL_STORED_PROCEDURE" value="14"/>
  <define name="wxSTC_MSSQL_DEFAULT_PREF_DATATYPE" value="15"/>
  <define name="wxSTC_MSSQL_COLUMN_NAME_2" value="16"/>
  <define name="wxSTC_V_DEFAULT" value="0"/>
  <define name="wxSTC_V_COMMENT" value="1"/>
  <define name="wxSTC_V_COMMENTLINE" value="2"/>
  <define name="wxSTC_V_COMMENTLINEBANG" value="3"/>
  <define name="wxSTC_V_NUMBER" value="4"/>
  <define name="wxSTC_V_WORD" value="5"/>
  <define name="wxSTC_V_STRING" value="6"/>
  <define name="wxSTC_V_WORD2" value="7"/>
  <define name="wxSTC_V_WORD3" value="8"/>
  <define name="wxSTC_V_PREPROCESSOR" value="9"/>
  <define name="wxSTC_V_OPERATOR" value="10"/>
  <define name="wxSTC_V_IDENTIFIER" value="11"/>
  <define name="wxSTC_V_STRINGEOL" value="12"/>
  <define name="wxSTC_V_USER" value="19"/>
  <define name="wxSTC_V_COMMENT_WORD" value="20"/>
  <define name="wxSTC_V_INPUT" value="21"/>
  <define name="wxSTC_V_OUTPUT" value="22"/>
  <define name="wxSTC_V_INOUT" value="23"/>
  <define name="wxSTC_V_PORT_CONNECT" value="24"/>
  <define name="wxSTC_KIX_DEFAULT" value="0"/>
  <define name="wxSTC_KIX_COMMENT" value="1"/>
  <define name="wxSTC_KIX_STRING1" value="2"/>
  <define name="wxSTC_KIX_STRING2" value="3"/>
  <define name="wxSTC_KIX_NUMBER" value="4"/>
  <define name="wxSTC_KIX_VAR" value="5"/>
  <define name="wxSTC_KIX_MACRO" value="6"/>
  <define name="wxSTC_KIX_KEYWORD" value="7"/>
  <define name="wxSTC_KIX_FUNCTIONS" value="8"/>
  <define name="wxSTC_KIX_OPERATOR" value="9"/>
  <define name="wxSTC_KIX_COMMENTSTREAM" value="10"/>
  <define name="wxSTC_KIX_IDENTIFIER" value="31"/>
  <define name="wxSTC_GC_DEFAULT" value="0"/>
  <define name="wxSTC_GC_COMMENTLINE" value="1"/>
  <define name="wxSTC_GC_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_GC_GLOBAL" value="3"/>
  <define name="wxSTC_GC_EVENT" value="4"/>
  <define name="wxSTC_GC_ATTRIBUTE" value="5"/>
  <define name="wxSTC_GC_CONTROL" value="6"/>
  <define name="wxSTC_GC_COMMAND" value="7"/>
  <define name="wxSTC_GC_STRING" value="8"/>
  <define name="wxSTC_GC_OPERATOR" value="9"/>
  <define name="wxSTC_SN_DEFAULT" value="0"/>
  <define name="wxSTC_SN_CODE" value="1"/>
  <define name="wxSTC_SN_COMMENTLINE" value="2"/>
  <define name="wxSTC_SN_COMMENTLINEBANG" value="3"/>
  <define name="wxSTC_SN_NUMBER" value="4"/>
  <define name="wxSTC_SN_WORD" value="5"/>
  <define name="wxSTC_SN_STRING" value="6"/>
  <define name="wxSTC_SN_WORD2" value="7"/>
  <define name="wxSTC_SN_WORD3" value="8"/>
  <define name="wxSTC_SN_PREPROCESSOR" value="9"/>
  <define name="wxSTC_SN_OPERATOR" value="10"/>
  <define name="wxSTC_SN_IDENTIFIER" value="11"/>
  <define name="wxSTC_SN_STRINGEOL" value="12"/>
  <define name="wxSTC_SN_REGEXTAG" value="13"/>
  <define name="wxSTC_SN_SIGNAL" value="14"/>
  <define name="wxSTC_SN_USER" value="19"/>
  <define name="wxSTC_AU3_DEFAULT" value="0"/>
  <define name="wxSTC_AU3_COMMENT" value="1"/>
  <define name="wxSTC_AU3_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_AU3_NUMBER" value="3"/>
  <define name="wxSTC_AU3_FUNCTION" value="4"/>
  <define name="wxSTC_AU3_KEYWORD" value="5"/>
  <define name="wxSTC_AU3_MACRO" value="6"/>
  <define name="wxSTC_AU3_STRING" value="7"/>
  <define name="wxSTC_AU3_OPERATOR" value="8"/>
  <define name="wxSTC_AU3_VARIABLE" value="9"/>
  <define name="wxSTC_AU3_SENT" value="10"/>
  <define name="wxSTC_AU3_PREPROCESSOR" value="11"/>
  <define name="wxSTC_AU3_SPECIAL" value="12"/>
  <define name="wxSTC_AU3_EXPAND" value="13"/>
  <define name="wxSTC_AU3_COMOBJ" value="14"/>
  <define name="wxSTC_AU3_UDF" value="15"/>
  <define name="wxSTC_APDL_DEFAULT" value="0"/>
  <define name="wxSTC_APDL_COMMENT" value="1"/>
  <define name="wxSTC_APDL_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_APDL_NUMBER" value="3"/>
  <define name="wxSTC_APDL_STRING" value="4"/>
  <define name="wxSTC_APDL_OPERATOR" value="5"/>
  <define name="wxSTC_APDL_WORD" value="6"/>
  <define name="wxSTC_APDL_PROCESSOR" value="7"/>
  <define name="wxSTC_APDL_COMMAND" value="8"/>
  <define name="wxSTC_APDL_SLASHCOMMAND" value="9"/>
  <define name="wxSTC_APDL_STARCOMMAND" value="10"/>
  <define name="wxSTC_APDL_ARGUMENT" value="11"/>
  <define name="wxSTC_APDL_FUNCTION" value="12"/>
  <define name="wxSTC_SH_DEFAULT" value="0"/>
  <define name="wxSTC_SH_ERROR" value="1"/>
  <define name="wxSTC_SH_COMMENTLINE" value="2"/>
  <define name="wxSTC_SH_NUMBER" value="3"/>
  <define name="wxSTC_SH_WORD" value="4"/>
  <define name="wxSTC_SH_STRING" value="5"/>
  <define name="wxSTC_SH_CHARACTER" value="6"/>
  <define name="wxSTC_SH_OPERATOR" value="7"/>
  <define name="wxSTC_SH_IDENTIFIER" value="8"/>
  <define name="wxSTC_SH_SCALAR" value="9"/>
  <define name="wxSTC_SH_PARAM" value="10"/>
  <define name="wxSTC_SH_BACKTICKS" value="11"/>
  <define name="wxSTC_SH_HERE_DELIM" value="12"/>
  <define name="wxSTC_SH_HERE_Q" value="13"/>
  <define name="wxSTC_ASN1_DEFAULT" value="0"/>
  <define name="wxSTC_ASN1_COMMENT" value="1"/>
  <define name="wxSTC_ASN1_IDENTIFIER" value="2"/>
  <define name="wxSTC_ASN1_STRING" value="3"/>
  <define name="wxSTC_ASN1_OID" value="4"/>
  <define name="wxSTC_ASN1_SCALAR" value="5"/>
  <define name="wxSTC_ASN1_KEYWORD" value="6"/>
  <define name="wxSTC_ASN1_ATTRIBUTE" value="7"/>
  <define name="wxSTC_ASN1_DESCRIPTOR" value="8"/>
  <define name="wxSTC_ASN1_TYPE" value="9"/>
  <define name="wxSTC_ASN1_OPERATOR" value="10"/>
  <define name="wxSTC_VHDL_DEFAULT" value="0"/>
  <define name="wxSTC_VHDL_COMMENT" value="1"/>
  <define name="wxSTC_VHDL_COMMENTLINEBANG" value="2"/>
  <define name="wxSTC_VHDL_NUMBER" value="3"/>
  <define name="wxSTC_VHDL_STRING" value="4"/>
  <define name="wxSTC_VHDL_OPERATOR" value="5"/>
  <define name="wxSTC_VHDL_IDENTIFIER" value="6"/>
  <define name="wxSTC_VHDL_STRINGEOL" value="7"/>
  <define name="wxSTC_VHDL_KEYWORD" value="8"/>
  <define name="wxSTC_VHDL_STDOPERATOR" value="9"/>
  <define name="wxSTC_VHDL_ATTRIBUTE" value="10"/>
  <define name="wxSTC_VHDL_STDFUNCTION" value="11"/>
  <define name="wxSTC_VHDL_STDPACKAGE" value="12"/>
  <define name="wxSTC_VHDL_STDTYPE" value="13"/>
  <define name="wxSTC_VHDL_USERWORD" value="14"/>
  <define name="wxSTC_VHDL_BLOCK_COMMENT" value="15"/>
  <define name="wxSTC_CAML_DEFAULT" value="0"/>
  <define name="wxSTC_CAML_IDENTIFIER" value="1"/>
  <define name="wxSTC_CAML_TAGNAME" value="2"/>
  <define name="wxSTC_CAML_KEYWORD" value="3"/>
  <define name="wxSTC_CAML_KEYWORD2" value="4"/>
  <define name="wxSTC_CAML_KEYWORD3" value="5"/>
  <define name="wxSTC_CAML_LINENUM" value="6"/>
  <define name="wxSTC_CAML_OPERATOR" value="7"/>
  <define name="wxSTC_CAML_NUMBER" value="8"/>
  <define name="wxSTC_CAML_CHAR" value="9"/>
  <define name="wxSTC_CAML_WHITE" value="10"/>
  <define name="wxSTC_CAML_STRING" value="11"/>
  <define name="wxSTC_CAML_COMMENT" value="12"/>
  <define name="wxSTC_CAML_COMMENT1" value="13"/>
  <define name="wxSTC_CAML_COMMENT2" value="14"/>
  <define name="wxSTC_CAML_COMMENT3" value="15"/>
  <define name="wxSTC_HA_DEFAULT" value="0"/>
  <define name="wxSTC_HA_IDENTIFIER" value="1"/>
  <define name="wxSTC_HA_KEYWORD" value="2"/>
  <define name="wxSTC_HA_NUMBER" value="3"/>
  <define name="wxSTC_HA_STRING" value="4"/>
  <define name="wxSTC_HA_CHARACTER" value="5"/>
  <define name="wxSTC_HA_CLASS" value="6"/>
  <define name="wxSTC_HA_MODULE" value="7"/>
  <define name="wxSTC_HA_CAPITAL" value="8"/>
  <define name="wxSTC_HA_DATA" value="9"/>
  <define name="wxSTC_HA_IMPORT" value="10"/>
  <define name="wxSTC_HA_OPERATOR" value="11"/>
  <define name="wxSTC_HA_INSTANCE" value="12"/>
  <define name="wxSTC_HA_COMMENTLINE" value="13"/>
  <define name="wxSTC_HA_COMMENTBLOCK" value="14"/>
  <define name="wxSTC_HA_COMMENTBLOCK2" value="15"/>
  <define name="wxSTC_HA_COMMENTBLOCK3" value="16"/>
  <define name="wxSTC_HA_PRAGMA" value="17"/>
  <define name="wxSTC_HA_PREPROCESSOR" value="18"/>
  <define name="wxSTC_HA_STRINGEOL" value="19"/>
  <define name="wxSTC_HA_RESERVED_OPERATOR" value="20"/>
  <define name="wxSTC_HA_LITERATE_COMMENT" value="21"/>
  <define name="wxSTC_HA_LITERATE_CODEDELIM" value="22"/>
  <define name="wxSTC_T3_DEFAULT" value="0"/>
  <define name="wxSTC_T3_X_DEFAULT" value="1"/>
  <define name="wxSTC_T3_PREPROCESSOR" value="2"/>
  <define name="wxSTC_T3_BLOCK_COMMENT" value="3"/>
  <define name="wxSTC_T3_LINE_COMMENT" value="4"/>
  <define name="wxSTC_T3_OPERATOR" value="5"/>
  <define name="wxSTC_T3_KEYWORD" value="6"/>
  <define name="wxSTC_T3_NUMBER" value="7"/>
  <define name="wxSTC_T3_IDENTIFIER" value="8"/>
  <define name="wxSTC_T3_S_STRING" value="9"/>
  <define name="wxSTC_T3_D_STRING" value="10"/>
  <define name="wxSTC_T3_X_STRING" value="11"/>
  <define name="wxSTC_T3_LIB_DIRECTIVE" value="12"/>
  <define name="wxSTC_T3_MSG_PARAM" value="13"/>
  <define name="wxSTC_T3_HTML_TAG" value="14"/>
  <define name="wxSTC_T3_HTML_DEFAULT" value="15"/>
  <define name="wxSTC_T3_HTML_STRING" value="16"/>
  <define name="wxSTC_T3_USER1" value="17"/>
  <define name="wxSTC_T3_USER2" value="18"/>
  <define name="wxSTC_T3_USER3" value="19"/>
  <define name="wxSTC_T3_BRACE" value="20"/>
  <define name="wxSTC_REBOL_DEFAULT" value="0"/>
  <define name="wxSTC_REBOL_COMMENTLINE" value="1"/>
  <define name="wxSTC_REBOL_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_REBOL_PREFACE" value="3"/>
  <define name="wxSTC_REBOL_OPERATOR" value="4"/>
  <define name="wxSTC_REBOL_CHARACTER" value="5"/>
  <define name="wxSTC_REBOL_QUOTEDSTRING" value="6"/>
  <define name="wxSTC_REBOL_BRACEDSTRING" value="7"/>
  <define name="wxSTC_REBOL_NUMBER" value="8"/>
  <define name="wxSTC_REBOL_PAIR" value="9"/>
  <define name="wxSTC_REBOL_TUPLE" value="10"/>
  <define name="wxSTC_REBOL_BINARY" value="11"/>
  <define name="wxSTC_REBOL_MONEY" value="12"/>
  <define name="wxSTC_REBOL_ISSUE" value="13"/>
  <define name="wxSTC_REBOL_TAG" value="14"/>
  <define name="wxSTC_REBOL_FILE" value="15"/>
  <define name="wxSTC_REBOL_EMAIL" value="16"/>
  <define name="wxSTC_REBOL_URL" value="17"/>
  <define name="wxSTC_REBOL_DATE" value="18"/>
  <define name="wxSTC_REBOL_TIME" value="19"/>
  <define name="wxSTC_REBOL_IDENTIFIER" value="20"/>
  <define name="wxSTC_REBOL_WORD" value="21"/>
  <define name="wxSTC_REBOL_WORD2" value="22"/>
  <define name="wxSTC_REBOL_WORD3" value="23"/>
  <define name="wxSTC_REBOL_WORD4" value="24"/>
  <define name="wxSTC_REBOL_WORD5" value="25"/>
  <define name="wxSTC_REBOL_WORD6" value="26"/>
  <define name="wxSTC_REBOL_WORD7" value="27"/>
  <define name="wxSTC_REBOL_WORD8" value="28"/>
  <define name="wxSTC_SQL_DEFAULT" value="0"/>
  <define name="wxSTC_SQL_COMMENT" value="1"/>
  <define name="wxSTC_SQL_COMMENTLINE" value="2"/>
  <define name="wxSTC_SQL_COMMENTDOC" value="3"/>
  <define name="wxSTC_SQL_NUMBER" value="4"/>
  <define name="wxSTC_SQL_WORD" value="5"/>
  <define name="wxSTC_SQL_STRING" value="6"/>
  <define name="wxSTC_SQL_CHARACTER" value="7"/>
  <define name="wxSTC_SQL_SQLPLUS" value="8"/>
  <define name="wxSTC_SQL_SQLPLUS_PROMPT" value="9"/>
  <define name="wxSTC_SQL_OPERATOR" value="10"/>
  <define name="wxSTC_SQL_IDENTIFIER" value="11"/>
  <define name="wxSTC_SQL_SQLPLUS_COMMENT" value="13"/>
  <define name="wxSTC_SQL_COMMENTLINEDOC" value="15"/>
  <define name="wxSTC_SQL_WORD2" value="16"/>
  <define name="wxSTC_SQL_COMMENTDOCKEYWORD" value="17"/>
  <define name="wxSTC_SQL_COMMENTDOCKEYWORDERROR" value="18"/>
  <define name="wxSTC_SQL_USER1" value="19"/>
  <define name="wxSTC_SQL_USER2" value="20"/>
  <define name="wxSTC_SQL_USER3" value="21"/>
  <define name="wxSTC_SQL_USER4" value="22"/>
  <define name="wxSTC_SQL_QUOTEDIDENTIFIER" value="23"/>
  <define name="wxSTC_SQL_QOPERATOR" value="24"/>
  <define name="wxSTC_ST_DEFAULT" value="0"/>
  <define name="wxSTC_ST_STRING" value="1"/>
  <define name="wxSTC_ST_NUMBER" value="2"/>
  <define name="wxSTC_ST_COMMENT" value="3"/>
  <define name="wxSTC_ST_SYMBOL" value="4"/>
  <define name="wxSTC_ST_BINARY" value="5"/>
  <define name="wxSTC_ST_BOOL" value="6"/>
  <define name="wxSTC_ST_SELF" value="7"/>
  <define name="wxSTC_ST_SUPER" value="8"/>
  <define name="wxSTC_ST_NIL" value="9"/>
  <define name="wxSTC_ST_GLOBAL" value="10"/>
  <define name="wxSTC_ST_RETURN" value="11"/>
  <define name="wxSTC_ST_SPECIAL" value="12"/>
  <define name="wxSTC_ST_KWSEND" value="13"/>
  <define name="wxSTC_ST_ASSIGN" value="14"/>
  <define name="wxSTC_ST_CHARACTER" value="15"/>
  <define name="wxSTC_ST_SPEC_SEL" value="16"/>
  <define name="wxSTC_FS_DEFAULT" value="0"/>
  <define name="wxSTC_FS_COMMENT" value="1"/>
  <define name="wxSTC_FS_COMMENTLINE" value="2"/>
  <define name="wxSTC_FS_COMMENTDOC" value="3"/>
  <define name="wxSTC_FS_COMMENTLINEDOC" value="4"/>
  <define name="wxSTC_FS_COMMENTDOCKEYWORD" value="5"/>
  <define name="wxSTC_FS_COMMENTDOCKEYWORDERROR" value="6"/>
  <define name="wxSTC_FS_KEYWORD" value="7"/>
  <define name="wxSTC_FS_KEYWORD2" value="8"/>
  <define name="wxSTC_FS_KEYWORD3" value="9"/>
  <define name="wxSTC_FS_KEYWORD4" value="10"/>
  <define name="wxSTC_FS_NUMBER" value="11"/>
  <define name="wxSTC_FS_STRING" value="12"/>
  <define name="wxSTC_FS_PREPROCESSOR" value="13"/>
  <define name="wxSTC_FS_OPERATOR" value="14"/>
  <define name="wxSTC_FS_IDENTIFIER" value="15"/>
  <define name="wxSTC_FS_DATE" value="16"/>
  <define name="wxSTC_FS_STRINGEOL" value="17"/>
  <define name="wxSTC_FS_CONSTANT" value="18"/>
  <define name="wxSTC_FS_WORDOPERATOR" value="19"/>
  <define name="wxSTC_FS_DISABLEDCODE" value="20"/>
  <define name="wxSTC_FS_DEFAULT_C" value="21"/>
  <define name="wxSTC_FS_COMMENTDOC_C" value="22"/>
  <define name="wxSTC_FS_COMMENTLINEDOC_C" value="23"/>
  <define name="wxSTC_FS_KEYWORD_C" value="24"/>
  <define name="wxSTC_FS_KEYWORD2_C" value="25"/>
  <define name="wxSTC_FS_NUMBER_C" value="26"/>
  <define name="wxSTC_FS_STRING_C" value="27"/>
  <define name="wxSTC_FS_PREPROCESSOR_C" value="28"/>
  <define name="wxSTC_FS_OPERATOR_C" value="29"/>
  <define name="wxSTC_FS_IDENTIFIER_C" value="30"/>
  <define name="wxSTC_FS_STRINGEOL_C" value="31"/>
  <define name="wxSTC_CSOUND_DEFAULT" value="0"/>
  <define name="wxSTC_CSOUND_COMMENT" value="1"/>
  <define name="wxSTC_CSOUND_NUMBER" value="2"/>
  <define name="wxSTC_CSOUND_OPERATOR" value="3"/>
  <define name="wxSTC_CSOUND_INSTR" value="4"/>
  <define name="wxSTC_CSOUND_IDENTIFIER" value="5"/>
  <define name="wxSTC_CSOUND_OPCODE" value="6"/>
  <define name="wxSTC_CSOUND_HEADERSTMT" value="7"/>
  <define name="wxSTC_CSOUND_USERKEYWORD" value="8"/>
  <define name="wxSTC_CSOUND_COMMENTBLOCK" value="9"/>
  <define name="wxSTC_CSOUND_PARAM" value="10"/>
  <define name="wxSTC_CSOUND_ARATE_VAR" value="11"/>
  <define name="wxSTC_CSOUND_KRATE_VAR" value="12"/>
  <define name="wxSTC_CSOUND_IRATE_VAR" value="13"/>
  <define name="wxSTC_CSOUND_GLOBAL_VAR" value="14"/>
  <define name="wxSTC_CSOUND_STRINGEOL" value="15"/>
  <define name="wxSTC_INNO_DEFAULT" value="0"/>
  <define name="wxSTC_INNO_COMMENT" value="1"/>
  <define name="wxSTC_INNO_KEYWORD" value="2"/>
  <define name="wxSTC_INNO_PARAMETER" value="3"/>
  <define name="wxSTC_INNO_SECTION" value="4"/>
  <define name="wxSTC_INNO_PREPROC" value="5"/>
  <define name="wxSTC_INNO_INLINE_EXPANSION" value="6"/>
  <define name="wxSTC_INNO_COMMENT_PASCAL" value="7"/>
  <define name="wxSTC_INNO_KEYWORD_PASCAL" value="8"/>
  <define name="wxSTC_INNO_KEYWORD_USER" value="9"/>
  <define name="wxSTC_INNO_STRING_DOUBLE" value="10"/>
  <define name="wxSTC_INNO_STRING_SINGLE" value="11"/>
  <define name="wxSTC_INNO_IDENTIFIER" value="12"/>
  <define name="wxSTC_OPAL_SPACE" value="0"/>
  <define name="wxSTC_OPAL_COMMENT_BLOCK" value="1"/>
  <define name="wxSTC_OPAL_COMMENT_LINE" value="2"/>
  <define name="wxSTC_OPAL_INTEGER" value="3"/>
  <define name="wxSTC_OPAL_KEYWORD" value="4"/>
  <define name="wxSTC_OPAL_SORT" value="5"/>
  <define name="wxSTC_OPAL_STRING" value="6"/>
  <define name="wxSTC_OPAL_PAR" value="7"/>
  <define name="wxSTC_OPAL_BOOL_CONST" value="8"/>
  <define name="wxSTC_OPAL_DEFAULT" value="32"/>
  <define name="wxSTC_SPICE_DEFAULT" value="0"/>
  <define name="wxSTC_SPICE_IDENTIFIER" value="1"/>
  <define name="wxSTC_SPICE_KEYWORD" value="2"/>
  <define name="wxSTC_SPICE_KEYWORD2" value="3"/>
  <define name="wxSTC_SPICE_KEYWORD3" value="4"/>
  <define name="wxSTC_SPICE_NUMBER" value="5"/>
  <define name="wxSTC_SPICE_DELIMITER" value="6"/>
  <define name="wxSTC_SPICE_VALUE" value="7"/>
  <define name="wxSTC_SPICE_COMMENTLINE" value="8"/>
  <define name="wxSTC_CMAKE_DEFAULT" value="0"/>
  <define name="wxSTC_CMAKE_COMMENT" value="1"/>
  <define name="wxSTC_CMAKE_STRINGDQ" value="2"/>
  <define name="wxSTC_CMAKE_STRINGLQ" value="3"/>
  <define name="wxSTC_CMAKE_STRINGRQ" value="4"/>
  <define name="wxSTC_CMAKE_COMMANDS" value="5"/>
  <define name="wxSTC_CMAKE_PARAMETERS" value="6"/>
  <define name="wxSTC_CMAKE_VARIABLE" value="7"/>
  <define name="wxSTC_CMAKE_USERDEFINED" value="8"/>
  <define name="wxSTC_CMAKE_WHILEDEF" value="9"/>
  <define name="wxSTC_CMAKE_FOREACHDEF" value="10"/>
  <define name="wxSTC_CMAKE_IFDEFINEDEF" value="11"/>
  <define name="wxSTC_CMAKE_MACRODEF" value="12"/>
  <define name="wxSTC_CMAKE_STRINGVAR" value="13"/>
  <define name="wxSTC_CMAKE_NUMBER" value="14"/>
  <define name="wxSTC_GAP_DEFAULT" value="0"/>
  <define name="wxSTC_GAP_IDENTIFIER" value="1"/>
  <define name="wxSTC_GAP_KEYWORD" value="2"/>
  <define name="wxSTC_GAP_KEYWORD2" value="3"/>
  <define name="wxSTC_GAP_KEYWORD3" value="4"/>
  <define name="wxSTC_GAP_KEYWORD4" value="5"/>
  <define name="wxSTC_GAP_STRING" value="6"/>
  <define name="wxSTC_GAP_CHAR" value="7"/>
  <define name="wxSTC_GAP_OPERATOR" value="8"/>
  <define name="wxSTC_GAP_COMMENT" value="9"/>
  <define name="wxSTC_GAP_NUMBER" value="10"/>
  <define name="wxSTC_GAP_STRINGEOL" value="11"/>
  <define name="wxSTC_PLM_DEFAULT" value="0"/>
  <define name="wxSTC_PLM_COMMENT" value="1"/>
  <define name="wxSTC_PLM_STRING" value="2"/>
  <define name="wxSTC_PLM_NUMBER" value="3"/>
  <define name="wxSTC_PLM_IDENTIFIER" value="4"/>
  <define name="wxSTC_PLM_OPERATOR" value="5"/>
  <define name="wxSTC_PLM_CONTROL" value="6"/>
  <define name="wxSTC_PLM_KEYWORD" value="7"/>
  <define name="wxSTC_ABL_DEFAULT" value="0"/>
  <define name="wxSTC_ABL_NUMBER" value="1"/>
  <define name="wxSTC_ABL_WORD" value="2"/>
  <define name="wxSTC_ABL_STRING" value="3"/>
  <define name="wxSTC_ABL_CHARACTER" value="4"/>
  <define name="wxSTC_ABL_PREPROCESSOR" value="5"/>
  <define name="wxSTC_ABL_OPERATOR" value="6"/>
  <define name="wxSTC_ABL_IDENTIFIER" value="7"/>
  <define name="wxSTC_ABL_BLOCK" value="8"/>
  <define name="wxSTC_ABL_END" value="9"/>
  <define name="wxSTC_ABL_COMMENT" value="10"/>
  <define name="wxSTC_ABL_TASKMARKER" value="11"/>
  <define name="wxSTC_ABL_LINECOMMENT" value="12"/>
  <define name="wxSTC_ABAQUS_DEFAULT" value="0"/>
  <define name="wxSTC_ABAQUS_COMMENT" value="1"/>
  <define name="wxSTC_ABAQUS_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_ABAQUS_NUMBER" value="3"/>
  <define name="wxSTC_ABAQUS_STRING" value="4"/>
  <define name="wxSTC_ABAQUS_OPERATOR" value="5"/>
  <define name="wxSTC_ABAQUS_WORD" value="6"/>
  <define name="wxSTC_ABAQUS_PROCESSOR" value="7"/>
  <define name="wxSTC_ABAQUS_COMMAND" value="8"/>
  <define name="wxSTC_ABAQUS_SLASHCOMMAND" value="9"/>
  <define name="wxSTC_ABAQUS_STARCOMMAND" value="10"/>
  <define name="wxSTC_ABAQUS_ARGUMENT" value="11"/>
  <define name="wxSTC_ABAQUS_FUNCTION" value="12"/>
  <define name="wxSTC_ASY_DEFAULT" value="0"/>
  <define name="wxSTC_ASY_COMMENT" value="1"/>
  <define name="wxSTC_ASY_COMMENTLINE" value="2"/>
  <define name="wxSTC_ASY_NUMBER" value="3"/>
  <define name="wxSTC_ASY_WORD" value="4"/>
  <define name="wxSTC_ASY_STRING" value="5"/>
  <define name="wxSTC_ASY_CHARACTER" value="6"/>
  <define name="wxSTC_ASY_OPERATOR" value="7"/>
  <define name="wxSTC_ASY_IDENTIFIER" value="8"/>
  <define name="wxSTC_ASY_STRINGEOL" value="9"/>
  <define name="wxSTC_ASY_COMMENTLINEDOC" value="10"/>
  <define name="wxSTC_ASY_WORD2" value="11"/>
  <define name="wxSTC_R_DEFAULT" value="0"/>
  <define name="wxSTC_R_COMMENT" value="1"/>
  <define name="wxSTC_R_KWORD" value="2"/>
  <define name="wxSTC_R_BASEKWORD" value="3"/>
  <define name="wxSTC_R_OTHERKWORD" value="4"/>
  <define name="wxSTC_R_NUMBER" value="5"/>
  <define name="wxSTC_R_STRING" value="6"/>
  <define name="wxSTC_R_STRING2" value="7"/>
  <define name="wxSTC_R_OPERATOR" value="8"/>
  <define name="wxSTC_R_IDENTIFIER" value="9"/>
  <define name="wxSTC_R_INFIX" value="10"/>
  <define name="wxSTC_R_INFIXEOL" value="11"/>
  <define name="wxSTC_MAGIK_DEFAULT" value="0"/>
  <define name="wxSTC_MAGIK_COMMENT" value="1"/>
  <define name="wxSTC_MAGIK_HYPER_COMMENT" value="16"/>
  <define name="wxSTC_MAGIK_STRING" value="2"/>
  <define name="wxSTC_MAGIK_CHARACTER" value="3"/>
  <define name="wxSTC_MAGIK_NUMBER" value="4"/>
  <define name="wxSTC_MAGIK_IDENTIFIER" value="5"/>
  <define name="wxSTC_MAGIK_OPERATOR" value="6"/>
  <define name="wxSTC_MAGIK_FLOW" value="7"/>
  <define name="wxSTC_MAGIK_CONTAINER" value="8"/>
  <define name="wxSTC_MAGIK_BRACKET_BLOCK" value="9"/>
  <define name="wxSTC_MAGIK_BRACE_BLOCK" value="10"/>
  <define name="wxSTC_MAGIK_SQBRACKET_BLOCK" value="11"/>
  <define name="wxSTC_MAGIK_UNKNOWN_KEYWORD" value="12"/>
  <define name="wxSTC_MAGIK_KEYWORD" value="13"/>
  <define name="wxSTC_MAGIK_PRAGMA" value="14"/>
  <define name="wxSTC_MAGIK_SYMBOL" value="15"/>
  <define name="wxSTC_POWERSHELL_DEFAULT" value="0"/>
  <define name="wxSTC_POWERSHELL_COMMENT" value="1"/>
  <define name="wxSTC_POWERSHELL_STRING" value="2"/>
  <define name="wxSTC_POWERSHELL_CHARACTER" value="3"/>
  <define name="wxSTC_POWERSHELL_NUMBER" value="4"/>
  <define name="wxSTC_POWERSHELL_VARIABLE" value="5"/>
  <define name="wxSTC_POWERSHELL_OPERATOR" value="6"/>
  <define name="wxSTC_POWERSHELL_IDENTIFIER" value="7"/>
  <define name="wxSTC_POWERSHELL_KEYWORD" value="8"/>
  <define name="wxSTC_POWERSHELL_CMDLET" value="9"/>
  <define name="wxSTC_POWERSHELL_ALIAS" value="10"/>
  <define name="wxSTC_POWERSHELL_FUNCTION" value="11"/>
  <define name="wxSTC_POWERSHELL_USER1" value="12"/>
  <define name="wxSTC_POWERSHELL_COMMENTSTREAM" value="13"/>
  <define name="wxSTC_POWERSHELL_HERE_STRING" value="14"/>
  <define name="wxSTC_POWERSHELL_HERE_CHARACTER" value="15"/>
  <define name="wxSTC_POWERSHELL_COMMENTDOCKEYWORD" value="16"/>
  <define name="wxSTC_MYSQL_DEFAULT" value="0"/>
  <define name="wxSTC_MYSQL_COMMENT" value="1"/>
  <define name="wxSTC_MYSQL_COMMENTLINE" value="2"/>
  <define name="wxSTC_MYSQL_VARIABLE" value="3"/>
  <define name="wxSTC_MYSQL_SYSTEMVARIABLE" value="4"/>
  <define name="wxSTC_MYSQL_KNOWNSYSTEMVARIABLE" value="5"/>
  <define name="wxSTC_MYSQL_NUMBER" value="6"/>
  <define name="wxSTC_MYSQL_MAJORKEYWORD" value="7"/>
  <define name="wxSTC_MYSQL_KEYWORD" value="8"/>
  <define name="wxSTC_MYSQL_DATABASEOBJECT" value="9"/>
  <define name="wxSTC_MYSQL_PROCEDUREKEYWORD" value="10"/>
  <define name="wxSTC_MYSQL_STRING" value="11"/>
  <define name="wxSTC_MYSQL_SQSTRING" value="12"/>
  <define name="wxSTC_MYSQL_DQSTRING" value="13"/>
  <define name="wxSTC_MYSQL_OPERATOR" value="14"/>
  <define name="wxSTC_MYSQL_FUNCTION" value="15"/>
  <define name="wxSTC_MYSQL_IDENTIFIER" value="16"/>
  <define name="wxSTC_MYSQL_QUOTEDIDENTIFIER" value="17"/>
  <define name="wxSTC_MYSQL_USER1" value="18"/>
  <define name="wxSTC_MYSQL_USER2" value="19"/>
  <define name="wxSTC_MYSQL_USER3" value="20"/>
  <define name="wxSTC_MYSQL_HIDDENCOMMAND" value="21"/>
  <define name="wxSTC_MYSQL_PLACEHOLDER" value="22"/>
  <define name="wxSTC_PO_DEFAULT" value="0"/>
  <define name="wxSTC_PO_COMMENT" value="1"/>
  <define name="wxSTC_PO_MSGID" value="2"/>
  <define name="wxSTC_PO_MSGID_TEXT" value="3"/>
  <define name="wxSTC_PO_MSGSTR" value="4"/>
  <define name="wxSTC_PO_MSGSTR_TEXT" value="5"/>
  <define name="wxSTC_PO_MSGCTXT" value="6"/>
  <define name="wxSTC_PO_MSGCTXT_TEXT" value="7"/>
  <define name="wxSTC_PO_FUZZY" value="8"/>
  <define name="wxSTC_PO_PROGRAMMER_COMMENT" value="9"/>
  <define name="wxSTC_PO_REFERENCE" value="10"/>
  <define name="wxSTC_PO_FLAGS" value="11"/>
  <define name="wxSTC_PO_MSGID_TEXT_EOL" value="12"/>
  <define name="wxSTC_PO_MSGSTR_TEXT_EOL" value="13"/>
  <define name="wxSTC_PO_MSGCTXT_TEXT_EOL" value="14"/>
  <define name="wxSTC_PO_ERROR" value="15"/>
  <define name="wxSTC_PAS_DEFAULT" value="0"/>
  <define name="wxSTC_PAS_IDENTIFIER" value="1"/>
  <define name="wxSTC_PAS_COMMENT" value="2"/>
  <define name="wxSTC_PAS_COMMENT2" value="3"/>
  <define name="wxSTC_PAS_COMMENTLINE" value="4"/>
  <define name="wxSTC_PAS_PREPROCESSOR" value="5"/>
  <define name="wxSTC_PAS_PREPROCESSOR2" value="6"/>
  <define name="wxSTC_PAS_NUMBER" value="7"/>
  <define name="wxSTC_PAS_HEXNUMBER" value="8"/>
  <define name="wxSTC_PAS_WORD" value="9"/>
  <define name="wxSTC_PAS_STRING" value="10"/>
  <define name="wxSTC_PAS_STRINGEOL" value="11"/>
  <define name="wxSTC_PAS_CHARACTER" value="12"/>
  <define name="wxSTC_PAS_OPERATOR" value="13"/>
  <define name="wxSTC_PAS_ASM" value="14"/>
  <define name="wxSTC_SORCUS_DEFAULT" value="0"/>
  <define name="wxSTC_SORCUS_COMMAND" value="1"/>
  <define name="wxSTC_SORCUS_PARAMETER" value="2"/>
  <define name="wxSTC_SORCUS_COMMENTLINE" value="3"/>
  <define name="wxSTC_SORCUS_STRING" value="4"/>
  <define name="wxSTC_SORCUS_STRINGEOL" value="5"/>
  <define name="wxSTC_SORCUS_IDENTIFIER" value="6"/>
  <define name="wxSTC_SORCUS_OPERATOR" value="7"/>
  <define name="wxSTC_SORCUS_NUMBER" value="8"/>
  <define name="wxSTC_SORCUS_CONSTANT" value="9"/>
  <define name="wxSTC_POWERPRO_DEFAULT" value="0"/>
  <define name="wxSTC_POWERPRO_COMMENTBLOCK" value="1"/>
  <define name="wxSTC_POWERPRO_COMMENTLINE" value="2"/>
  <define name="wxSTC_POWERPRO_NUMBER" value="3"/>
  <define name="wxSTC_POWERPRO_WORD" value="4"/>
  <define name="wxSTC_POWERPRO_WORD2" value="5"/>
  <define name="wxSTC_POWERPRO_WORD3" value="6"/>
  <define name="wxSTC_POWERPRO_WORD4" value="7"/>
  <define name="wxSTC_POWERPRO_DOUBLEQUOTEDSTRING" value="8"/>
  <define name="wxSTC_POWERPRO_SINGLEQUOTEDSTRING" value="9"/>
  <define name="wxSTC_POWERPRO_LINECONTINUE" value="10"/>
  <define name="wxSTC_POWERPRO_OPERATOR" value="11"/>
  <define name="wxSTC_POWERPRO_IDENTIFIER" value="12"/>
  <define name="wxSTC_POWERPRO_STRINGEOL" value="13"/>
  <define name="wxSTC_POWERPRO_VERBATIM" value="14"/>
  <define name="wxSTC_POWERPRO_ALTQUOTE" value="15"/>
  <define name="wxSTC_POWERPRO_FUNCTION" value="16"/>
  <define name="wxSTC_SML_DEFAULT" value="0"/>
  <define name="wxSTC_SML_IDENTIFIER" value="1"/>
  <define name="wxSTC_SML_TAGNAME" value="2"/>
  <define name="wxSTC_SML_KEYWORD" value="3"/>
  <define name="wxSTC_SML_KEYWORD2" value="4"/>
  <define name="wxSTC_SML_KEYWORD3" value="5"/>
  <define name="wxSTC_SML_LINENUM" value="6"/>
  <define name="wxSTC_SML_OPERATOR" value="7"/>
  <define name="wxSTC_SML_NUMBER" value="8"/>
  <define name="wxSTC_SML_CHAR" value="9"/>
  <define name="wxSTC_SML_STRING" value="11"/>
  <define name="wxSTC_SML_COMMENT" value="12"/>
  <define name="wxSTC_SML_COMMENT1" value="13"/>
  <define name="wxSTC_SML_COMMENT2" value="14"/>
  <define name="wxSTC_SML_COMMENT3" value="15"/>
  <define name="wxSTC_MARKDOWN_DEFAULT" value="0"/>
  <define name="wxSTC_MARKDOWN_LINE_BEGIN" value="1"/>
  <define name="wxSTC_MARKDOWN_STRONG1" value="2"/>
  <define name="wxSTC_MARKDOWN_STRONG2" value="3"/>
  <define name="wxSTC_MARKDOWN_EM1" value="4"/>
  <define name="wxSTC_MARKDOWN_EM2" value="5"/>
  <define name="wxSTC_MARKDOWN_HEADER1" value="6"/>
  <define name="wxSTC_MARKDOWN_HEADER2" value="7"/>
  <define name="wxSTC_MARKDOWN_HEADER3" value="8"/>
  <define name="wxSTC_MARKDOWN_HEADER4" value="9"/>
  <define name="wxSTC_MARKDOWN_HEADER5" value="10"/>
  <define name="wxSTC_MARKDOWN_HEADER6" value="11"/>
  <define name="wxSTC_MARKDOWN_PRECHAR" value="12"/>
  <define name="wxSTC_MARKDOWN_ULIST_ITEM" value="13"/>
  <define name="wxSTC_MARKDOWN_OLIST_ITEM" value="14"/>
  <define name="wxSTC_MARKDOWN_BLOCKQUOTE" value="15"/>
  <define name="wxSTC_MARKDOWN_STRIKEOUT" value="16"/>
  <define name="wxSTC_MARKDOWN_HRULE" value="17"/>
  <define name="wxSTC_MARKDOWN_LINK" value="18"/>
  <define name="wxSTC_MARKDOWN_CODE" value="19"/>
  <define name="wxSTC_MARKDOWN_CODE2" value="20"/>
  <define name="wxSTC_MARKDOWN_CODEBK" value="21"/>
  <define name="wxSTC_TXT2TAGS_DEFAULT" value="0"/>
  <define name="wxSTC_TXT2TAGS_LINE_BEGIN" value="1"/>
  <define name="wxSTC_TXT2TAGS_STRONG1" value="2"/>
  <define name="wxSTC_TXT2TAGS_STRONG2" value="3"/>
  <define name="wxSTC_TXT2TAGS_EM1" value="4"/>
  <define name="wxSTC_TXT2TAGS_EM2" value="5"/>
  <define name="wxSTC_TXT2TAGS_HEADER1" value="6"/>
  <define name="wxSTC_TXT2TAGS_HEADER2" value="7"/>
  <define name="wxSTC_TXT2TAGS_HEADER3" value="8"/>
  <define name="wxSTC_TXT2TAGS_HEADER4" value="9"/>
  <define name="wxSTC_TXT2TAGS_HEADER5" value="10"/>
  <define name="wxSTC_TXT2TAGS_HEADER6" value="11"/>
  <define name="wxSTC_TXT2TAGS_PRECHAR" value="12"/>
  <define name="wxSTC_TXT2TAGS_ULIST_ITEM" value="13"/>
  <define name="wxSTC_TXT2TAGS_OLIST_ITEM" value="14"/>
  <define name="wxSTC_TXT2TAGS_BLOCKQUOTE" value="15"/>
  <define name="wxSTC_TXT2TAGS_STRIKEOUT" value="16"/>
  <define name="wxSTC_TXT2TAGS_HRULE" value="17"/>
  <define name="wxSTC_TXT2TAGS_LINK" value="18"/>
  <define name="wxSTC_TXT2TAGS_CODE" value="19"/>
  <define name="wxSTC_TXT2TAGS_CODE2" value="20"/>
  <define name="wxSTC_TXT2TAGS_CODEBK" value="21"/>
  <define name="wxSTC_TXT2TAGS_COMMENT" value="22"/>
  <define name="wxSTC_TXT2TAGS_OPTION" value="23"/>
  <define name="wxSTC_TXT2TAGS_PREPROC" value="24"/>
  <define name="wxSTC_TXT2TAGS_POSTPROC" value="25"/>
  <define name="wxSTC_A68K_DEFAULT" value="0"/>
  <define name="wxSTC_A68K_COMMENT" value="1"/>
  <define name="wxSTC_A68K_NUMBER_DEC" value="2"/>
  <define name="wxSTC_A68K_NUMBER_BIN" value="3"/>
  <define name="wxSTC_A68K_NUMBER_HEX" value="4"/>
  <define name="wxSTC_A68K_STRING1" value="5"/>
  <define name="wxSTC_A68K_OPERATOR" value="6"/>
  <define name="wxSTC_A68K_CPUINSTRUCTION" value="7"/>
  <define name="wxSTC_A68K_EXTINSTRUCTION" value="8"/>
  <define name="wxSTC_A68K_REGISTER" value="9"/>
  <define name="wxSTC_A68K_DIRECTIVE" value="10"/>
  <define name="wxSTC_A68K_MACRO_ARG" value="11"/>
  <define name="wxSTC_A68K_LABEL" value="12"/>
  <define name="wxSTC_A68K_STRING2" value="13"/>
  <define name="wxSTC_A68K_IDENTIFIER" value="14"/>
  <define name="wxSTC_A68K_MACRO_DECLARATION" value="15"/>
  <define name="wxSTC_A68K_COMMENT_WORD" value="16"/>
  <define name="wxSTC_A68K_COMMENT_SPECIAL" value="17"/>
  <define name="wxSTC_A68K_COMMENT_DOXYGEN" value="18"/>
  <define name="wxSTC_MODULA_DEFAULT" value="0"/>
  <define name="wxSTC_MODULA_COMMENT" value="1"/>
  <define name="wxSTC_MODULA_DOXYCOMM" value="2"/>
  <define name="wxSTC_MODULA_DOXYKEY" value="3"/>
  <define name="wxSTC_MODULA_KEYWORD" value="4"/>
  <define name="wxSTC_MODULA_RESERVED" value="5"/>
  <define name="wxSTC_MODULA_NUMBER" value="6"/>
  <define name="wxSTC_MODULA_BASENUM" value="7"/>
  <define name="wxSTC_MODULA_FLOAT" value="8"/>
  <define name="wxSTC_MODULA_STRING" value="9"/>
  <define name="wxSTC_MODULA_STRSPEC" value="10"/>
  <define name="wxSTC_MODULA_CHAR" value="11"/>
  <define name="wxSTC_MODULA_CHARSPEC" value="12"/>
  <define name="wxSTC_MODULA_PROC" value="13"/>
  <define name="wxSTC_MODULA_PRAGMA" value="14"/>
  <define name="wxSTC_MODULA_PRGKEY" value="15"/>
  <define name="wxSTC_MODULA_OPERATOR" value="16"/>
  <define name="wxSTC_MODULA_BADSTR" value="17"/>
  <define name="wxSTC_COFFEESCRIPT_DEFAULT" value="0"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENT" value="1"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTLINE" value="2"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTDOC" value="3"/>
  <define name="wxSTC_COFFEESCRIPT_NUMBER" value="4"/>
  <define name="wxSTC_COFFEESCRIPT_WORD" value="5"/>
  <define name="wxSTC_COFFEESCRIPT_STRING" value="6"/>
  <define name="wxSTC_COFFEESCRIPT_CHARACTER" value="7"/>
  <define name="wxSTC_COFFEESCRIPT_UUID" value="8"/>
  <define name="wxSTC_COFFEESCRIPT_PREPROCESSOR" value="9"/>
  <define name="wxSTC_COFFEESCRIPT_OPERATOR" value="10"/>
  <define name="wxSTC_COFFEESCRIPT_IDENTIFIER" value="11"/>
  <define name="wxSTC_COFFEESCRIPT_STRINGEOL" value="12"/>
  <define name="wxSTC_COFFEESCRIPT_VERBATIM" value="13"/>
  <define name="wxSTC_COFFEESCRIPT_REGEX" value="14"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTLINEDOC" value="15"/>
  <define name="wxSTC_COFFEESCRIPT_WORD2" value="16"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTDOCKEYWORD" value="17"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTDOCKEYWORDERROR" value="18"/>
  <define name="wxSTC_COFFEESCRIPT_GLOBALCLASS" value="19"/>
  <define name="wxSTC_COFFEESCRIPT_STRINGRAW" value="20"/>
  <define name="wxSTC_COFFEESCRIPT_TRIPLEVERBATIM" value="21"/>
  <define name="wxSTC_COFFEESCRIPT_COMMENTBLOCK" value="22"/>
  <define name="wxSTC_COFFEESCRIPT_VERBOSE_REGEX" value="23"/>
  <define name="wxSTC_COFFEESCRIPT_VERBOSE_REGEX_COMMENT" value="24"/>
  <define name="wxSTC_COFFEESCRIPT_INSTANCEPROPERTY" value="25"/>
  <define name="wxSTC_AVS_DEFAULT" value="0"/>
  <define name="wxSTC_AVS_COMMENTBLOCK" value="1"/>
  <define name="wxSTC_AVS_COMMENTBLOCKN" value="2"/>
  <define name="wxSTC_AVS_COMMENTLINE" value="3"/>
  <define name="wxSTC_AVS_NUMBER" value="4"/>
  <define name="wxSTC_AVS_OPERATOR" value="5"/>
  <define name="wxSTC_AVS_IDENTIFIER" value="6"/>
  <define name="wxSTC_AVS_STRING" value="7"/>
  <define name="wxSTC_AVS_TRIPLESTRING" value="8"/>
  <define name="wxSTC_AVS_KEYWORD" value="9"/>
  <define name="wxSTC_AVS_FILTER" value="10"/>
  <define name="wxSTC_AVS_PLUGIN" value="11"/>
  <define name="wxSTC_AVS_FUNCTION" value="12"/>
  <define name="wxSTC_AVS_CLIPPROP" value="13"/>
  <define name="wxSTC_AVS_USERDFN" value="14"/>
  <define name="wxSTC_ECL_DEFAULT" value="0"/>
  <define name="wxSTC_ECL_COMMENT" value="1"/>
  <define name="wxSTC_ECL_COMMENTLINE" value="2"/>
  <define name="wxSTC_ECL_NUMBER" value="3"/>
  <define name="wxSTC_ECL_STRING" value="4"/>
  <define name="wxSTC_ECL_WORD0" value="5"/>
  <define name="wxSTC_ECL_OPERATOR" value="6"/>
  <define name="wxSTC_ECL_CHARACTER" value="7"/>
  <define name="wxSTC_ECL_UUID" value="8"/>
  <define name="wxSTC_ECL_PREPROCESSOR" value="9"/>
  <define name="wxSTC_ECL_UNKNOWN" value="10"/>
  <define name="wxSTC_ECL_IDENTIFIER" value="11"/>
  <define name="wxSTC_ECL_STRINGEOL" value="12"/>
  <define name="wxSTC_ECL_VERBATIM" value="13"/>
  <define name="wxSTC_ECL_REGEX" value="14"/>
  <define name="wxSTC_ECL_COMMENTLINEDOC" value="15"/>
  <define name="wxSTC_ECL_WORD1" value="16"/>
  <define name="wxSTC_ECL_COMMENTDOCKEYWORD" value="17"/>
  <define name="wxSTC_ECL_COMMENTDOCKEYWORDERROR" value="18"/>
  <define name="wxSTC_ECL_WORD2" value="19"/>
  <define name="wxSTC_ECL_WORD3" value="20"/>
  <define name="wxSTC_ECL_WORD4" value="21"/>
  <define name="wxSTC_ECL_WORD5" value="22"/>
  <define name="wxSTC_ECL_COMMENTDOC" value="23"/>
  <define name="wxSTC_ECL_ADDED" value="24"/>
  <define name="wxSTC_ECL_DELETED" value="25"/>
  <define name="wxSTC_ECL_CHANGED" value="26"/>
  <define name="wxSTC_ECL_MOVED" value="27"/>
  <define name="wxSTC_OSCRIPT_DEFAULT" value="0"/>
  <define name="wxSTC_OSCRIPT_LINE_COMMENT" value="1"/>
  <define name="wxSTC_OSCRIPT_BLOCK_COMMENT" value="2"/>
  <define name="wxSTC_OSCRIPT_DOC_COMMENT" value="3"/>
  <define name="wxSTC_OSCRIPT_PREPROCESSOR" value="4"/>
  <define name="wxSTC_OSCRIPT_NUMBER" value="5"/>
  <define name="wxSTC_OSCRIPT_SINGLEQUOTE_STRING" value="6"/>
  <define name="wxSTC_OSCRIPT_DOUBLEQUOTE_STRING" value="7"/>
  <define name="wxSTC_OSCRIPT_CONSTANT" value="8"/>
  <define name="wxSTC_OSCRIPT_IDENTIFIER" value="9"/>
  <define name="wxSTC_OSCRIPT_GLOBAL" value="10"/>
  <define name="wxSTC_OSCRIPT_KEYWORD" value="11"/>
  <define name="wxSTC_OSCRIPT_OPERATOR" value="12"/>
  <define name="wxSTC_OSCRIPT_LABEL" value="13"/>
  <define name="wxSTC_OSCRIPT_TYPE" value="14"/>
  <define name="wxSTC_OSCRIPT_FUNCTION" value="15"/>
  <define name="wxSTC_OSCRIPT_OBJECT" value="16"/>
  <define name="wxSTC_OSCRIPT_PROPERTY" value="17"/>
  <define name="wxSTC_OSCRIPT_METHOD" value="18"/>
  <define name="wxSTC_VISUALPROLOG_DEFAULT" value="0"/>
  <define name="wxSTC_VISUALPROLOG_KEY_MAJOR" value="1"/>
  <define name="wxSTC_VISUALPROLOG_KEY_MINOR" value="2"/>
  <define name="wxSTC_VISUALPROLOG_KEY_DIRECTIVE" value="3"/>
  <define name="wxSTC_VISUALPROLOG_COMMENT_BLOCK" value="4"/>
  <define name="wxSTC_VISUALPROLOG_COMMENT_LINE" value="5"/>
  <define name="wxSTC_VISUALPROLOG_COMMENT_KEY" value="6"/>
  <define name="wxSTC_VISUALPROLOG_COMMENT_KEY_ERROR" value="7"/>
  <define name="wxSTC_VISUALPROLOG_IDENTIFIER" value="8"/>
  <define name="wxSTC_VISUALPROLOG_VARIABLE" value="9"/>
  <define name="wxSTC_VISUALPROLOG_ANONYMOUS" value="10"/>
  <define name="wxSTC_VISUALPROLOG_NUMBER" value="11"/>
  <define name="wxSTC_VISUALPROLOG_OPERATOR" value="12"/>
  <define name="wxSTC_VISUALPROLOG_CHARACTER" value="13"/>
  <define name="wxSTC_VISUALPROLOG_CHARACTER_TOO_MANY" value="14"/>
  <define name="wxSTC_VISUALPROLOG_CHARACTER_ESCAPE_ERROR" value="15"/>
  <define name="wxSTC_VISUALPROLOG_STRING" value="16"/>
  <define name="wxSTC_VISUALPROLOG_STRING_ESCAPE" value="17"/>
  <define name="wxSTC_VISUALPROLOG_STRING_ESCAPE_ERROR" value="18"/>
  <define name="wxSTC_VISUALPROLOG_STRING_EOL_OPEN" value="19"/>
  <define name="wxSTC_VISUALPROLOG_STRING_VERBATIM" value="20"/>
  <define name="wxSTC_VISUALPROLOG_STRING_VERBATIM_SPECIAL" value="21"/>
  <define name="wxSTC_VISUALPROLOG_STRING_VERBATIM_EOL" value="22"/>
  <define name="wxSTC_STTXT_DEFAULT" value="0"/>
  <define name="wxSTC_STTXT_COMMENT" value="1"/>
  <define name="wxSTC_STTXT_COMMENTLINE" value="2"/>
  <define name="wxSTC_STTXT_KEYWORD" value="3"/>
  <define name="wxSTC_STTXT_TYPE" value="4"/>
  <define name="wxSTC_STTXT_FUNCTION" value="5"/>
  <define name="wxSTC_STTXT_FB" value="6"/>
  <define name="wxSTC_STTXT_NUMBER" value="7"/>
  <define name="wxSTC_STTXT_HEXNUMBER" value="8"/>
  <define name="wxSTC_STTXT_PRAGMA" value="9"/>
  <define name="wxSTC_STTXT_OPERATOR" value="10"/>
  <define name="wxSTC_STTXT_CHARACTER" value="11"/>
  <define name="wxSTC_STTXT_STRING1" value="12"/>
  <define name="wxSTC_STTXT_STRING2" value="13"/>
  <define name="wxSTC_STTXT_STRINGEOL" value="14"/>
  <define name="wxSTC_STTXT_IDENTIFIER" value="15"/>
  <define name="wxSTC_STTXT_DATETIME" value="16"/>
  <define name="wxSTC_STTXT_VARS" value="17"/>
  <define name="wxSTC_STTXT_PRAGMAS" value="18"/>
  <define name="wxSTC_KVIRC_DEFAULT" value="0"/>
  <define name="wxSTC_KVIRC_COMMENT" value="1"/>
  <define name="wxSTC_KVIRC_COMMENTBLOCK" value="2"/>
  <define name="wxSTC_KVIRC_STRING" value="3"/>
  <define name="wxSTC_KVIRC_WORD" value="4"/>
  <define name="wxSTC_KVIRC_KEYWORD" value="5"/>
  <define name="wxSTC_KVIRC_FUNCTION_KEYWORD" value="6"/>
  <define name="wxSTC_KVIRC_FUNCTION" value="7"/>
  <define name="wxSTC_KVIRC_VARIABLE" value="8"/>
  <define name="wxSTC_KVIRC_NUMBER" value="9"/>
  <define name="wxSTC_KVIRC_OPERATOR" value="10"/>
  <define name="wxSTC_KVIRC_STRING_FUNCTION" value="11"/>
  <define name="wxSTC_KVIRC_STRING_VARIABLE" value="12"/>
  <define name="wxSTC_RUST_DEFAULT" value="0"/>
  <define name="wxSTC_RUST_COMMENTBLOCK" value="1"/>
  <define name="wxSTC_RUST_COMMENTLINE" value="2"/>
  <define name="wxSTC_RUST_COMMENTBLOCKDOC" value="3"/>
  <define name="wxSTC_RUST_COMMENTLINEDOC" value="4"/>
  <define name="wxSTC_RUST_NUMBER" value="5"/>
  <define name="wxSTC_RUST_WORD" value="6"/>
  <define name="wxSTC_RUST_WORD2" value="7"/>
  <define name="wxSTC_RUST_WORD3" value="8"/>
  <define name="wxSTC_RUST_WORD4" value="9"/>
  <define name="wxSTC_RUST_WORD5" value="10"/>
  <define name="wxSTC_RUST_WORD6" value="11"/>
  <define name="wxSTC_RUST_WORD7" value="12"/>
  <define name="wxSTC_RUST_STRING" value="13"/>
  <define name="wxSTC_RUST_STRINGR" value="14"/>
  <define name="wxSTC_RUST_CHARACTER" value="15"/>
  <define name="wxSTC_RUST_OPERATOR" value="16"/>
  <define name="wxSTC_RUST_IDENTIFIER" value="17"/>
  <define name="wxSTC_RUST_LIFETIME" value="18"/>
  <define name="wxSTC_RUST_MACRO" value="19"/>
  <define name="wxSTC_RUST_LEXERROR" value="20"/>
  <define name="wxSTC_RUST_BYTESTRING" value="21"/>
  <define name="wxSTC_RUST_BYTESTRINGR" value="22"/>
  <define name="wxSTC_RUST_BYTECHARACTER" value="23"/>
  <define name="wxSTC_DMAP_DEFAULT" value="0"/>
  <define name="wxSTC_DMAP_COMMENT" value="1"/>
  <define name="wxSTC_DMAP_NUMBER" value="2"/>
  <define name="wxSTC_DMAP_STRING1" value="3"/>
  <define name="wxSTC_DMAP_STRING2" value="4"/>
  <define name="wxSTC_DMAP_STRINGEOL" value="5"/>
  <define name="wxSTC_DMAP_OPERATOR" value="6"/>
  <define name="wxSTC_DMAP_IDENTIFIER" value="7"/>
  <define name="wxSTC_DMAP_WORD" value="8"/>
  <define name="wxSTC_DMAP_WORD2" value="9"/>
  <define name="wxSTC_DMAP_WORD3" value="10"/>
  <define name="wxSTC_DMIS_DEFAULT" value="0"/>
  <define name="wxSTC_DMIS_COMMENT" value="1"/>
  <define name="wxSTC_DMIS_STRING" value="2"/>
  <define name="wxSTC_DMIS_NUMBER" value="3"/>
  <define name="wxSTC_DMIS_KEYWORD" value="4"/>
  <define name="wxSTC_DMIS_MAJORWORD" value="5"/>
  <define name="wxSTC_DMIS_MINORWORD" value="6"/>
  <define name="wxSTC_DMIS_UNSUPPORTED_MAJOR" value="7"/>
  <define name="wxSTC_DMIS_UNSUPPORTED_MINOR" value="8"/>
  <define name="wxSTC_DMIS_LABEL" value="9"/>
  <define name="wxSTC_REG_DEFAULT" value="0"/>
  <define name="wxSTC_REG_COMMENT" value="1"/>
  <define name="wxSTC_REG_VALUENAME" value="2"/>
  <define name="wxSTC_REG_STRING" value="3"/>
  <define name="wxSTC_REG_HEXDIGIT" value="4"/>
  <define name="wxSTC_REG_VALUETYPE" value="5"/>
  <define name="wxSTC_REG_ADDEDKEY" value="6"/>
  <define name="wxSTC_REG_DELETEDKEY" value="7"/>
  <define name="wxSTC_REG_ESCAPED" value="8"/>
  <define name="wxSTC_REG_KEYPATH_GUID" value="9"/>
  <define name="wxSTC_REG_STRING_GUID" value="10"/>
  <define name="wxSTC_REG_PARAMETER" value="11"/>
  <define name="wxSTC_REG_OPERATOR" value="12"/>
  <define name="wxSTC_BIBTEX_DEFAULT" value="0"/>
  <define name="wxSTC_BIBTEX_ENTRY" value="1"/>
  <define name="wxSTC_BIBTEX_UNKNOWN_ENTRY" value="2"/>
  <define name="wxSTC_BIBTEX_KEY" value="3"/>
  <define name="wxSTC_BIBTEX_PARAMETER" value="4"/>
  <define name="wxSTC_BIBTEX_VALUE" value="5"/>
  <define name="wxSTC_BIBTEX_COMMENT" value="6"/>
  <define name="wxSTC_HEX_DEFAULT" value="0"/>
  <define name="wxSTC_HEX_RECSTART" value="1"/>
  <define name="wxSTC_HEX_RECTYPE" value="2"/>
  <define name="wxSTC_HEX_RECTYPE_UNKNOWN" value="3"/>
  <define name="wxSTC_HEX_BYTECOUNT" value="4"/>
  <define name="wxSTC_HEX_BYTECOUNT_WRONG" value="5"/>
  <define name="wxSTC_HEX_NOADDRESS" value="6"/>
  <define name="wxSTC_HEX_DATAADDRESS" value="7"/>
  <define name="wxSTC_HEX_RECCOUNT" value="8"/>
  <define name="wxSTC_HEX_STARTADDRESS" value="9"/>
  <define name="wxSTC_HEX_ADDRESSFIELD_UNKNOWN" value="10"/>
  <define name="wxSTC_HEX_EXTENDEDADDRESS" value="11"/>
  <define name="wxSTC_HEX_DATA_ODD" value="12"/>
  <define name="wxSTC_HEX_DATA_EVEN" value="13"/>
  <define name="wxSTC_HEX_DATA_UNKNOWN" value="14"/>
  <define name="wxSTC_HEX_DATA_EMPTY" value="15"/>
  <define name="wxSTC_HEX_CHECKSUM" value="16"/>
  <define name="wxSTC_HEX_CHECKSUM_WRONG" value="17"/>
  <define name="wxSTC_HEX_GARBAGE" value="18"/>
  <define name="wxSTC_JSON_DEFAULT" value="0"/>
  <define name="wxSTC_JSON_NUMBER" value="1"/>
  <define name="wxSTC_JSON_STRING" value="2"/>
  <define name="wxSTC_JSON_STRINGEOL" value="3"/>
  <define name="wxSTC_JSON_PROPERTYNAME" value="4"/>
  <define name="wxSTC_JSON_ESCAPESEQUENCE" value="5"/>
  <define name="wxSTC_JSON_LINECOMMENT" value="6"/>
  <define name="wxSTC_JSON_BLOCKCOMMENT" value="7"/>
  <define name="wxSTC_JSON_OPERATOR" value="8"/>
  <define name="wxSTC_JSON_URI" value="9"/>
  <define name="wxSTC_JSON_COMPACTIRI" value="10"/>
  <define name="wxSTC_JSON_KEYWORD" value="11"/>
  <define name="wxSTC_JSON_LDKEYWORD" value="12"/>
  <define name="wxSTC_JSON_ERROR" value="13"/>
  <define name="wxSTC_EDI_DEFAULT" value="0"/>
  <define name="wxSTC_EDI_SEGMENTSTART" value="1"/>
  <define name="wxSTC_EDI_SEGMENTEND" value="2"/>
  <define name="wxSTC_EDI_SEP_ELEMENT" value="3"/>
  <define name="wxSTC_EDI_SEP_COMPOSITE" value="4"/>
  <define name="wxSTC_EDI_SEP_RELEASE" value="5"/>
  <define name="wxSTC_EDI_UNA" value="6"/>
  <define name="wxSTC_EDI_UNH" value="7"/>
  <define name="wxSTC_EDI_BADSEGMENT" value="8"/>
  <define name="wxANIMATION_TYPE_INVALID" value="0"/>
  <define name="wxANIMATION_TYPE_GIF" value="1"/>
  <define name="wxANIMATION_TYPE_ANI" value="2"/>
  <define name="wxANIMATION_TYPE_ANIY" value="3"/>
  <define name="wxANIM_UNSPECIFIED" value="-1"/>
  <define name="wxANIM_DONOTREMOVE" value="0"/>
  <define name="wxANIM_TOBACKGROUND" value="1"/>
  <define name="wxANIM_TOPREVIOUS" value="2"/>
  <define name="wxCURSOR_NONE" value="0"/>
  <define name="wxCURSOR_ARROW" value="1"/>
  <define name="wxCURSOR_RIGHT_ARROW" value="2"/>
  <define name="wxCURSOR_BULLSEYE" value="3"/>
  <define name="wxCURSOR_CHAR" value="4"/>
  <define name="wxCURSOR_CROSS" value="5"/>
  <define name="wxCURSOR_HAND" value="6"/>
  <define name="wxCURSOR_IBEAM" value="7"/>
  <define name="wxCURSOR_LEFT_BUTTON" value="8"/>
  <define name="wxCURSOR_MAGNIFIER" value="9"/>
  <define name="wxCURSOR_MIDDLE_BUTTON" value="10"/>
  <define name="wxCURSOR_NO_ENTRY" value="11"/>
  <define name="wxCURSOR_PAINT_BRUSH" value="12"/>
  <define name="wxCURSOR_PENCIL" value="13"/>
  <define name="wxCURSOR_POINT_LEFT" value="14"/>
  <define name="wxCURSOR_POINT_RIGHT" value="15"/>
  <define name="wxCURSOR_QUESTION_ARROW" value="16"/>
  <define name="wxCURSOR_RIGHT_BUTTON" value="17"/>
  <define name="wxCURSOR_SIZENESW" value="18"/>
  <define name="wxCURSOR_SIZENS" value="19"/>
  <define name="wxCURSOR_SIZENWSE" value="20"/>
  <define name="wxCURSOR_SIZEWE" value="21"/>
  <define name="wxCURSOR_SIZING" value="22"/>
  <define name="wxCURSOR_SPRAYCAN" value="23"/>
  <define name="wxCURSOR_WAIT" value="24"/>
  <define name="wxCURSOR_WATCH" value="25"/>
  <define name="wxCURSOR_BLANK" value="26"/>
  <define name="wxCURSOR_DEFAULT" value="27"/>
  <define name="wxIMAGE_LIST_NORMAL" value="0"/>
  <define name="wxIMAGE_LIST_SMALL" value="1"/>
  <define name="wxIMAGE_LIST_STATE" value="2"/>
  <define name="wxIMAGELIST_DRAW_NORMAL" value="0x0001"/>
  <define name="wxIMAGELIST_DRAW_TRANSPARENT" value="0x0002"/>
  <define name="wxIMAGELIST_DRAW_SELECTED" value="0x0004"/>
  <define name="wxIMAGELIST_DRAW_FOCUSED" value="0x0008"/>
  <define name="wxSASH_DRAG_NONE" value="0"/>
  <define name="wxSASH_DRAG_DRAGGING" value="1"/>
  <define name="wxSASH_DRAG_LEFT_DOWN" value="2"/>
  <define name="wxSASH_TOP" value="0"/>
  <define name="wxSASH_RIGHT" value="1"/>
  <define name="wxSASH_BOTTOM" value="2"/>
  <define name="wxSASH_LEFT" value="3"/>
  <define name="wxSASH_NONE" value="100"/>
  <define name="wxSASH_STATUS_OK" value="0"/>
  <define name="wxSASH_STATUS_OUT_OF_RANGE" value="1"/>
  <define name="wxSW_NOBORDER" value="0x0000"/>
  <define name="wxSW_BORDER" value="0x0020"/>
  <define name="wxSW_3DSASH" value="0x0040"/>
  <define name="wxSW_3DBORDER" value="0x0080"/>
  <define name="wxSW_3D" value="0x60"/>
  <define name="wxSL_HORIZONTAL" value="4"/>
  <define name="wxSL_VERTICAL" value="8"/>
  <define name="wxSL_TICKS" value="0x0010"/>
  <define name="wxSL_AUTOTICKS" value="0x10"/>
  <define name="wxSL_LEFT" value="0x0040"/>
  <define name="wxSL_TOP" value="0x0080"/>
  <define name="wxSL_RIGHT" value="0x0100"/>
  <define name="wxSL_BOTTOM" value="0x0200"/>
  <define name="wxSL_BOTH" value="0x0400"/>
  <define name="wxSL_SELRANGE" value="0x0800"/>
  <define name="wxSL_INVERSE" value="0x1000"/>
  <define name="wxSL_MIN_MAX_LABELS" value="0x2000"/>
  <define name="wxSL_VALUE_LABEL" value="0x4000"/>
  <define name="wxSL_LABELS" value="0x6000"/>
  <define name="wxSTB_SIZEGRIP" value="0x0010"/>
  <define name="wxSTB_SHOW_TIPS" value="0x0020"/>
  <define name="wxSTB_ELLIPSIZE_START" value="0x0040"/>
  <define name="wxSTB_ELLIPSIZE_MIDDLE" value="0x0080"/>
  <define name="wxSTB_ELLIPSIZE_END" value="0x0100"/>
  <define name="wxSTB_DEFAULT_STYLE" value="0x10130"/>
  <define name="wxSB_NORMAL" value="0x0000"/>
  <define name="wxSB_FLAT" value="0x0001"/>
  <define name="wxSB_RAISED" value="0x0002"/>
  <define name="wxSB_SUNKEN" value="0x0003"/>
  <define name="wxLC_ALIGN_LEFT" value="0x0080"/>
  <define name="wxLC_ALIGN_TOP" value="0x0040"/>
  <define name="wxLC_AUTOARRANGE" value="0x0100"/>
  <define name="wxLC_EDIT_LABELS" value="0x0400"/>
  <define name="wxLC_HRULES" value="0x0002"/>
  <define name="wxLC_ICON" value="0x0004"/>
  <define name="wxLC_LIST" value="0x0010"/>
  <define name="wxLC_MASK_ALIGN" value="0xC0"/>
  <define name="wxLC_MASK_SORT" value="0xC000"/>
  <define name="wxLC_MASK_TYPE" value="0x3C"/>
  <define name="wxLC_NO_HEADER" value="0x0800"/>
  <define name="wxLC_NO_SORT_HEADER" value="0x1000"/>
  <define name="wxLC_REPORT" value="0x0020"/>
  <define name="wxLC_SINGLE_SEL" value="0x2000"/>
  <define name="wxLC_SMALL_ICON" value="0x0008"/>
  <define name="wxLC_SORT_ASCENDING" value="0x4000"/>
  <define name="wxLC_SORT_DESCENDING" value="0x8000"/>
  <define name="wxLC_VIRTUAL" value="0x0200"/>
  <define name="wxLC_VRULES" value="0x0001"/>
  <define name="wxLIST_GETSUBITEMRECT_WHOLEITEM" value="-1"/>
  <define name="wxLIST_HITTEST_ABOVE" value="0x0001"/>
  <define name="wxLIST_HITTEST_BELOW" value="0x0002"/>
  <define name="wxLIST_HITTEST_NOWHERE" value="0x0004"/>
  <define name="wxLIST_HITTEST_ONITEM" value="0x2A0"/>
  <define name="wxLIST_HITTEST_ONITEMICON" value="0x0020"/>
  <define name="wxLIST_HITTEST_ONITEMLABEL" value="0x0080"/>
  <define name="wxLIST_HITTEST_ONITEMRIGHT" value="0x0100"/>
  <define name="wxLIST_HITTEST_ONITEMSTATEICON" value="0x0200"/>
  <define name="wxLIST_HITTEST_TOLEFT" value="0x0400"/>
  <define name="wxLIST_HITTEST_TORIGHT" value="0x0800"/>
  <define name="wxLIST_MASK_DATA" value="0x0008"/>
  <define name="wxLIST_MASK_FORMAT" value="0x0040"/>
  <define name="wxLIST_MASK_IMAGE" value="0x0004"/>
  <define name="wxLIST_MASK_STATE" value="0x0001"/>
  <define name="wxLIST_MASK_TEXT" value="0x0002"/>
  <define name="wxLIST_MASK_WIDTH" value="0x0020"/>
  <define name="wxLIST_SET_ITEM" value="0x0010"/>
  <define name="wxLIST_STATE_CUT" value="0x0008"/>
  <define name="wxLIST_STATE_DISABLED" value="0x0010"/>
  <define name="wxLIST_STATE_DONTCARE" value="0x0000"/>
  <define name="wxLIST_STATE_DROPHILITED" value="0x0001"/>
  <define name="wxLIST_STATE_FILTERED" value="0x0020"/>
  <define name="wxLIST_STATE_FOCUSED" value="0x0002"/>
  <define name="wxLIST_STATE_INUSE" value="0x0040"/>
  <define name="wxLIST_STATE_PICKED" value="0x0080"/>
  <define name="wxLIST_STATE_SELECTED" value="0x0004"/>
  <define name="wxLIST_STATE_SOURCE" value="0x0100"/>
  <define name="wxLIST_NEXT_ABOVE" value="0"/>
  <define name="wxLIST_NEXT_ALL" value="1"/>
  <define name="wxLIST_NEXT_BELOW" value="2"/>
  <define name="wxLIST_NEXT_LEFT" value="3"/>
  <define name="wxLIST_NEXT_RIGHT" value="4"/>
  <define name="wxLIST_ALIGN_DEFAULT" value="0"/>
  <define name="wxLIST_ALIGN_LEFT" value="1"/>
  <define name="wxLIST_ALIGN_TOP" value="2"/>
  <define name="wxLIST_ALIGN_SNAP_TO_GRID" value="3"/>
  <define name="wxLIST_AUTOSIZE" value="0"/>
  <define name="wxLIST_AUTOSIZE_USEHEADER" value="1"/>
  <define name="wxLIST_RECT_BOUNDS" value="0"/>
  <define name="wxLIST_RECT_ICON" value="1"/>
  <define name="wxLIST_RECT_LABEL" value="2"/>
  <define name="wxLIST_FIND_UP" value="0"/>
  <define name="wxLIST_FIND_DOWN" value="1"/>
  <define name="wxLIST_FIND_LEFT" value="2"/>
  <define name="wxLIST_FIND_RIGHT" value="3"/>
  <define name="wxLIST_FORMAT_LEFT" value="0"/>
  <define name="wxLIST_FORMAT_RIGHT" value="1"/>
  <define name="wxLIST_FORMAT_CENTRE" value="2"/>
  <define name="wxLIST_FORMAT_CENTER" value="3"/>
  <define name="wxCMD_LINE_OPTION_MANDATORY" value="0x01"/>
  <define name="wxCMD_LINE_PARAM_OPTIONAL" value="0x02"/>
  <define name="wxCMD_LINE_PARAM_MULTIPLE" value="0x04"/>
  <define name="wxCMD_LINE_OPTION_HELP" value="0x08"/>
  <define name="wxCMD_LINE_NEEDS_SEPARATOR" value="0x10"/>
  <define name="wxCMD_LINE_SWITCH_NEGATABLE" value="0x20"/>
  <define name="wxCMD_LINE_VAL_STRING" value="0"/>
  <define name="wxCMD_LINE_VAL_NUMBER" value="1"/>
  <define name="wxCMD_LINE_VAL_DATE" value="2"/>
  <define name="wxCMD_LINE_VAL_DOUBLE" value="3"/>
  <define name="wxCMD_LINE_VAL_NONE" value="4"/>
  <define name="wxCMD_LINE_SWITCH" value="0"/>
  <define name="wxCMD_LINE_OPTION" value="1"/>
  <define name="wxCMD_LINE_PARAM" value="2"/>
  <define name="wxCMD_LINE_USAGE_TEXT" value="3"/>
  <define name="wxCMD_LINE_NONE" value="4"/>
  <define name="wxCMD_LINE_SPLIT_DOS" value="0"/>
  <define name="wxCMD_LINE_SPLIT_UNIX" value="1"/>
  <define name="wxFILTER_NONE" value="0"/>
  <define name="wxFILTER_EMPTY" value="1"/>
  <define name="wxFILTER_ASCII" value="2"/>
  <define name="wxFILTER_ALPHA" value="0x4"/>
  <define name="wxFILTER_ALPHANUMERIC" value="0x8"/>
  <define name="wxFILTER_DIGITS" value="0x10"/>
  <define name="wxFILTER_NUMERIC" value="0x20"/>
  <define name="wxFILTER_INCLUDE_LIST" value="0x40"/>
  <define name="wxFILTER_INCLUDE_CHAR_LIST" value="0x80"/>
  <define name="wxFILTER_EXCLUDE_LIST" value="0x100"/>
  <define name="wxFILTER_EXCLUDE_CHAR_LIST" value="0x200"/>
  <define name="wxDD_CHANGE_DIR" value="0x0100"/>
  <define name="wxDD_DIR_MUST_EXIST" value="0x0200"/>
  <define name="wxDD_NEW_DIR_BUTTON" value="0"/>
  <define name="wxDD_DEFAULT_STYLE" value="0x20001840"/>
  <define name="WXGRID_DEFAULT_NUMBER_ROWS" value="10"/>
  <define name="WXGRID_DEFAULT_NUMBER_COLS" value="10"/>
  <define name="WXGRID_DEFAULT_ROW_HEIGHT" value="25"/>
  <define name="WXGRID_DEFAULT_COL_WIDTH" value="80"/>
  <define name="WXGRID_DEFAULT_COL_LABEL_HEIGHT" value="32"/>
  <define name="WXGRID_DEFAULT_ROW_LABEL_WIDTH" value="82"/>
  <define name="WXGRID_LABEL_EDGE_ZONE" value="2"/>
  <define name="WXGRID_MIN_ROW_HEIGHT" value="15"/>
  <define name="WXGRID_MIN_COL_WIDTH" value="15"/>
  <define name="WXGRID_DEFAULT_SCROLLBAR_WIDTH" value="16"/>
  <define name="wxGRID_VALUE_STRING" value="&quot;string&quot;"/>
  <define name="wxGRID_VALUE_BOOL" value="&quot;bool&quot;"/>
  <define name="wxGRID_VALUE_NUMBER" value="&quot;long&quot;"/>
  <define name="wxGRID_VALUE_FLOAT" value="&quot;double&quot;"/>
  <define name="wxGRID_VALUE_CHOICE" value="&quot;choice&quot;"/>
  <define name="wxGRID_VALUE_TEXT" value="&quot;string&quot;"/>
  <define name="wxGRID_VALUE_LONG" value="&quot;long&quot;"/>
  <define name="wxGRID_AUTOSIZE" value="-1"/>
  <define name="wxGRID_COLUMN" value="0"/>
  <define name="wxGRID_ROW" value="1"/>
  <define name="wxGRID_DRAW_ROWS_HEADER" value="0x001"/>
  <define name="wxGRID_DRAW_COLS_HEADER" value="0x002"/>
  <define name="wxGRID_DRAW_CELL_LINES" value="0x004"/>
  <define name="wxGRID_DRAW_BOX_RECT" value="0x008"/>
  <define name="wxGRID_DRAW_SELECTION" value="0x010"/>
  <define name="wxGRID_DRAW_DEFAULT" value="15"/>
  <define name="wxSafeIncRef(p)" value="if ( p ) (p)-&gt;IncRef()"/>
  <define name="wxSafeDecRef(p)" value="if ( p ) (p)-&gt;DecRef()"/>
  <define name="wxDV_SINGLE" value="0x0000"/>
  <define name="wxDV_MULTIPLE" value="0x0001"/>
  <define name="wxDV_NO_HEADER" value="0x0002"/>
  <define name="wxDV_HORIZ_RULES" value="0x0004"/>
  <define name="wxDV_VERT_RULES" value="0x0008"/>
  <define name="wxDV_ROW_LINES" value="0x0010"/>
  <define name="wxDV_VARIABLE_LINE_HEIGHT" value="0x0020"/>
  <define name="wxGA_PROGRESS" value="0x0010"/>
  <define name="wxGA_SMOOTH" value="0x0020"/>
  <define name="wxGA_TEXT" value="0x0040"/>
  <define name="wxGA_HORIZONTAL" value="4"/>
  <define name="wxGA_VERTICAL" value="8"/>
  <define name="wxITEM_SEPARATOR" value="-1"/>
  <define name="wxITEM_NORMAL" value="0"/>
  <define name="wxITEM_CHECK" value="0"/>
  <define name="wxITEM_RADIO" value="1"/>
  <define name="wxITEM_DROPDOWN" value="2"/>
  <define name="wxITEM_MAX" value="3"/>
  <define name="wxCHK_UNCHECKED" value="0"/>
  <define name="wxCHK_CHECKED" value="1"/>
  <define name="wxCHK_UNDETERMINED" value="2"/>
  <define name="wxFONTFAMILY_DEFAULT" value="70"/>
  <define name="wxFONTFAMILY_DECORATIVE" value="71"/>
  <define name="wxFONTFAMILY_ROMAN" value="72"/>
  <define name="wxFONTFAMILY_SCRIPT" value="73"/>
  <define name="wxFONTFAMILY_SWISS" value="74"/>
  <define name="wxFONTFAMILY_MODERN" value="75"/>
  <define name="wxFONTFAMILY_TELETYPE" value="76"/>
  <define name="wxFONTFAMILY_MAX" value="77"/>
  <define name="wxFONTFAMILY_UNKNOWN" value="77"/>
  <define name="wxFONTSTYLE_NORMAL" value="90"/>
  <define name="wxFONTSTYLE_ITALIC" value="93"/>
  <define name="wxFONTSTYLE_SLANT" value="94"/>
  <define name="wxFONTSTYLE_MAX" value="95"/>
  <define name="wxFONTWEIGHT_INVALID" value="0"/>
  <define name="wxFONTWEIGHT_THIN" value="100"/>
  <define name="wxFONTWEIGHT_EXTRALIGHT" value="200"/>
  <define name="wxFONTWEIGHT_LIGHT" value="300"/>
  <define name="wxFONTWEIGHT_NORMAL" value="400"/>
  <define name="wxFONTWEIGHT_MEDIUM" value="500"/>
  <define name="wxFONTWEIGHT_SEMIBOLD" value="600"/>
  <define name="wxFONTWEIGHT_BOLD" value="700"/>
  <define name="wxFONTWEIGHT_EXTRABOLD" value="800"/>
  <define name="wxFONTWEIGHT_HEAVY" value="900"/>
  <define name="wxFONTWEIGHT_EXTRAHEAVY" value="1000"/>
  <define name="wxFONTWEIGHT_MAX" value="1000"/>
  <define name="wxLayout_Default" value="0"/>
  <define name="wxLayout_LeftToRight" value="1"/>
  <define name="wxLayout_RightToLeft" value="2"/>
  <define name="wxLAYOUT_HORIZONTAL" value="0"/>
  <define name="wxLAYOUT_VERTICAL" value="1"/>
  <define name="wxLAYOUT_NONE" value="0"/>
  <define name="wxLAYOUT_TOP" value="1"/>
  <define name="wxLAYOUT_LEFT" value="2"/>
  <define name="wxLAYOUT_RIGHT" value="3"/>
  <define name="wxLAYOUT_BOTTOM" value="4"/>
  <define name="wxLAYOUT_LENGTH_Y" value="8"/>
  <define name="wxLAYOUT_LENGTH_X" value="0"/>
  <define name="wxLAYOUT_MRU_LENGTH" value="0x10"/>
  <define name="wxLAYOUT_QUERY" value="0x100"/>
  <define name="wxLOG_FatalError" value="0"/>
  <define name="wxLOG_Error" value="1"/>
  <define name="wxLOG_Warning" value="2"/>
  <define name="wxLOG_Message" value="3"/>
  <define name="wxLOG_Status" value="4"/>
  <define name="wxLOG_Info" value="5"/>
  <define name="wxLOG_Debug" value="6"/>
  <define name="wxLOG_Trace" value="7"/>
  <define name="wxLOG_Progress" value="8"/>
  <define name="wxLOG_User" value="100"/>
  <define name="wxLOG_Max" value="10000"/>
  <define name="wxPD_CAN_ABORT" value="0x0001"/>
  <define name="wxPD_APP_MODAL" value="0x0002"/>
  <define name="wxPD_AUTO_HIDE" value="0x0004"/>
  <define name="wxPD_ELAPSED_TIME" value="0x0008"/>
  <define name="wxPD_ESTIMATED_TIME" value="0x0010"/>
  <define name="wxPD_SMOOTH" value="0x0020"/>
  <define name="wxPD_REMAINING_TIME" value="0x0040"/>
  <define name="wxPD_CAN_SKIP" value="0x0080"/>
  <define name="wxOutOfRangeTextCoord" value="-1"/>
  <define name="wxInvalidTextCoord" value="-2"/>
  <define name="wxTE_NO_VSCROLL" value="0x0002"/>
  <define name="wxTE_READONLY" value="0x0010"/>
  <define name="wxTE_MULTILINE" value="0x0020"/>
  <define name="wxTE_LEFT" value="0x0000"/>
  <define name="wxTE_CENTER" value="0x0100"/>
  <define name="wxTE_RIGHT" value="0x0200"/>
  <define name="wxTE_CENTRE" value="0x0200"/>
  <define name="wxTE_RICH" value="0x080"/>
  <define name="wxTE_RICH2" value="0x08000"/>
  <define name="wxTE_PROCESS_ENTER" value="0x0400"/>
  <define name="wxTE_PROCESS_TAB" value="0x0040"/>
  <define name="wxTE_PASSWORD" value="0x0800"/>
  <define name="wxTE_AUTO_URL" value="0x1000"/>
  <define name="wxTE_NOHIDESEL" value="0x2000"/>
  <define name="wxTE_DONTWRAP" value="0x40000000"/>
  <define name="wxTE_CHARWRAP" value="0x4000"/>
  <define name="wxTE_WORDWRAP" value="0x0001"/>
  <define name="wxTE_BESTWRAP" value="0x0000"/>
  <define name="wxTE_AUTO_SCROLL" value="0"/>
  <define name="wxTE_CAPITALIZE" value="0"/>
  <define name="wxTEXT_TYPE_ANY" value="0"/>
  <define name="wxTE_HT_UNKNOWN" value="-2"/>
  <define name="wxTE_HT_BEFORE" value="-1"/>
  <define name="wxTE_HT_ON_TEXT" value="0"/>
  <define name="wxTE_HT_BELOW" value="1"/>
  <define name="wxTE_HT_BEYOND" value="2"/>
  <define name="wxTIMER_CONTINUOUS" value="false"/>
  <define name="wxTIMER_ONE_SHOT" value="true"/>
  <define name="wxEXEC_ASYNC" value="0"/>
  <define name="wxEXEC_SYNC" value="1"/>
  <define name="wxEXEC_SHOW_CONSOLE" value="2"/>
  <define name="wxEXEC_NOHIDE" value="2"/>
  <define name="wxEXEC_MAKE_GROUP_LEADER" value="3"/>
  <define name="wxEXEC_NODISABLE" value="8"/>
  <define name="wxEXEC_NOEVENTS" value="16"/>
  <define name="wxEXEC_HIDE_CONSOLE" value="32"/>
  <define name="wxEXEC_BLOCK" value="17"/>
  <define name="wxTEXT_ALIGNMENT_DEFAULT" value="0"/>
  <define name="wxTEXT_ALIGNMENT_LEFT" value="1"/>
  <define name="wxTEXT_ALIGNMENT_CENTRE" value="2"/>
  <define name="wxTEXT_ALIGNMENT_CENTER" value="2"/>
  <define name="wxTEXT_ALIGNMENT_RIGHT" value="3"/>
  <define name="wxTEXT_ALIGNMENT_JUSTIFIED" value="4"/>
  <define name="wxID_AUTO_LOWEST" value="-32000"/>
  <define name="wxID_AUTO_HIGHEST" value="-2000"/>
  <define name="wxID_NONE" value="-3"/>
  <define name="wxID_SEPARATOR" value="-2"/>
  <define name="wxID_ANY" value="-1"/>
  <define name="wxID_LOWEST" value="4999"/>
  <define name="wxID_OPEN" value="5000"/>
  <define name="wxID_CLOSE" value="5001"/>
  <define name="wxID_NEW" value="5002"/>
  <define name="wxID_SAVE" value="5003"/>
  <define name="wxID_SAVEAS" value="5004"/>
  <define name="wxID_REVERT" value="5005"/>
  <define name="wxID_EXIT" value="5006"/>
  <define name="wxID_UNDO" value="5007"/>
  <define name="wxID_REDO" value="5008"/>
  <define name="wxID_HELP" value="5009"/>
  <define name="wxID_PRINT" value="5010"/>
  <define name="wxID_PRINT_SETUP" value="5011"/>
  <define name="wxID_PAGE_SETUP" value="5012"/>
  <define name="wxID_PREVIEW" value="5013"/>
  <define name="wxID_ABOUT" value="5014"/>
  <define name="wxID_HELP_CONTENTS" value="5015"/>
  <define name="wxID_HELP_INDEX" value="5016"/>
  <define name="wxID_HELP_SEARCH" value="5017"/>
  <define name="wxID_HELP_COMMANDS" value="5018"/>
  <define name="wxID_HELP_PROCEDURES" value="5019"/>
  <define name="wxID_HELP_CONTEXT" value="5020"/>
  <define name="wxID_CLOSE_ALL" value="5021"/>
  <define name="wxID_PREFERENCES" value="5021"/>
  <define name="wxID_EDIT" value="5030"/>
  <define name="wxID_CUT" value="5031"/>
  <define name="wxID_COPY" value="5032"/>
  <define name="wxID_PASTE" value="5033"/>
  <define name="wxID_CLEAR" value="5034"/>
  <define name="wxID_FIND" value="5035"/>
  <define name="wxID_DUPLICATE" value="5036"/>
  <define name="wxID_SELECTALL" value="5037"/>
  <define name="wxID_DELETE" value="5038"/>
  <define name="wxID_REPLACE" value="5039"/>
  <define name="wxID_REPLACE_ALL" value="5040"/>
  <define name="wxID_PROPERTIES" value="5041"/>
  <define name="wxID_VIEW_DETAILS" value="5042"/>
  <define name="wxID_VIEW_LARGEICONS" value="5043"/>
  <define name="wxID_VIEW_SMALLICONS" value="5044"/>
  <define name="wxID_VIEW_LIST" value="5045"/>
  <define name="wxID_VIEW_SORTDATE" value="5046"/>
  <define name="wxID_VIEW_SORTNAME" value="5047"/>
  <define name="wxID_VIEW_SORTSIZE" value="5048"/>
  <define name="wxID_VIEW_SORTTYPE" value="5049"/>
  <define name="wxID_FILE" value="5050"/>
  <define name="wxID_FILE1" value="5051"/>
  <define name="wxID_FILE2" value="5052"/>
  <define name="wxID_FILE3" value="5053"/>
  <define name="wxID_FILE4" value="5054"/>
  <define name="wxID_FILE5" value="5055"/>
  <define name="wxID_FILE6" value="5056"/>
  <define name="wxID_FILE7" value="5057"/>
  <define name="wxID_FILE8" value="5058"/>
  <define name="wxID_FILE9" value="5059"/>
  <define name="wxTOKEN_INVALID" value="-1"/>
  <define name="wxTOKEN_DEFAULT" value="0"/>
  <define name="wxTOKEN_RET_EMPTY" value="1"/>
  <define name="wxTOKEN_RET_EMPTY_ALL" value="2"/>
  <define name="wxTOKEN_RET_DELIMS" value="3"/>
  <define name="wxTOKEN_STRTOK" value="4"/>
  <define name="wxDEFAULT_DELIMITERS" value="&quot;\t\r\n&quot;"/>
  <define name="wxBRUSHSTYLE_INVALID" value="-1"/>
  <define name="wxBRUSHSTYLE_SOLID" value="100"/>
  <define name="wxBRUSHSTYLE_TRANSPARENT" value="106"/>
  <define name="wxBRUSHSTYLE_STIPPLE_MASK_OPAQUE" value="107"/>
  <define name="wxBRUSHSTYLE_STIPPLE_MASK" value="108"/>
  <define name="wxBRUSHSTYLE_STIPPLE" value="110"/>
  <define name="wxBRUSHSTYLE_BDIAGONAL_HATCH" value="111"/>
  <define name="wxBRUSHSTYLE_CROSSDIAG_HATCH" value="112"/>
  <define name="wxBRUSHSTYLE_FDIAGONAL_HATCH" value="113"/>
  <define name="wxBRUSHSTYLE_CROSS_HATCH" value="114"/>
  <define name="wxBRUSHSTYLE_HORIZONTAL_HATCH" value="115"/>
  <define name="wxBRUSHSTYLE_VERTICAL_HATCH" value="116"/>
  <define name="wxBRUSHSTYLE_FIRST_HATCH" value="111"/>
  <define name="wxBRUSHSTYLE_LAST_HATCH" value="116"/>
  <define name="wxTB_HORIZONTAL" value="0x0004"/>
  <define name="wxTB_TOP" value="0x0004"/>
  <define name="wxTB_VERTICAL" value="0x0008"/>
  <define name="wxTB_LEFT" value="0x0008"/>
  <define name="wxTB_FLAT" value="0x0020"/>
  <define name="wxTB_DOCKABLE" value="0x0040"/>
  <define name="wxTB_NOICONS" value="0x0080"/>
  <define name="wxTB_TEXT" value="0x0100"/>
  <define name="wxTB_NODIVIDER" value="0x0200"/>
  <define name="wxTB_NOALIGN" value="0x0400"/>
  <define name="wxTB_HORZ_LAYOUT" value="0x0800"/>
  <define name="wxTB_HORZ_TEXT" value="2304"/>
  <define name="wxTB_NO_TOOLTIPS" value="0x1000"/>
  <define name="wxTB_BOTTOM" value="0x2000"/>
  <define name="wxTB_RIGHT" value="0x4000"/>
  <define name="wxTB_DEFAULT_STYLE" value="0x0004"/>
  <!-- Start of standard button and menu IDs -->
  <define name="wxSYS_COLOUR_SCROLLBAR" value="0"/>
  <define name="wxSYS_COLOUR_DESKTOP" value="1"/>
  <define name="wxSYS_COLOUR_ACTIVECAPTION" value="2"/>
  <define name="wxSYS_COLOUR_INACTIVECAPTION" value="3"/>
  <define name="wxSYS_COLOUR_MENU" value="4"/>
  <define name="wxSYS_COLOUR_WINDOW" value="5"/>
  <define name="wxSYS_COLOUR_WINDOWFRAME" value="6"/>
  <define name="wxSYS_COLOUR_MENUTEXT" value="7"/>
  <define name="wxSYS_COLOUR_WINDOWTEXT" value="8"/>
  <define name="wxSYS_COLOUR_CAPTIONTEXT" value="9"/>
  <define name="wxSYS_COLOUR_ACTIVEBORDER" value="10"/>
  <define name="wxSYS_COLOUR_INACTIVEBORDER" value="11"/>
  <define name="wxSYS_COLOUR_APPWORKSPACE" value="12"/>
  <define name="wxSYS_COLOUR_HIGHLIGHT" value="13"/>
  <define name="wxSYS_COLOUR_HIGHLIGHTTEXT" value="14"/>
  <define name="wxSYS_COLOUR_BTNFACE" value="15"/>
  <define name="wxSYS_COLOUR_BTNSHADOW" value="16"/>
  <define name="wxSYS_COLOUR_GRAYTEXT" value="17"/>
  <define name="wxSYS_COLOUR_BTNTEXT" value="18"/>
  <define name="wxSYS_COLOUR_INACTIVECAPTIONTEXT" value="19"/>
  <define name="wxSYS_COLOUR_BTNHIGHLIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DDKSHADOW" value="21"/>
  <define name="wxSYS_COLOUR_3DLIGHT" value="22"/>
  <define name="wxSYS_COLOUR_INFOTEXT" value="23"/>
  <define name="wxSYS_COLOUR_INFOBK" value="24"/>
  <define name="wxSYS_COLOUR_LISTBOX" value="25"/>
  <define name="wxSYS_COLOUR_HOTLIGHT" value="26"/>
  <define name="wxSYS_COLOUR_GRADIENTACTIVECAPTION" value="27"/>
  <define name="wxSYS_COLOUR_GRADIENTINACTIVECAPTION" value="28"/>
  <define name="wxSYS_COLOUR_MENUHILIGHT" value="29"/>
  <define name="wxSYS_COLOUR_MENUBAR" value="30"/>
  <define name="wxSYS_COLOUR_LISTBOXTEXT" value="31"/>
  <define name="wxSYS_COLOUR_LISTBOXHIGHLIGHTTEXT" value="32"/>
  <define name="wxSYS_COLOUR_MAX" value="33"/>
  <define name="wxSYS_COLOUR_BACKGROUND" value="15"/>
  <define name="wxSYS_COLOUR_3DFACE" value="15"/>
  <define name="wxSYS_COLOUR_3DSHADOW" value="16"/>
  <define name="wxSYS_COLOUR_BTNHILIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DHIGHLIGHT" value="20"/>
  <define name="wxSYS_COLOUR_3DHILIGHT" value="20"/>
  <define name="wxSYS_COLOUR_FRAMEBK" value="15"/>
  <define name="wxID_OK" value="5100"/>
  <define name="wxID_CANCEL" value="5101"/>
  <define name="wxID_APPLY" value="5102"/>
  <define name="wxID_YES" value="5103"/>
  <define name="wxID_NO" value="5104"/>
  <define name="wxID_STATIC" value="5105"/>
  <define name="wxID_FORWARD" value="5106"/>
  <define name="wxID_BACKWARD" value="5107"/>
  <define name="wxID_DEFAULT" value="5108"/>
  <define name="wxID_MORE" value="5109"/>
  <define name="wxID_SETUP" value="5110"/>
  <define name="wxID_RESET" value="5111"/>
  <define name="wxID_CONTEXT_HELP" value="5112"/>
  <define name="wxID_YESTOALL" value="5113"/>
  <define name="wxID_NOTOALL" value="5114"/>
  <define name="wxID_ABORT" value="5115"/>
  <define name="wxID_RETRY" value="5116"/>
  <define name="wxID_IGNORE" value="5117"/>
  <define name="wxID_ADD" value="5118"/>
  <define name="wxID_REMOVE" value="5119"/>
  <define name="wxID_UP" value="5120"/>
  <define name="wxID_DOWN" value="5121"/>
  <define name="wxID_HOME" value="5122"/>
  <define name="wxID_REFRESH" value="5123"/>
  <define name="wxID_STOP" value="5124"/>
  <define name="wxID_INDEX" value="5125"/>
  <define name="wxID_BOLD" value="5126"/>
  <define name="wxID_ITALIC" value="5127"/>
  <define name="wxID_JUSTIFY_CENTER" value="5128"/>
  <define name="wxID_JUSTIFY_FILL" value="5129"/>
  <define name="wxID_JUSTIFY_RIGHT" value="5130"/>
  <define name="wxID_JUSTIFY_LEFT" value="5131"/>
  <define name="wxID_UNDERLINE" value="5132"/>
  <define name="wxID_INDENT" value="5133"/>
  <define name="wxID_UNINDENT" value="5134"/>
  <define name="wxID_ZOOM_100" value="5135"/>
  <define name="wxID_ZOOM_FIT" value="5136"/>
  <define name="wxID_ZOOM_IN" value="5137"/>
  <define name="wxID_ZOOM_OUT" value="5138"/>
  <define name="wxID_UNDELETE" value="5139"/>
  <define name="wxID_REVERT_TO_SAVED" value="5140"/>
  <define name="wxID_CDROM" value="5141"/>
  <define name="wxID_CONVERT" value="5142"/>
  <define name="wxID_EXECUTE" value="5143"/>
  <define name="wxID_FLOPPY" value="5144"/>
  <define name="wxID_HARDDISK" value="5145"/>
  <define name="wxID_BOTTOM" value="5146"/>
  <define name="wxID_FIRST" value="5147"/>
  <define name="wxID_LAST" value="5148"/>
  <define name="wxID_TOP" value="5149"/>
  <define name="wxID_INFO" value="5150"/>
  <define name="wxID_JUMP_TO" value="5151"/>
  <define name="wxID_NETWORK" value="5152"/>
  <define name="wxID_SELECT_COLOR" value="5153"/>
  <define name="wxID_SELECT_FONT" value="5154"/>
  <define name="wxID_SORT_ASCENDING" value="5155"/>
  <define name="wxID_SORT_DESCENDING" value="5156"/>
  <define name="wxID_SPELL_CHECK" value="5157"/>
  <define name="wxID_STRIKETHROUGH" value="5158"/>
  <define name="wxID_SYSTEM_MENU" value="5200"/>
  <define name="wxID_CLOSE_FRAME" value="5201"/>
  <define name="wxID_MOVE_FRAME" value="5202"/>
  <define name="wxID_RESIZE_FRAME" value="5203"/>
  <define name="wxID_MAXIMIZE_FRAME" value="5204"/>
  <define name="wxID_ICONIZE_FRAME" value="5205"/>
  <define name="wxID_RESTORE_FRAME" value="5205"/>
  <define name="wxID_MDI_WINDOW_FIRST" value="5230"/>
  <define name="wxID_MDI_WINDOW_CASCADE" value="5230"/>
  <define name="wxID_MDI_WINDOW_TILE_HORZ" value="5231"/>
  <define name="wxID_MDI_WINDOW_TILE_VERT" value="5231"/>
  <define name="wxID_MDI_WINDOW_ARRANGE_ICONS" value="5232"/>
  <define name="wxID_MDI_WINDOW_PREV" value="5233"/>
  <define name="wxID_MDI_WINDOW_NEXT" value="5234"/>
  <define name="wxID_MDI_WINDOW_LAST" value="5234"/>
  <define name="wxID_OSX_MENU_FIRST" value="5250"/>
  <define name="wxID_OSX_HIDE" value="5250"/>
  <define name="wxID_OSX_HIDEOTHERS" value="5251"/>
  <define name="wxID_OSX_SHOWALL" value="5252"/>
  <define name="wxID_OSX_SERVICES" value="5253"/>
  <define name="wxID_OSX_MENU_LAST" value="5253"/>
  <define name="wxID_FILEDLGG" value="5900"/>
  <define name="wxID_FILECTRL" value="5950"/>
  <define name="wxID_HIGHEST" value="5999"/>
  <!-- End of standard button and menu IDs -->
  <define name="wxNB_HITTEST_NOWHERE" value="1"/>
  <define name="wxNB_HITTEST_ONICON" value="2"/>
  <define name="wxNB_HITTEST_ONLABEL" value="3"/>
  <define name="wxNB_HITTEST_ONITEM" value="4"/>
  <define name="wxNB_HITTEST_ONPAGE" value="5"/>
  <define name="wxNB_DEFAULT" value="0"/>
  <define name="wxNB_TOP" value="0x10"/>
  <define name="wxNB_BOTTOM" value="0x20"/>
  <define name="wxNB_LEFT" value="0x40"/>
  <define name="wxNB_RIGHT" value="0x80"/>
  <define name="wxNB_FIXEDWIDTH" value="0x100"/>
  <define name="wxNB_MULTILINE" value="0x200"/>
  <define name="wxNB_NOPAGETHEME" value="0x400"/>
  <define name="wxBK_DEFAULT" value="0"/>
  <define name="wxBK_TOP" value="0x10"/>
  <define name="wxBK_BOTTOM" value="0x20"/>
  <define name="wxBK_LEFT" value="0x40"/>
  <define name="wxBK_RIGHT" value="0x80"/>
  <define name="wxBK_ALIGN_MASK" value="0xF0"/>
  <define name="wxBK_HITTEST_NOWHERE" value="1"/>
  <define name="wxBK_HITTEST_ONICON" value="2"/>
  <define name="wxBK_HITTEST_ONLABEL" value="3"/>
  <define name="wxBK_HITTEST_ONITEM" value="4"/>
  <define name="wxBK_HITTEST_ONPAGE" value="5"/>
  <define name="wxCMD_LINE_OPTION_MANDATORY" value="0x01"/>
  <define name="wxCMD_LINE_PARAM_OPTIONAL" value="0x02"/>
  <define name="wxCMD_LINE_PARAM_MULTIPLE" value="0x04"/>
  <define name="wxCMD_LINE_OPTION_HELP" value="0x08"/>
  <define name="wxCMD_LINE_NEEDS_SEPARATOR" value="0x10"/>
  <define name="wxCMD_LINE_SWITCH_NEGATABLE" value="0x20"/>
  <define name="wxCMD_LINE_HIDDEN" value="0x40"/>
  <define name="wxCMD_LINE_VAL_STRING" value="0"/>
  <define name="wxCMD_LINE_VAL_NUMBER" value="1"/>
  <define name="wxCMD_LINE_VAL_DATE" value="2"/>
  <define name="wxCMD_LINE_VAL_DOUBLE" value="3"/>
  <define name="wxCMD_LINE_VAL_NONE" value="4"/>
  <define name="wxCMD_LINE_SWITCH" value="0"/>
  <define name="wxCMD_LINE_OPTION" value="1"/>
  <define name="wxCMD_LINE_PARAM" value="2"/>
  <define name="wxCMD_LINE_USAGE_TEXT" value="3"/>
  <define name="wxCMD_LINE_NONE" value="4"/>
  <define name="wxCMD_SWITCH_OFF" value="-1"/>
  <define name="wxCMD_SWITCH_NOT_FOUND" value="0"/>
  <define name="wxCMD_SWITCH_ON" value="1"/>
  <!-- Start of wxPropertygrid defines -->
  <define name="wxDIALOG_ADAPTATION_MODE_DEFAULT" value="0"/>
  <define name="wxDIALOG_ADAPTATION_MODE_ENABLED" value="1"/>
  <define name="wxDIALOG_ADAPTATION_MODE_DISABLED" value="2"/>
  <define name="wxDIALOG_NO_PARENT" value="0x20"/>
  <define name="wxDIALOG_ADAPTATION_NONE" value="0"/>
  <define name="wxDIALOG_ADAPTATION_STANDARD_SIZER" value="1"/>
  <define name="wxDIALOG_ADAPTATION_ANY_SIZER" value="2"/>
  <define name="wxDIALOG_ADAPTATION_LOOSE_BUTTONS" value="3"/>
  <define name="wxDIALOG_MODALITY_NONE" value="0"/>
  <define name="wxDIALOG_MODALITY_WINDOW_MODAL" value="1"/>
  <define name="wxDIALOG_MODALITY_APP_MODAL" value="2"/>
  <define name="wxDEFAULT_DIALOG_STYLE" value="0x20001800"/>
  <define name="wxLOCALE_THOUSANDS_SEP" value="0"/>
  <define name="wxLOCALE_DECIMAL_POINT" value="1"/>
  <define name="wxLOCALE_SHORT_DATE_FMT" value="2"/>
  <define name="wxLOCALE_LONG_DATE_FMT" value="3"/>
  <define name="wxLOCALE_DATE_TIME_FMT" value="4"/>
  <define name="wxLOCALE_TIME_FMT" value="5"/>
  <define name="wxLOCALE_CAT_NUMBER" value="0"/>
  <define name="wxLOCALE_CAT_DATE" value="1"/>
  <define name="wxLOCALE_CAT_MONEY" value="2"/>
  <define name="wxLOCALE_CAT_DEFAULT" value="3"/>
  <define name="wxLOCALE_CAT_MAX" value="4"/>
  <define name="wxLOCALE_DONT_LOAD_DEFAULT" value="0"/>
  <define name="wxLOCALE_LOAD_DEFAULT" value="1"/>
  <define name="wxLOCALE_CONV_ENCODING" value="2"/>
  <define name="wxPATH_NATIVE" value="0"/>
  <define name="wxPATH_UNIX" value="1"/>
  <define name="wxPATH_BEOS" value="1"/>
  <define name="wxPATH_MAC" value="2"/>
  <define name="wxPATH_DOS" value="3"/>
  <define name="wxPATH_WIN" value="3"/>
  <define name="wxPATH_OS2" value="3"/>
  <define name="wxPATH_VMS" value="4"/>
  <define name="wxPATH_MAX" value="5"/>
  <define name="wxSIZE_CONV_TRADITIONAL" value="0"/>
  <define name="wxSIZE_CONV_IEC" value="1"/>
  <define name="wxSIZE_CONV_SI" value="2"/>
  <define name="wxPATH_NORM_ENV_VARS" value="0x0001"/>
  <define name="wxPATH_NORM_DOTS" value="0x0002"/>
  <define name="wxPATH_NORM_TILDE" value="0x0004"/>
  <define name="wxPATH_NORM_CASE" value="0x0008"/>
  <define name="wxPATH_NORM_ABSOLUTE" value="0x0010"/>
  <define name="wxPATH_NORM_LONG" value="0x0020"/>
  <define name="wxPATH_NORM_SHORTCUT" value="0x0040"/>
  <define name="wxPATH_NORM_ALL" value="247"/>
  <define name="wxPATH_NO_SEPARATOR" value="0"/>
  <define name="wxPATH_GET_VOLUME" value="1"/>
  <define name="wxPATH_GET_SEPARATOR" value="2"/>
  <define name="wxPATH_MKDIR_FULL" value="1"/>
  <define name="wxPATH_RMDIR_FULL" value="1"/>
  <define name="wxPATH_RMDIR_RECURSIVE" value="2"/>
  <define name="wxFILE_EXISTS_REGULAR" value="1"/>
  <define name="wxFILE_EXISTS_DIR" value="2"/>
  <define name="wxFILE_EXISTS_SYMLINK" value="0x1004"/>
  <define name="wxFILE_EXISTS_DEVICE" value="0x0008"/>
  <define name="wxFILE_EXISTS_FIFO" value="0x0010"/>
  <define name="wxFILE_EXISTS_SOCKET" value="0x0020"/>
  <define name="wxFILE_EXISTS_NO_FOLLOW" value="0x1000"/>
  <define name="wxFILE_EXISTS_ANY" value="0x1FFF"/>
  <define name="wxFILE_KIND_UNKNOWN" value="0"/>
  <define name="wxFILE_KIND_DISK" value="1"/>
  <define name="wxFILE_KIND_TERMINAL" value="2"/>
  <define name="wxFILE_KIND_PIPE" value="3"/>
  <define name="wxPG_ITERATOR_CREATE_MASKS(FLAGS,A,B)" value="{ A = (FLAGS ^ 29732) &amp; 29732 &amp; 0xFFFF; B = ((FLAGS&lt;&lt;16) ^ 29732) &amp; 29732 &amp; 0xFFFF; }"/>
  <define name="wxPG_ITERATOR_PARENTEXMASK_TEST(PWC,PARENTMASK)" value="( !PWC-&gt;HasFlag(PARENTMASK) &amp;&amp; PWC-&gt;GetChildCount() )"/>
  <define name="wxPG_IT_CHILDREN(A)" value="((A)&lt;&lt;16)"/>
  <define name="wxPG_XBEFORETEXT" value="4"/>
  <define name="wxPG_VFB_STAY_IN_PROPERTY" value="0x01"/>
  <define name="wxPG_VFB_BEEP" value="0x02"/>
  <define name="wxPG_VFB_MARK_CELL" value="0x04"/>
  <define name="wxPG_VFB_SHOW_MESSAGE" value="0x08"/>
  <define name="wxPG_VFB_SHOW_MESSAGEBOX" value="0x10"/>
  <define name="wxPG_VFB_SHOW_MESSAGE_ON_STATUSBAR" value="0x20"/>
  <define name="wxPG_VFB_DEFAULT" value="20"/>
  <define name="wxPG_VFB_UNDEFINED" value="0x80"/>
  <define name="wxPG_ACTION_INVALID" value="0"/>
  <define name="wxPG_ACTION_NEXT_PROPERTY" value="1"/>
  <define name="wxPG_ACTION_PREV_PROPERTY" value="2"/>
  <define name="wxPG_ACTION_EXPAND_PROPERTY" value="3"/>
  <define name="wxPG_ACTION_COLLAPSE_PROPERTY" value="4"/>
  <define name="wxPG_ACTION_CANCEL_EDIT" value="5"/>
  <define name="wxPG_ACTION_EDIT" value="6"/>
  <define name="wxPG_ACTION_PRESS_BUTTON" value="7"/>
  <define name="wxPG_ACTION_MAX" value="8"/>
  <define name="wxPG_SEL_FOCUS" value="0x0001"/>
  <define name="wxPG_SEL_FORCE" value="0x0002"/>
  <define name="wxPG_SEL_NONVISIBLE" value="0x0004"/>
  <define name="wxPG_SEL_NOVALIDATE" value="0x0008"/>
  <define name="wxPG_SEL_DELETING" value="0x0010"/>
  <define name="wxPG_SEL_SETUNSPEC" value="0x0020"/>
  <define name="wxPG_SEL_DIALOGVAL" value="0x0040"/>
  <define name="wxPG_SEL_DONT_SEND_EVENT" value="0x0080"/>
  <define name="wxPG_SEL_NO_REFRESH" value="0x0100"/>
  <define name="wxPG_SPLITTER_REFRESH" value="0x0001"/>
  <define name="wxPG_SPLITTER_ALL_PAGES" value="0x0002"/>
  <define name="wxPG_SPLITTER_FROM_EVENT" value="0x0004"/>
  <define name="wxPG_SPLITTER_FROM_AUTO_CENTER" value="0x0008"/>
  <define name="wxPG_FL_INITIALIZED" value="0x0001"/>
  <define name="wxPG_FL_ACTIVATION_BY_CLICK" value="0x0002"/>
  <define name="wxPG_FL_DONT_CENTER_SPLITTER" value="0x0004"/>
  <define name="wxPG_FL_FOCUSED" value="0x0008"/>
  <define name="wxPG_FL_MOUSE_CAPTURED" value="0x0010"/>
  <define name="wxPG_FL_MOUSE_INSIDE" value="0x0020"/>
  <define name="wxPG_FL_VALUE_MODIFIED" value="0x0040"/>
  <define name="wxPG_FL_PRIMARY_FILLS_ENTIRE" value="0x0080"/>
  <define name="wxPG_FL_CUR_USES_CUSTOM_IMAGE" value="0x0100"/>
  <define name="wxPG_FL_CELL_OVERRIDES_SEL" value="0x0200"/>
  <define name="wxPG_FL_SCROLLED" value="0x0400"/>
  <define name="wxPG_FL_ADDING_HIDEABLES" value="0x0800"/>
  <define name="wxPG_FL_NOSTATUSBARHELP" value="0x1000"/>
  <define name="wxPG_FL_CREATEDSTATE" value="0x2000"/>
  <define name="wxPG_FL_DESC_REFRESH_REQUIRED" value="0x8000"/>
  <define name="wxPG_FL_IN_MANAGER" value="0x00020000"/>
  <define name="wxPG_FL_GOOD_SIZE_SET" value="0x00040000"/>
  <define name="wxPG_FL_IN_SELECT_PROPERTY" value="0x00100000"/>
  <define name="wxPG_FL_STRING_IN_STATUSBAR" value="0x00200000"/>
  <define name="wxPG_FL_CATMODE_AUTO_SORT" value="0x01000000"/>
  <define name="wxPG_MAN_FL_PAGE_INSERTED" value="0x02000000"/>
  <define name="wxPG_FL_ABNORMAL_EDITOR" value="0x04000000"/>
  <define name="wxPG_FL_IN_HANDLECUSTOMEDITOREVENT" value="0x08000000"/>
  <define name="wxPG_FL_VALUE_CHANGE_IN_EVENT" value="0x10000000"/>
  <define name="wxPG_FL_FIXED_WIDTH_EDITOR" value="0x20000000"/>
  <define name="wxPG_FL_HAS_VIRTUAL_WIDTH" value="0x40000000"/>
  <define name="wxPG_FL_RECALCULATING_VIRTUAL_SIZE" value="0x80000000"/>
  <define name="wxPG_ITERATE_PROPERTIES" value="1610634272"/>
  <define name="wxPG_ITERATE_HIDDEN" value="2097156"/>
  <define name="wxPG_ITERATE_FIXED_CHILDREN" value="1677743136"/>
  <define name="wxPG_ITERATE_CATEGORIES" value="536879136"/>
  <define name="wxPG_ITERATE_ALL_PARENTS" value="25600"/>
  <define name="wxPG_ITERATE_ALL_PARENTS_RECURSIVELY" value="1677747200"/>
  <define name="wxPG_ITERATOR_FLAGS_ALL" value="29732"/>
  <define name="wxPG_ITERATOR_MASK_OP_ITEM" value="29732"/>
  <define name="wxPG_ITERATOR_MASK_OP_PARENT" value="29732"/>
  <define name="wxPG_ITERATE_VISIBLE" value="1677751328"/>
  <define name="wxPG_ITERATE_ALL" value="1679848484"/>
  <define name="wxPG_ITERATE_NORMAL" value="1612731428"/>
  <define name="wxPG_ITERATE_DEFAULT" value="1612731428"/>
  <define name="wxPG_DEFAULT_STYLE" value="0"/>
  <define name="wxPG_LABEL" value="(*wxPGProperty::sm_wxPG_LABEL)"/>
  <define name="wxPG_ATTR_AUTOCOMPLETE" value="AutoComplete"/>
  <define name="wxPG_BOOL_USE_CHECKBOX" value="UseCheckbox"/>
  <define name="wxPG_BOOL_USE_DOUBLE_CLICK_CYCLING" value="UseDClickCycling"/>
  <define name="wxPG_FLOAT_PRECISION" value="Precision"/>
  <define name="wxPG_STRING_PASSWORD" value="Password"/>
  <define name="wxPG_UINT_BASE" value="Base"/>
  <define name="wxPG_UINT_PREFIX" value="Prefix"/>
  <define name="wxPG_FILE_WILDCARD" value="&quot;Wildcard&quot;"/>
  <define name="wxPG_ATTR_UNITS" value="wxPGGlobalVars-&gt;m_strUnits"/>
  <define name="wxPGMAN_DEFAULT_STYLE" value="0"/>
  <define name="wxPG_AUTO_SORT" value="0x10"/>
  <define name="wxPG_HIDE_CATEGORIES" value="0x20"/>
  <define name="wxPG_ALPHABETIC_MODE" value="48"/>
  <define name="wxPG_BOLD_MODIFIED" value="0x40"/>
  <define name="wxPG_SPLITTER_AUTO_CENTER" value="0x80"/>
  <define name="wxPG_TOOLTIPS" value="0x100"/>
  <define name="wxPG_HIDE_MARGIN" value="0x200"/>
  <define name="wxPG_STATIC_SPLITTER" value="0x400"/>
  <define name="wxPG_STATIC_LAYOUT" value="1536"/>
  <define name="wxPG_LIMITED_EDITING" value="0x800"/>
  <define name="wxPG_DESCRIPTION" value="0x2000"/>
  <define name="wxPG_NO_INTERNAL_BORDER" value="0x4000"/>
  <define name="wxPG_WINDOW_STYLE_MASK" value="32752"/>
  <define name="wxPG_THEME_BORDER" value="0"/>
  <define name="wxPG_EX_INIT_NOCAT" value="0x1000"/>
  <define name="wxPG_EX_NO_FLAT_TOOLBAR" value="0x2000"/>
  <define name="wxPG_EX_MODE_BUTTONS" value="0x8000"/>
  <define name="wxPG_EX_HELP_AS_TOOLTIPS" value="0x00010000"/>
  <define name="wxPG_EX_NO_TAB_TO_BUTTON" value="0x00020000"/>
  <define name="wxPG_EX_NATIVE_DOUBLE_BUFFERING" value="0x00080000"/>
  <define name="wxPG_EX_AUTO_UNSPECIFIED_VALUES" value="0x00200000"/>
  <define name="wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES" value="0x00400000"/>
  <define name="wxPG_EX_HIDE_PAGE_BUTTONS" value="0x01000000"/>
  <define name="wxPG_EX_MULTIPLE_SELECTION" value="0x02000000"/>
  <define name="wxPG_EX_ENABLE_TLP_TRACKING" value="0x04000000"/>
  <define name="wxPG_EX_NO_TOOLBAR_DIVIDER" value="0x08000000"/>
  <define name="wxPG_EX_TOOLBAR_SEPARATOR" value="0x10000000"/>
  <define name="wxPG_EX_ALWAYS_ALLOW_FOCUS" value="0x00100000"/>
  <define name="wxPG_EX_WINDOW_PG_STYLE_MASK" value="108597248"/>
  <define name="wxPG_EX_WINDOW_PGMAN_STYLE_MASK" value="419471360"/>
  <define name="wxPG_EX_WINDOW_STYLE_MASK" value="528068608"/>
  <define name="wxPG_EX_DISABLE_TLP_TRACKING" value="0"/>
  <define name="wxPG_VFB_STAY_IN_PROPERTY" value="0x01"/>
  <define name="wxPG_VFB_BEEP" value="0x02"/>
  <define name="wxPG_VFB_MARK_CELL" value="0x04"/>
  <define name="wxPG_VFB_SHOW_MESSAGE" value="0x08"/>
  <define name="wxPG_VFB_SHOW_MESSAGEBOX" value="0x10"/>
  <define name="wxPG_VFB_SHOW_MESSAGE_ON_STATUSBAR" value="0x20"/>
  <define name="wxPG_VFB_DEFAULT" value="20"/>
  <define name="wxPG_VFB_UNDEFINED" value="0x80"/>
  <define name="wxPGVFBFlags" value="unsigned char"/>
  <define name="wxTL_SINGLE" value="0x0000"/>
  <define name="wxTL_MULTIPLE" value="0x0001"/>
  <define name="wxTL_CHECKBOX" value="0x0002"/>
  <define name="wxTL_3STATE" value="0x0004"/>
  <define name="wxTL_USER_3STATE" value="0x0008"/>
  <define name="wxTL_NO_HEADER" value="0x0010"/>
  <define name="wxTL_DEFAULT_STYLE" value="0x0000"/>
  <define name="wxTL_STYLE_MASK" value="1"/>
  <define name="wxNUM_VAL_DEFAULT" value="0x00"/>
  <define name="wxNUM_VAL_THOUSANDS_SEPARATOR" value="0x01"/>
  <define name="wxNUM_VAL_ZERO_AS_BLANK" value="0x02"/>
  <define name="wxNUM_VAL_NO_TRAILING_ZEROES" value="0x04"/>
  <define name="wxFD_OPEN" value="0x0001"/>
  <define name="wxFD_SAVE" value="0x0002"/>
  <define name="wxFD_OVERWRITE_PROMPT" value="0x0004"/>
  <define name="wxFD_NO_FOLLOW" value="0x0008"/>
  <define name="wxFD_FILE_MUST_EXIST" value="0x0010"/>
  <define name="wxFD_CHANGE_DIR" value="0x0080"/>
  <define name="wxFD_PREVIEW" value="0x0100"/>
  <define name="wxFD_MULTIPLE" value="0x0200"/>
  <define name="wxFD_DEFAULT_STYLE" value="0x0001"/>
  <define name="wxBU_BOTTOM" value="0x0200"/>
  <define name="wxBU_ALIGN_MASK" value="0x3C0"/>
  <define name="wxBU_NOAUTODRAW" value="0x0000"/>
  <define name="wxBU_AUTODRAW" value="0x0004"/>
  <define name="wxBU_EXACTFIT" value="0x0001"/>
  <define name="wxBU_NOTEXT" value="0x0002"/>
  <define name="wxHW_SCROLLBAR_NEVER" value="0x0002"/>
  <define name="wxHW_SCROLLBAR_AUTO" value="0x0004"/>
  <define name="wxHW_NO_SELECTION" value="0x0008"/>
  <define name="wxHW_DEFAULT_STYLE" value="0x0002"/>
  <define name="wxHTML_OPEN" value="0"/>
  <define name="wxHTML_BLOCK" value="1"/>
  <define name="wxHTML_REDIRECT" value="2"/>
  <define name="wxPAGE_ODD" value="0"/>
  <define name="wxPAGE_EVEN" value="1"/>
  <define name="wxPAGE_ALL" value="2"/>
  <!-- End of wxPropertyGrid defines -->
  <define name="wxDL_LAZY" value="0x00000001"/>
  <define name="wxDL_NOW" value="0x00000002"/>
  <define name="wxDL_GLOBAL" value="0x00000004"/>
  <define name="wxDL_VERBATIM" value="0x00000008"/>
  <define name="wxDL_NOSHARE" value="0x00000010"/>
  <define name="wxDL_QUIET" value="0x00000020"/>
  <define name="wxDL_GET_LOADED" value="0x00000040"/>
  <define name="wxDL_DEFAULT" value="0x00000002"/>
  <define name="wxDL_LIBRARY" value="0"/>
  <define name="wxDL_MODULE" value="1"/>
  <define name="wxDL_PLUGIN_GUI" value="0"/>
  <define name="wxDL_PLUGIN_BASE" value="1"/>
  <define name="wxDL_INIT_FUNC(pfx, name, dynlib)" value="pfx ## name = (name ## _t)(dynlib).RawGetSymbol(#name)"/>
  <define name="wxKEY_NONE" value="0"/>
  <define name="wxKEY_INTEGER" value="1"/>
  <define name="wxKEY_STRING" value="2"/>
  <define name="WXK_NONE" value="0"/>
  <define name="WXK_CONTROL_A" value="1"/>
  <define name="WXK_CONTROL_B" value="2"/>
  <define name="WXK_CONTROL_C" value="3"/>
  <define name="WXK_CONTROL_D" value="4"/>
  <define name="WXK_CONTROL_E" value="5"/>
  <define name="WXK_CONTROL_F" value="6"/>
  <define name="WXK_CONTROL_G" value="7"/>
  <define name="WXK_CONTROL_H" value="8"/>
  <define name="WXK_CONTROL_I" value="9"/>
  <define name="WXK_CONTROL_J" value="10"/>
  <define name="WXK_CONTROL_K" value="11"/>
  <define name="WXK_CONTROL_L" value="12"/>
  <define name="WXK_CONTROL_M" value="13"/>
  <define name="WXK_CONTROL_N" value="14"/>
  <define name="WXK_CONTROL_O" value="15"/>
  <define name="WXK_CONTROL_P" value="16"/>
  <define name="WXK_CONTROL_Q" value="17"/>
  <define name="WXK_CONTROL_R" value="18"/>
  <define name="WXK_CONTROL_S" value="19"/>
  <define name="WXK_CONTROL_T" value="20"/>
  <define name="WXK_CONTROL_U" value="21"/>
  <define name="WXK_CONTROL_V" value="22"/>
  <define name="WXK_CONTROL_W" value="23"/>
  <define name="WXK_CONTROL_X" value="24"/>
  <define name="WXK_CONTROL_Y" value="25"/>
  <define name="WXK_CONTROL_Z" value="26"/>
  <define name="WXK_BACK" value="8"/>
  <define name="WXK_TAB" value="9"/>
  <define name="WXK_RETURN" value="13"/>
  <define name="WXK_ESCAPE" value="27"/>
  <define name="WXK_SPACE" value="32"/>
  <define name="WXK_DELETE" value="127"/>
  <define name="WXK_START" value="300"/>
  <define name="WXK_LBUTTON" value="301"/>
  <define name="WXK_RBUTTON" value="302"/>
  <define name="WXK_CANCEL" value="303"/>
  <define name="WXK_MBUTTON" value="304"/>
  <define name="WXK_CLEAR" value="305"/>
  <define name="WXK_SHIFT" value="306"/>
  <define name="WXK_ALT" value="307"/>
  <define name="WXK_CONTROL" value="308"/>
  <define name="WXK_MENU" value="309"/>
  <define name="WXK_PAUSE" value="310"/>
  <define name="WXK_CAPITAL" value="311"/>
  <define name="WXK_END" value="312"/>
  <define name="WXK_HOME" value="313"/>
  <define name="WXK_LEFT" value="314"/>
  <define name="WXK_UP" value="315"/>
  <define name="WXK_RIGHT" value="316"/>
  <define name="WXK_DOWN" value="317"/>
  <define name="WXK_SELECT" value="318"/>
  <define name="WXK_PRINT" value="319"/>
  <define name="WXK_EXECUTE" value="320"/>
  <define name="WXK_SNAPSHOT" value="321"/>
  <define name="WXK_INSERT" value="322"/>
  <define name="WXK_HELP" value="323"/>
  <define name="WXK_NUMPAD0" value="324"/>
  <define name="WXK_NUMPAD1" value="325"/>
  <define name="WXK_NUMPAD2" value="326"/>
  <define name="WXK_NUMPAD3" value="327"/>
  <define name="WXK_NUMPAD4" value="328"/>
  <define name="WXK_NUMPAD5" value="329"/>
  <define name="WXK_NUMPAD6" value="330"/>
  <define name="WXK_NUMPAD7" value="331"/>
  <define name="WXK_NUMPAD8" value="332"/>
  <define name="WXK_NUMPAD9" value="333"/>
  <define name="WXK_MULTIPLY" value="334"/>
  <define name="WXK_ADD" value="335"/>
  <define name="WXK_SEPARATOR" value="336"/>
  <define name="WXK_SUBTRACT" value="337"/>
  <define name="WXK_DECIMAL" value="338"/>
  <define name="WXK_DIVIDE" value="339"/>
  <define name="WXK_F1" value="340"/>
  <define name="WXK_F2" value="341"/>
  <define name="WXK_F3" value="342"/>
  <define name="WXK_F4" value="343"/>
  <define name="WXK_F5" value="344"/>
  <define name="WXK_F6" value="345"/>
  <define name="WXK_F7" value="346"/>
  <define name="WXK_F8" value="347"/>
  <define name="WXK_F9" value="348"/>
  <define name="WXK_F10" value="349"/>
  <define name="WXK_F11" value="350"/>
  <define name="WXK_F12" value="351"/>
  <define name="WXK_F13" value="352"/>
  <define name="WXK_F14" value="353"/>
  <define name="WXK_F15" value="354"/>
  <define name="WXK_F16" value="355"/>
  <define name="WXK_F17" value="356"/>
  <define name="WXK_F18" value="357"/>
  <define name="WXK_F19" value="358"/>
  <define name="WXK_F20" value="359"/>
  <define name="WXK_F21" value="360"/>
  <define name="WXK_F22" value="361"/>
  <define name="WXK_F23" value="362"/>
  <define name="WXK_F24" value="363"/>
  <define name="WXK_NUMLOCK" value="364"/>
  <define name="WXK_SCROLL" value="365"/>
  <define name="WXK_PAGEUP" value="366"/>
  <define name="WXK_PAGEDOWN" value="367"/>
  <define name="WXK_NUMPAD_SPACE" value="368"/>
  <define name="WXK_NUMPAD_TAB" value="369"/>
  <define name="WXK_NUMPAD_ENTER" value="370"/>
  <define name="WXK_NUMPAD_F1" value="371"/>
  <define name="WXK_NUMPAD_F2" value="372"/>
  <define name="WXK_NUMPAD_F3" value="373"/>
  <define name="WXK_NUMPAD_F4" value="374"/>
  <define name="WXK_NUMPAD_HOME" value="375"/>
  <define name="WXK_NUMPAD_LEFT" value="376"/>
  <define name="WXK_NUMPAD_UP" value="377"/>
  <define name="WXK_NUMPAD_RIGHT" value="378"/>
  <define name="WXK_NUMPAD_DOWN" value="379"/>
  <define name="WXK_NUMPAD_PAGEUP" value="380"/>
  <define name="WXK_NUMPAD_PAGEDOWN" value="381"/>
  <define name="WXK_NUMPAD_END" value="382"/>
  <define name="WXK_NUMPAD_BEGIN" value="383"/>
  <define name="WXK_NUMPAD_INSERT" value="384"/>
  <define name="WXK_NUMPAD_DELETE" value="385"/>
  <define name="WXK_NUMPAD_EQUAL" value="386"/>
  <define name="WXK_NUMPAD_MULTIPLY" value="387"/>
  <define name="WXK_NUMPAD_ADD" value="388"/>
  <define name="WXK_NUMPAD_SEPARATOR" value="389"/>
  <define name="WXK_NUMPAD_SUBTRACT" value="390"/>
  <define name="WXK_NUMPAD_DECIMAL" value="391"/>
  <define name="WXK_NUMPAD_DIVIDE" value="392"/>
  <define name="WXK_WINDOWS_LEFT" value="393"/>
  <define name="WXK_WINDOWS_RIGHT" value="394"/>
  <define name="WXK_WINDOWS_MENU" value="395"/>
  <define name="WXK_RAW_CONTROL" value="396"/>
  <define name="WXK_COMMAND" value="308"/>
  <define name="WXK_SPECIAL1" value="397"/>
  <define name="WXK_SPECIAL2" value="398"/>
  <define name="WXK_SPECIAL3" value="399"/>
  <define name="WXK_SPECIAL4" value="400"/>
  <define name="WXK_SPECIAL5" value="401"/>
  <define name="WXK_SPECIAL6" value="402"/>
  <define name="WXK_SPECIAL7" value="403"/>
  <define name="WXK_SPECIAL8" value="404"/>
  <define name="WXK_SPECIAL9" value="405"/>
  <define name="WXK_SPECIAL10" value="406"/>
  <define name="WXK_SPECIAL11" value="407"/>
  <define name="WXK_SPECIAL12" value="408"/>
  <define name="WXK_SPECIAL13" value="409"/>
  <define name="WXK_SPECIAL14" value="410"/>
  <define name="WXK_SPECIAL15" value="411"/>
  <define name="WXK_SPECIAL16" value="412"/>
  <define name="WXK_SPECIAL17" value="413"/>
  <define name="WXK_SPECIAL18" value="414"/>
  <define name="WXK_SPECIAL19" value="415"/>
  <define name="WXK_SPECIAL20" value="420"/>
  <define name="WXK_BROWSER_BACK" value="421"/>
  <define name="WXK_BROWSER_FORWARD" value="422"/>
  <define name="WXK_BROWSER_REFRESH" value="423"/>
  <define name="WXK_BROWSER_STOP" value="424"/>
  <define name="WXK_BROWSER_SEARCH" value="425"/>
  <define name="WXK_BROWSER_FAVORITES" value="426"/>
  <define name="WXK_BROWSER_HOME" value="427"/>
  <define name="WXK_VOLUME_MUTE" value="428"/>
  <define name="WXK_VOLUME_DOWN" value="429"/>
  <define name="WXK_VOLUME_UP" value="430"/>
  <define name="WXK_MEDIA_NEXT_TRACK" value="431"/>
  <define name="WXK_MEDIA_PREV_TRACK" value="432"/>
  <define name="WXK_MEDIA_STOP" value="433"/>
  <define name="WXK_MEDIA_PLAY_PAUSE" value="434"/>
  <define name="WXK_LAUNCH_MAIL" value="435"/>
  <define name="WXK_LAUNCH_APP1" value="436"/>
  <define name="WXK_LAUNCH_APP2" value="437"/>
  <define name="_WX_DECLARE_TYPEINFO_CUSTOM(CLS,IDENTFUNC)" value=""/>
  <define name="WX_DECLARE_TYPEINFO_INLINE(CLS)" value=""/>
  <define name="WX_DECLARE_TYPEINFO(CLS)" value=""/>
  <define name="WX_DEFINE_TYPEINFO(CLS)" value=""/>
  <define name="WX_DECLARE_ABSTRACT_TYPEINFO(CLS)" value=""/>
  <define name="WX_PG_DECLARE_BASIC_TYPE_METHODS()" value=""/>
  <define name="WX_PG_IMPLEMENT_VARIANT_DATA(classname)" value=""/>
  <define name="WX_PG_IMPLEMENT_VARIANT_DATA_EXPORTED_DUMMY_EQ(classname,value)" value=""/>
  <define name="WX_PG_IMPLEMENT_VARIANT_DATA_DUMMY_EQ(classname)" value=""/>
  <define name="WX_PG_DECLARE_DERIVED_PROPERTY_CLASS(classname)" value=""/>
  <define name="WX_PG_IMPLEMENT_DERIVED_PROPERTY_CLASS(NAME,UPNAME,T_AS_ARG)" value=""/>
  <define name="WX_PG_DECLARE_CHOICE_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_EVENT_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_PARENTAL_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_CUSTOM_PAINT_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_ATTRIBUTE_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_VALIDATOR_METHODS()" value=""/>
  <define name="WX_PG_DECLARE_PROPERTY_CLASS(name)" value=""/>
  <define name="WX_PG_IMPLEMENT_PROPERTY_CLASS_PLAIN(PROPNAME,T,EDITOR)" value=""/>
  <define name="WX_PG_IMPLEMENT_PROPERTY_CLASS(NAME,UPCLASS,T,T_AS_ARG,EDITOR)" value=""/>
  <define name="wxDEFAULT" value="70"/>
  <define name="wxDECORATIVE" value="71"/>
  <define name="wxROMAN" value="72"/>
  <define name="wxSCRIPT" value="73"/>
  <define name="wxSWISS" value="74"/>
  <define name="wxMODERN" value="75"/>
  <define name="wxTELETYPE" value="76"/>
  <define name="wxVARIABLE" value="80"/>
  <define name="wxFIXED" value="81"/>
  <define name="wxNORMAL" value="90"/>
  <define name="wxLIGHT" value="91"/>
  <define name="wxBOLD" value="92"/>
  <define name="wxITALIC" value="93"/>
  <define name="wxSLANT" value="94"/>
  <define name="wxSOLID" value="100"/>
  <define name="wxDOT" value="101"/>
  <define name="wxLONG_DASH" value="102"/>
  <define name="wxSHORT_DASH" value="103"/>
  <define name="wxDOT_DASH" value="104"/>
  <define name="wxUSER_DASH" value="105"/>
  <define name="wxTRANSPARENT" value="106"/>
  <define name="wxSTIPPLE_MASK_OPAQUE" value="107"/>
  <define name="wxSTIPPLE_MASK" value="108"/>
  <define name="wxSTIPPLE" value="110"/>
  <define name="wxBDIAGONAL_HATCH" value="111"/>
  <define name="wxCROSSDIAG_HATCH" value="112"/>
  <define name="wxFDIAGONAL_HATCH" value="113"/>
  <define name="wxCROSS_HATCH" value="114"/>
  <define name="wxHORIZONTAL_HATCH" value="115"/>
  <define name="wxVERTICAL_HATCH" value="116"/>
  <define name="wxFIRST_HATCH" value="111"/>
  <define name="wxLAST_HATCH" value="116"/>
  <define name="wxBG_STYLE_ERASE" value="0"/>
  <define name="wxBG_STYLE_SYSTEM" value="1"/>
  <define name="wxBG_STYLE_PAINT" value="2"/>
  <define name="wxBG_STYLE_TRANSPARENT" value="3"/>
  <define name="wxBG_STYLE_COLOUR" value="4"/>
  <define name="wxBG_STYLE_CUSTOM" value="2"/>
  <define name="wxSIZE_AUTO_WIDTH" value="0x0001"/>
  <define name="wxSIZE_AUTO_HEIGHT" value="0x0002"/>
  <define name="wxSIZE_AUTO" value="3"/>
  <define name="wxSIZE_USE_EXISTING" value="0x0000"/>
  <define name="wxSIZE_ALLOW_MINUS_ONE" value="0x0004"/>
  <define name="wxSIZE_NO_ADJUSTMENTS" value="0x0008"/>
  <define name="wxSIZE_FORCE" value="0x0010"/>
  <define name="wxSIZE_FORCE_EVENT" value="0x0020"/>
  <define name="wxCENTRE" value="1"/>
  <define name="wxCENTER" value="1"/>
  <define name="wxCENTER_FRAME" value="0"/>
  <define name="wxCENTRE_ON_SCREEN" value="2"/>
  <define name="wxCENTER_ON_SCREEN" value="2"/>
  <define name="wxHORIZONTAL" value="4"/>
  <define name="wxVERTICAL" value="8"/>
  <define name="wxBOTH" value="16"/>
  <define name="wxORIENTATION_MASK" value="16"/>
  <define name="wxLEFT" value="0x10"/>
  <define name="wxRIGHT" value="0x20"/>
  <define name="wxUP" value="0x40"/>
  <define name="wxDOWN" value="0x80"/>
  <define name="wxTOP" value="0x40"/>
  <define name="wxBOTTOM" value="0x80"/>
  <define name="wxNORTH" value="0x40"/>
  <define name="wxSOUTH" value="0x80"/>
  <define name="wxWEST" value="0x10"/>
  <define name="wxEAST" value="0x20"/>
  <define name="wxALL" value="240"/>
  <define name="wxDIRECTION_MASK" value="240"/>
  <define name="wxALIGN_INVALID" value="-1"/>
  <define name="wxALIGN_NOT" value="0"/>
  <define name="wxALIGN_CENTER_HORIZONTAL" value="0x0100"/>
  <define name="wxALIGN_CENTRE_HORIZONTAL" value="0x0100"/>
  <define name="wxALIGN_LEFT" value="0"/>
  <define name="wxALIGN_TOP" value="0"/>
  <define name="wxALIGN_RIGHT" value="0x0200"/>
  <define name="wxALIGN_BOTTOM" value="0x0400"/>
  <define name="wxALIGN_CENTER_VERTICAL" value="0x0800"/>
  <define name="wxALIGN_CENTRE_VERTICAL" value="0x0800"/>
  <define name="wxALIGN_CENTER" value="2304"/>
  <define name="wxALIGN_CENTRE" value="2304"/>
  <define name="wxALIGN_MASK" value="0x0f00"/>
  <define name="wxADJUST_MINSIZE" value="0"/>
  <define name="wxFIXED_MINSIZE" value="0x8000"/>
  <define name="wxSTRETCH_NOT" value="0x0000"/>
  <define name="wxSHRINK" value="0x1000"/>
  <define name="wxGROW" value="0x2000"/>
  <define name="wxEXPAND" value="0x2000"/>
  <define name="wxSHAPED" value="0x4000"/>
  <define name="wxTILE" value="49152"/>
  <define name="wxBORDER_DEFAULT" value="0"/>
  <define name="wxBORDER_NONE" value="0x00200000"/>
  <define name="wxBORDER_STATIC" value="0x01000000"/>
  <define name="wxBORDER_SIMPLE" value="0x02000000"/>
  <define name="wxBORDER_RAISED" value="0x04000000"/>
  <define name="wxBORDER_SUNKEN" value="0x08000000"/>
  <define name="wxBORDER_DOUBLE" value="0x10000000"/>
  <define name="wxBORDER_THEME" value="0x10000000"/>
  <define name="wxBORDER_MASK" value="0x1f200000"/>
  <define name="wxDEFAULT_CONTROL_BORDER" value="0x08000000"/>
  <define name="wxSTRETCH_MASK" value="0x7000"/>
  <define name="wxRESERVE_SPACE_EVEN_IF_HIDDEN" value="0x0002"/>
  <define name="wxSIZER_FLAG_BITS_MASK" value="0x8002"/>
  <define name="wxVSCROLL" value="0x80000000"/>
  <define name="wxHSCROLL" value="0x40000000"/>
  <define name="wxCAPTION" value="0x20000000"/>
  <define name="wxDOUBLE_BORDER" value="0x10000000"/>
  <define name="wxSUNKEN_BORDER" value="0x08000000"/>
  <define name="wxRAISED_BORDER" value="0x04000000"/>
  <define name="wxBORDER" value="0x02000000"/>
  <define name="wxSIMPLE_BORDER" value="0x02000000"/>
  <define name="wxSTATIC_BORDER" value="0x01000000"/>
  <define name="wxNO_BORDER" value="0x00200000"/>
  <define name="wxALWAYS_SHOW_SB" value="0x00800000"/>
  <define name="wxCLIP_CHILDREN" value="0x00400000"/>
  <define name="wxCLIP_SIBLINGS" value="0x20000000"/>
  <define name="wxTRANSPARENT_WINDOW" value="0x00100000"/>
  <define name="wxTAB_TRAVERSAL" value="0x00080000"/>
  <define name="wxWANTS_CHARS" value="0x00040000"/>
  <define name="wxRETAINED" value="0x00000000"/>
  <define name="wxBACKINGSTORE" value="0x00000000"/>
  <define name="wxPOPUP_WINDOW" value="0x00020000"/>
  <define name="wxWINDOW_STYLE_MASK" value="0xFFFF0000"/>
  <define name="wxFULL_REPAINT_ON_RESIZE" value="0x00010000"/>
  <define name="wxNO_FULL_REPAINT_ON_RESIZE" value="0"/>
  <define name="wxWS_EX_BLOCK_EVENTS" value="0x00000002"/>
  <define name="wxWS_EX_TRANSIENT" value="0x00000004"/>
  <define name="wxWS_EX_THEMED_BACKGROUND" value="0x00000008"/>
  <define name="wxWS_EX_PROCESS_IDLE" value="0x00000010"/>
  <define name="wxWS_EX_PROCESS_UI_UPDATES" value="0x00000020"/>
  <define name="wxFRAME_EX_METAL" value="0x00000040"/>
  <define name="wxDIALOG_EX_METAL" value="0x00000040"/>
  <define name="wxWS_EX_CONTEXTHELP" value="0x00000080"/>
  <define name="wxFRAME_EX_CONTEXTHELP" value="0x00000080"/>
  <define name="wxDIALOG_EX_CONTEXTHELP" value="0x00000080"/>
  <define name="wxFRAME_DRAWER" value="0x0020"/>
  <define name="wxFRAME_NO_WINDOW_MENU" value="0x0100"/>
  <define name="wxMB_DOCKABLE" value="0x0001"/>
  <define name="wxMENU_TEAROFF" value="0x0001"/>
  <define name="wxCOLOURED" value="0x0800"/>
  <define name="wxFIXED_LENGTH" value="0x0400"/>
  <define name="wxLB_SORT" value="0x0010"/>
  <define name="wxLB_SINGLE" value="0x0020"/>
  <define name="wxLB_MULTIPLE" value="0x0040"/>
  <define name="wxLB_EXTENDED" value="0x0080"/>
  <define name="wxLB_NEEDED_SB" value="0x0000"/>
  <define name="wxLB_OWNERDRAW" value="0x0100"/>
  <define name="wxLB_ALWAYS_SB" value="0x0200"/>
  <define name="wxLB_NO_SB" value="0x0400"/>
  <define name="wxLB_HSCROLL" value="0x40000000"/>
  <define name="wxLB_INT_HEIGHT" value="0x0800"/>
  <define name="wxCB_SIMPLE" value="0x0004"/>
  <define name="wxCB_SORT" value="0x0008"/>
  <define name="wxCB_READONLY" value="0x0010"/>
  <define name="wxCB_DROPDOWN" value="0x0020"/>
  <define name="wxRA_LEFTTORIGHT" value="0x0001"/>
  <define name="wxRA_TOPTOBOTTOM" value="0x0002"/>
  <define name="wxRA_SPECIFY_COLS" value="0x0004"/>
  <define name="wxRA_SPECIFY_ROWS" value="0x0008"/>
  <define name="wxRA_HORIZONTAL" value="0x0004"/>
  <define name="wxRA_VERTICAL" value="0x0008"/>
  <define name="wxRB_GROUP" value="0x0004"/>
  <define name="wxRB_SINGLE" value="0x0008"/>
  <define name="wxSB_HORIZONTAL" value="0x0004"/>
  <define name="wxSB_VERTICAL" value="0x0008"/>
  <define name="wxSP_HORIZONTAL" value="0x0004"/>
  <define name="wxSP_VERTICAL" value="0x0008"/>
  <define name="wxSP_ARROW_KEYS" value="0x4000"/>
  <define name="wxSP_WRAP" value="0x8000"/>
  <define name="wxTC_RIGHTJUSTIFY" value="0x0010"/>
  <define name="wxTC_FIXEDWIDTH" value="0x0020"/>
  <define name="wxTC_TOP" value="0x0000"/>
  <define name="wxTC_LEFT" value="0x0020"/>
  <define name="wxTC_RIGHT" value="0x0040"/>
  <define name="wxTC_BOTTOM" value="0x0080"/>
  <define name="wxTC_MULTILINE" value="0x0200"/>
  <define name="wxTC_OWNERDRAW" value="0x0400"/>
  <define name="wxBI_EXPAND" value="0x2000"/>
  <define name="wxLI_HORIZONTAL" value="0x0004"/>
  <define name="wxLI_VERTICAL" value="0x0008"/>
  <define name="wxYES" value="0x00000002"/>
  <define name="wxOK" value="0x00000004"/>
  <define name="wxNO" value="0x00000008"/>
  <define name="wxYES_NO" value="10"/>
  <define name="wxCANCEL" value="0x00000010"/>
  <define name="wxAPPLY" value="0x00000020"/>
  <define name="wxCLOSE" value="0x00000040"/>
  <define name="wxOK_DEFAULT" value="0x00000000"/>
  <define name="wxYES_DEFAULT" value="0x00000000"/>
  <define name="wxNO_DEFAULT" value="0x00000080"/>
  <define name="wxCANCEL_DEFAULT" value="0x80000000"/>
  <define name="wxICON_EXCLAMATION" value="0x00000100"/>
  <define name="wxICON_HAND" value="0x00000200"/>
  <define name="wxICON_WARNING" value="0x00000100"/>
  <define name="wxICON_ERROR" value="0x00000200"/>
  <define name="wxICON_QUESTION" value="0x00000400"/>
  <define name="wxICON_INFORMATION" value="0x00000800"/>
  <define name="wxICON_STOP" value="0x00000200"/>
  <define name="wxICON_ASTERISK" value="0x00000800"/>
  <define name="wxBITMAP_TYPE_INVALID" value="0"/>
  <define name="wxBITMAP_TYPE_BMP" value="1"/>
  <define name="wxBITMAP_TYPE_BMP_RESOURCE" value="2"/>
  <define name="wxBITMAP_TYPE_RESOURCE" value="2"/>
  <define name="wxBITMAP_TYPE_ICO" value="3"/>
  <define name="wxBITMAP_TYPE_ICO_RESOURCE" value="4"/>
  <define name="wxBITMAP_TYPE_CUR" value="5"/>
  <define name="wxBITMAP_TYPE_CUR_RESOURCE" value="6"/>
  <define name="wxBITMAP_TYPE_XBM" value="7"/>
  <define name="wxBITMAP_TYPE_XBM_DATA" value="8"/>
  <define name="wxBITMAP_TYPE_XPM" value="9"/>
  <define name="wxBITMAP_TYPE_XPM_DATA" value="10"/>
  <define name="wxBITMAP_TYPE_TIFF" value="11"/>
  <define name="wxBITMAP_TYPE_TIF" value="11"/>
  <define name="wxBITMAP_TYPE_TIFF_RESOURCE" value="12"/>
  <define name="wxBITMAP_TYPE_TIF_RESOURCE" value="12"/>
  <define name="wxBITMAP_TYPE_GIF" value="13"/>
  <define name="wxBITMAP_TYPE_GIF_RESOURCE" value="14"/>
  <define name="wxBITMAP_TYPE_PNG" value="15"/>
  <define name="wxBITMAP_TYPE_PNG_RESOURCE" value="16"/>
  <define name="wxBITMAP_TYPE_JPEG" value="17"/>
  <define name="wxBITMAP_TYPE_JPEG_RESOURCE" value="18"/>
  <define name="wxBITMAP_TYPE_PNM" value="19"/>
  <define name="wxBITMAP_TYPE_PNM_RESOURCE" value="20"/>
  <define name="wxBITMAP_TYPE_PCX" value="21"/>
  <define name="wxBITMAP_TYPE_PCX_RESOURCE" value="22"/>
  <define name="wxBITMAP_TYPE_PICT" value="23"/>
  <define name="wxBITMAP_TYPE_PICT_RESOURCE" value="24"/>
  <define name="wxBITMAP_TYPE_ICON" value="25"/>
  <define name="wxBITMAP_TYPE_ICON_RESOURCE" value="26"/>
  <define name="wxBITMAP_TYPE_ANI" value="27"/>
  <define name="wxBITMAP_TYPE_IFF" value="28"/>
  <define name="wxBITMAP_TYPE_TGA" value="29"/>
  <define name="wxBITMAP_TYPE_MACCURSOR" value="30"/>
  <define name="wxBITMAP_TYPE_MACCURSOR_RESOURCE" value="31"/>
  <define name="wxBITMAP_TYPE_MAX" value="32"/>
  <define name="wxBITMAP_TYPE_ANY" value="50"/>
  <define name="wxODDEVEN_RULE" value="1"/>
  <define name="wxWINDING_RULE" value="2"/>
  <define name="wxDF_INVALID" value="0"/>
  <define name="wxDF_TEXT" value="1"/>
  <define name="wxDF_BITMAP" value="2"/>
  <define name="wxDF_METAFILE" value="3"/>
  <define name="wxDF_SYLK" value="4"/>
  <define name="wxDF_DIF" value="5"/>
  <define name="wxDF_TIFF" value="6"/>
  <define name="wxDF_OEMTEXT" value="7"/>
  <define name="wxDF_DIB" value="8"/>
  <define name="wxDF_PALETTE" value="9"/>
  <define name="wxDF_PENDATA" value="10"/>
  <define name="wxDF_RIFF" value="11"/>
  <define name="wxDF_WAVE" value="12"/>
  <define name="wxDF_UNICODETEXT" value="13"/>
  <define name="wxDF_ENHMETAFILE" value="14"/>
  <define name="wxDF_FILENAME" value="15"/>
  <define name="wxDF_LOCALE" value="16"/>
  <define name="wxDF_PRIVATE" value="20"/>
  <define name="wxDF_HTML" value="30"/>
  <define name="wxDF_MAX" value="31"/>
  <define name="wxHELP" value="0x00001000"/>
  <define name="wxFORWARD" value="0x00002000"/>
  <define name="wxBACKWARD" value="0x00004000"/>
  <define name="wxRESET" value="0x00008000"/>
  <define name="wxMORE" value="0x00010000"/>
  <define name="wxSETUP" value="0x00020000"/>
  <define name="wxICON_NONE" value="0x00040000"/>
  <define name="wxICON_AUTH_NEEDED" value="0x00080000"/>
  <define name="wxICON_MASK" value="0x000C0F00"/>
  <define name="wxNOT_FOUND" value="-1"/>
  <define name="wxPRINT_QUALITY_HIGH" value="-1"/>
  <define name="wxPRINT_QUALITY_MEDIUM" value="-2"/>
  <define name="wxPRINT_QUALITY_LOW" value="-3"/>
  <define name="wxPRINT_QUALITY_DRAFT" value="-4"/>
  <define name="wxSTAY_ON_TOP" value="0x8000"/>
  <define name="wxICONIZE" value="0x4000"/>
  <define name="wxMINIMIZE" value="0x4000"/>
  <define name="wxMAXIMIZE" value="0x2000"/>
  <define name="wxCLOSE_BOX" value="0x1000"/>
  <define name="wxSYSTEM_MENU" value="0x0800"/>
  <define name="wxMINIMIZE_BOX" value="0x0400"/>
  <define name="wxMAXIMIZE_BOX" value="0x0200"/>
  <define name="wxTINY_CAPTION" value="0x0080"/>
  <define name="wxTINY_CAPTION_HORIZ" value="0x0080"/>
  <define name="wxTINY_CAPTION_VERT" value="0x0080"/>
  <define name="wxDEFAULT_FRAME_STYLE" value="0x20401E40"/>
  <define name="wxFULLSCREEN_NOMENUBAR" value="0x0001"/>
  <define name="wxFULLSCREEN_NOTOOLBAR" value="0x0002"/>
  <define name="wxFULLSCREEN_NOSTATUSBAR" value="0x0004"/>
  <define name="wxFULLSCREEN_NOBORDER" value="0x0008"/>
  <define name="wxFULLSCREEN_NOCAPTION" value="0x0010"/>
  <define name="wxFULLSCREEN_ALL" value="0x1F"/>
  <define name="wxUSER_ATTENTION_INFO" value="1"/>
  <define name="wxUSER_ATTENTION_ERROR" value="2"/>
  <define name="wxRESIZE_BORDER" value="0x0040"/>
  <define name="wxALPHA_OPAQUE" value="0xFF"/>
  <define name="wxALPHA_TRANSPARENT" value="0"/>
  <define name="wxC2S_NAME" value="1"/>
  <define name="wxC2S_CSS_SYNTAX" value="2"/>
  <define name="wxC2S_HTML_SYNTAX" value="4"/>
  <define name="wxPENSTYLE_INVALID" value="-1"/>
  <define name="wxPENSTYLE_SOLID" value="100"/>
  <define name="wxPENSTYLE_DOT" value="101"/>
  <define name="wxPENSTYLE_LONG_DASH" value="102"/>
  <define name="wxPENSTYLE_SHORT_DASH" value="103"/>
  <define name="wxPENSTYLE_DOT_DASH" value="104"/>
  <define name="wxPENSTYLE_USER_DASH" value="105"/>
  <define name="wxPENSTYLE_TRANSPARENT" value="106"/>
  <define name="wxPENSTYLE_STIPPLE_MASK_OPAQUE" value="107"/>
  <define name="wxPENSTYLE_STIPPLE_MASK" value="108"/>
  <define name="wxPENSTYLE_STIPPLE" value="110"/>
  <define name="wxPENSTYLE_BDIAGONAL_HATCH" value="112"/>
  <define name="wxPENSTYLE_CROSSDIAG_HATCH" value="113"/>
  <define name="wxPENSTYLE_FDIAGONAL_HATCH" value="114"/>
  <define name="wxPENSTYLE_CROSS_HATCH" value="115"/>
  <define name="wxPENSTYLE_HORIZONTAL_HATCH" value="116"/>
  <define name="wxPENSTYLE_VERTICAL_HATCH" value="117"/>
  <define name="wxPENSTYLE_FIRST_HATCH" value="118"/>
  <define name="wxPENSTYLE_LAST_HATCH" value="119"/>
  <define name="wxTOOL_TOP" value="1"/>
  <define name="wxTOOL_BOTTOM" value="2"/>
  <define name="wxTOOL_LEFT" value="3"/>
  <define name="wxTOOL_RIGHT" value="4"/>
  <define name="wxJOIN_INVALID" value="-1"/>
  <define name="wxJOIN_BEVEL" value="120"/>
  <define name="wxJOIN_MITER" value="121"/>
  <define name="wxJOIN_ROUND" value="122"/>
  <define name="wxCAP_INVALID" value="-1"/>
  <define name="wxCAP_ROUND" value="130"/>
  <define name="wxCAP_PROJECTING" value="131"/>
  <define name="wxCAP_BUTT" value="132"/>
  <define name="wxCAL_SUNDAY_FIRST" value="0x0000"/>
  <define name="wxCAL_MONDAY_FIRST" value="0x0001"/>
  <define name="wxCAL_SHOW_HOLIDAYS" value="0x0002"/>
  <define name="wxCAL_NO_YEAR_CHANGE" value="0x0004"/>
  <define name="wxCAL_NO_MONTH_CHANGE" value="0x000C"/>
  <define name="wxCAL_SEQUENTIAL_MONTH_SELECTION" value="0x0010"/>
  <define name="wxCAL_SHOW_SURROUNDING_WEEKS" value="0x0020"/>
  <define name="wxCAL_SHOW_WEEK_NUMBERS" value="0x0040"/>
  <define name="wxGRID_FLOAT_FORMAT_FIXED" value="0x10"/>
  <define name="wxGRID_FLOAT_FORMAT_SCIENTIFIC" value="0x20"/>
  <define name="wxGRID_FLOAT_FORMAT_COMPACT" value="0x40"/>
  <define name="wxGRID_FLOAT_FORMAT_UPPER" value="0x80"/>
  <define name="wxGRID_FLOAT_FORMAT_DEFAULT" value="0x10"/>
  <define name="wxGRID_FLOAT_FORMAT_MASK" value="240"/>
  <define name="wxART_MAKE_CLIENT_ID_FROM_STR(id)" value="((id) + &quot;_C&quot;)"/>
  <define name="wxART_MAKE_CLIENT_ID(id)" value="(#id &quot;_C&quot;)"/>
  <define name="wxART_MAKE_ART_ID_FROM_STR(id)" value="(id)"/>
  <define name="wxART_MAKE_ART_ID(id)" value="(#id)"/>
  <define name="wxART_FRAME_ICON" value="&quot;wxART_FRAME_ICON&quot;"/>
  <define name="wxART_CMN_DIALOG" value="&quot;wxART_CMN_DIALOG&quot;"/>
  <define name="wxART_HELP_BROWSER" value="&quot;wxART_HELP_BROWSER&quot;"/>
  <define name="wxART_MESSAGE_BOX" value="&quot;wxART_MESSAGE_BOX&quot;"/>
  <define name="wxART_BUTTON" value="&quot;wxART_BUTTON&quot;"/>
  <define name="wxART_LIST" value="&quot;wxART_LIST&quot;"/>
  <define name="wxART_OTHER" value="&quot;wxART_OTHER&quot;"/>
  <define name="wxART_ADD_BOOKMARK" value="&quot;wxART_ADD_BOOKMARK&quot;"/>
  <define name="wxART_DEL_BOOKMARK" value="&quot;wxART_DEL_BOOKMARK&quot;"/>
  <define name="wxART_HELP_SIDE_PANEL" value="&quot;wxART_HELP_SIDE_PANEL&quot;"/>
  <define name="wxART_HELP_SETTINGS" value="&quot;wxART_HELP_SETTINGS&quot;"/>
  <define name="wxART_HELP_BOOK" value="&quot;wxART_HELP_BOOK&quot;"/>
  <define name="wxART_HELP_FOLDER" value="&quot;wxART_HELP_FOLDER&quot;"/>
  <define name="wxART_HELP_PAGE" value="&quot;wxART_HELP_PAGE&quot;"/>
  <define name="wxART_GO_BACK" value="&quot;wxART_GO_BACK&quot;"/>
  <define name="wxART_GO_FORWARD" value="&quot;wxART_GO_FORWARD&quot;"/>
  <define name="wxART_GO_UP" value="&quot;wxART_GO_UP&quot;"/>
  <define name="wxART_GO_DOWN" value="&quot;wxART_GO_DOWN&quot;"/>
  <define name="wxART_GO_TO_PARENT" value="&quot;wxART_GO_TO_PARENT&quot;"/>
  <define name="wxART_GO_HOME" value="&quot;wxART_GO_HOME&quot;"/>
  <define name="wxART_GOTO_FIRST" value="&quot;wxART_GOTO_FIRST&quot;"/>
  <define name="wxART_GOTO_LAST" value="&quot;wxART_GOTO_LAST&quot;"/>
  <define name="wxART_FILE_OPEN" value="&quot;wxART_FILE_OPEN&quot;"/>
  <define name="wxART_FILE_SAVE" value="&quot;wxART_FILE_SAVE&quot;"/>
  <define name="wxART_FILE_SAVE_AS" value="&quot;wxART_FILE_SAVE_AS&quot;"/>
  <define name="wxART_PRINT" value="&quot;wxART_PRINT&quot;"/>
  <define name="wxART_HELP" value="&quot;wxART_HELP&quot;"/>
  <define name="wxART_TIP" value="&quot;wxART_TIP&quot;"/>
  <define name="wxART_REPORT_VIEW" value="&quot;wxART_REPORT_VIEW&quot;"/>
  <define name="wxART_LIST_VIEW" value="&quot;wxART_LIST_VIEW&quot;"/>
  <define name="wxART_NEW_DIR" value="&quot;wxART_NEW_DIR&quot;"/>
  <define name="wxART_HARDDISK" value="&quot;wxART_HARDDISK&quot;"/>
  <define name="wxART_FLOPPY" value="&quot;wxART_FLOPPY&quot;"/>
  <define name="wxART_CDROM" value="&quot;wxART_CDROM&quot;"/>
  <define name="wxART_REMOVABLE" value="&quot;wxART_REMOVABLE&quot;"/>
  <define name="wxART_FOLDER" value="&quot;wxART_FOLDER&quot;"/>
  <define name="wxART_FOLDER_OPEN" value="&quot;wxART_FOLDER_OPEN&quot;"/>
  <define name="wxART_GO_DIR_UP" value="&quot;wxART_GO_DIR_UP&quot;"/>
  <define name="wxART_EXECUTABLE_FILE" value="&quot;wxART_EXECUTABLE_FILE&quot;"/>
  <define name="wxART_NORMAL_FILE" value="&quot;wxART_NORMAL_FILE&quot;"/>
  <define name="wxART_TICK_MARK" value="&quot;wxART_TICK_MARK&quot;"/>
  <define name="wxART_CROSS_MARK" value="&quot;wxART_CROSS_MARK&quot;"/>
  <define name="wxART_ERROR" value="&quot;wxART_ERROR&quot;"/>
  <define name="wxART_QUESTION" value="&quot;wxART_QUESTION&quot;"/>
  <define name="wxART_WARNING" value="&quot;wxART_WARNING&quot;"/>
  <define name="wxART_INFORMATION" value="&quot;wxART_INFORMATION&quot;"/>
  <define name="wxART_MISSING_IMAGE" value="&quot;wxART_MISSING_IMAGE&quot;"/>
  <define name="wxART_COPY" value="&quot;wxART_COPY&quot;"/>
  <define name="wxART_CUT" value="&quot;wxART_CUT&quot;"/>
  <define name="wxART_PASTE" value="&quot;wxART_PASTE&quot;"/>
  <define name="wxART_DELETE" value="&quot;wxART_DELETE&quot;"/>
  <define name="wxART_NEW" value="&quot;wxART_NEW&quot;"/>
  <define name="wxART_UNDO" value="&quot;wxART_UNDO&quot;"/>
  <define name="wxART_REDO" value="&quot;wxART_REDO&quot;"/>
  <define name="wxART_PLUS" value="&quot;wxART_PLUS&quot;"/>
  <define name="wxART_MINUS" value="&quot;wxART_MINUS&quot;"/>
  <define name="wxART_CLOSE" value="&quot;wxART_CLOSE&quot;"/>
  <define name="wxART_QUIT" value="&quot;wxART_QUIT&quot;"/>
  <define name="wxART_FIND" value="&quot;wxART_FIND&quot;"/>
  <define name="wxART_FIND_AND_REPLACE" value="&quot;wxART_FIND_AND_REPLACE&quot;"/>
  <define name="wxART_FULL_SCREEN" value="&quot;wxART_FULL_SCREEN&quot;"/>
  <define name="wxART_EDIT" value="&quot;wxART_EDIT&quot;"/>
  <define name="wxUINT8_MAX" value="0xffU"/>
  <define name="wxINT8_MAX" value="0x7f"/>
  <define name="wxINT8_MIN" value="0x80"/>
  <define name="wxUINT16_MAX" value="0xffffU"/>
  <define name="wxINT16_MAX" value="0x7fff"/>
  <define name="wxINT16_MIN" value="0x8000"/>
  <define name="wxUINT32_MAX" value="0xffffffffUL"/>
  <define name="wxINT32_MAX" value="0x7fffffffL"/>
  <define name="wxINT32_MIN" value="0x80000000L"/>
  <define name="wxUINT64_MAX" value="0xffffffffffffffffULL"/>
  <define name="wxINT64_MAX" value="0x7fffffffffffffffLL"/>
  <define name="wxINT64_MIN" value="0x8000000000000000LL"/>
  <define name="wxITALIC_FONT" value="wxStockGDI::instance().GetFont(wxStockGDI::FONT_ITALIC)"/>
  <define name="wxNORMAL_FONT" value="wxStockGDI::instance().GetFont(wxStockGDI::FONT_NORMAL)"/>
  <define name="wxSMALL_FONT" value="wxStockGDI::instance().GetFont(wxStockGDI::FONT_SMALL)"/>
  <define name="wxSWISS_FONT" value="wxStockGDI::instance().GetFont(wxStockGDI::FONT_SWISS)"/>
  <define name="wxBLACK_DASHED_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_BLACKDASHED)"/>
  <define name="wxBLACK_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_BLACK)"/>
  <define name="wxBLUE_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_BLUE)"/>
  <define name="wxCYAN_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_CYAN)"/>
  <define name="wxGREEN_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_GREEN)"/>
  <define name="wxYELLOW_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_YELLOW)"/>
  <define name="wxGREY_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_GREY)"/>
  <define name="wxLIGHT_GREY_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_LIGHTGREY)"/>
  <define name="wxMEDIUM_GREY_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_MEDIUMGREY)"/>
  <define name="wxRED_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_RED)"/>
  <define name="wxTRANSPARENT_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_TRANSPARENT)"/>
  <define name="wxWHITE_PEN" value="wxStockGDI::GetPen(wxStockGDI::PEN_WHITE)"/>
  <define name="wxBLACK_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_BLACK)"/>
  <define name="wxBLUE_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_BLUE)"/>
  <define name="wxCYAN_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_CYAN)"/>
  <define name="wxGREEN_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_GREEN)"/>
  <define name="wxYELLOW_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_YELLOW)"/>
  <define name="wxGREY_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_GREY)"/>
  <define name="wxLIGHT_GREY_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_LIGHTGREY)"/>
  <define name="wxMEDIUM_GREY_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_MEDIUMGREY)"/>
  <define name="wxRED_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_RED)"/>
  <define name="wxTRANSPARENT_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_TRANSPARENT)"/>
  <define name="wxWHITE_BRUSH" value="wxStockGDI::GetBrush(wxStockGDI::BRUSH_WHITE)"/>
  <define name="wxBLACK" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_BLACK)"/>
  <define name="wxBLUE" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_BLUE)"/>
  <define name="wxCYAN" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_CYAN)"/>
  <define name="wxGREEN" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_GREEN)"/>
  <define name="wxYELLOW" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_YELLOW)"/>
  <define name="wxLIGHT_GREY" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_LIGHTGREY)"/>
  <define name="wxRED" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_RED)"/>
  <define name="wxWHITE" value="wxStockGDI::GetColour(wxStockGDI::COLOUR_WHITE)"/>
  <define name="wxCROSS_CURSOR" value="wxStockGDI::GetCursor(wxStockGDI::CURSOR_CROSS)"/>
  <define name="wxHOURGLASS_CURSOR" value="wxStockGDI::GetCursor(wxStockGDI::CURSOR_HOURGLASS)"/>
  <define name="wxSTANDARD_CURSOR" value="wxStockGDI::GetCursor(wxStockGDI::CURSOR_STANDARD)"/>
  <define name="wxS_IRUSR" value="00400"/>
  <define name="wxS_IWUSR" value="00200"/>
  <define name="wxS_IXUSR" value="00100"/>
  <define name="wxS_IRGRP" value="00040"/>
  <define name="wxS_IWGRP" value="00020"/>
  <define name="wxS_IXGRP" value="00010"/>
  <define name="wxS_IROTH" value="00004"/>
  <define name="wxS_IWOTH" value="00002"/>
  <define name="wxS_IXOTH" value="00001"/>
  <define name="wxPOSIX_USER_READ" value="00400"/>
  <define name="wxPOSIX_USER_WRITE" value="00200"/>
  <define name="wxPOSIX_USER_EXECUTE" value="00100"/>
  <define name="wxPOSIX_GROUP_READ" value="00040"/>
  <define name="wxPOSIX_GROUP_WRITE" value="00020"/>
  <define name="wxPOSIX_GROUP_EXECUTE" value="00010"/>
  <define name="wxPOSIX_OTHERS_READ" value="00004"/>
  <define name="wxPOSIX_OTHERS_WRITE" value="00002"/>
  <define name="wxPOSIX_OTHERS_EXECUTE" value="00001"/>
  <define name="wxS_DEFAULT" value="2"/>
  <define name="wxS_DIR_DEFAULT" value="3"/>
  <define name="wxPG_INVALID_VALUE" value="INT_MAX"/>
  <define name="wxPG_DONT_RECURSE" value="0x00000000"/>
  <define name="wxPG_BASE_OCT" value="(long)8"/>
  <define name="wxPG_BASE_DEC" value="(long)10"/>
  <define name="wxPG_BASE_HEX" value="(long)16"/>
  <define name="wxPG_BASE_HEXL" value="(long)32"/>
  <define name="wxPG_PREFIX_NONE" value="(long)0"/>
  <define name="wxPG_PREFIX_0x" value="(long)1"/>
  <define name="wxPG_PREFIX_DOLLAR_SIGN" value="(long)2"/>
  <define name="wxPG_KEEP_STRUCTURE" value="0x00000010"/>
  <define name="wxPG_RECURSE" value="0x00000020"/>
  <define name="wxPG_INC_ATTRIBUTES" value="0x00000040"/>
  <define name="wxPG_RECURSE_STARTS" value="0x00000080"/>
  <define name="wxPG_FORCE" value="0x00000100"/>
  <define name="wxPG_SORT_TOP_LEVEL_ONLY" value="0x00000200"/>
  <define name="wxPG_FULL_VALUE" value="0x00000001"/>
  <define name="wxPG_REPORT_ERROR" value="0x00000002"/>
  <define name="wxPG_PROPERTY_SPECIFIC" value="0x00000004"/>
  <define name="wxPG_EDITABLE_VALUE" value="0x00000008"/>
  <define name="wxPG_COMPOSITE_FRAGMENT" value="0x00000010"/>
  <define name="wxPG_UNEDITABLE_COMPOSITE_FRAGMENT" value="0x00000020"/>
  <define name="wxPG_VALUE_IS_CURRENT" value="0x00000040"/>
  <define name="wxPG_PROGRAMMATIC_VALUE" value="0x00000080"/>
  <define name="wxPG_SETVAL_REFRESH_EDITOR" value="0x0000001"/>
  <define name="wxPG_SETVAL_AGGREGATED" value="0x0002"/>
  <define name="wxPG_SETVAL_FROM_PARENT" value="0x0004"/>
  <define name="wxPG_SETVAL_BY_USER" value="0x0008"/>
  <define name="wxPG_CUSTOM_IMAGE_SPACINGY" value="1"/>
  <define name="wxPG_CAPRECTXMARGIN" value="2"/>
  <define name="wxPG_CAPRECTYMARGIN" value="1"/>
  <define name="wxPG_PROP_MODIFIED" value="0x0001"/>
  <define name="wxPG_PROP_DISABLED" value="0x0002"/>
  <define name="wxPG_PROP_HIDDEN" value="0x0004"/>
  <define name="wxPG_PROP_CUSTOMIMAGE" value="0x0008"/>
  <define name="wxPG_PROP_NOEDITOR" value="0x0010"/>
  <define name="wxPG_PROP_COLLAPSED" value="0x0020"/>
  <define name="wxPG_PROP_INVALID_VALUE" value="0x0040"/>
  <define name="wxPG_PROP_WAS_MODIFIED" value="0x0200"/>
  <define name="wxPG_PROP_AGGREGATE" value="0x0400"/>
  <define name="wxPG_PROP_CHILDREN_ARE_COPIES" value="0x0800"/>
  <define name="wxPG_PROP_PROPERTY" value="0x1000"/>
  <define name="wxPG_PROP_CATEGORY" value="0x2000"/>
  <define name="wxPG_PROP_MISC_PARENT" value="0x4000"/>
  <define name="wxPG_PROP_READONLY" value="0x8000"/>
  <define name="wxPG_PROP_COMPOSED_VALUE" value="0x00010000"/>
  <define name="wxPG_PROP_USES_COMMON_VALUE" value="0x00020000"/>
  <define name="wxPG_PROP_AUTO_UNSPECIFIED" value="0x00040000"/>
  <define name="wxPG_PROP_CLASS_SPECIFIC_1" value="0x00080000"/>
  <define name="wxPG_PROP_CLASS_SPECIFIC_2" value="0x00100000"/>
  <define name="wxPG_PROP_BEING_DELETED" value="0x00200000"/>
  <define name="wxPG_PROP_CLASS_SPECIFIC_3" value="0x00400000"/>
  <define name="wxPG_PROP_MAX" value="wxPG_PROP_AUTO_UNSPECIFIED"/>
  <define name="wxNullProperty" value="((wxPGProperty*)NULL)"/>
  <define name="wxPG_ATTR_DEFAULT_VALUE" value="wxS(&quot;DefaultValue&quot;)"/>
  <define name="wxPG_ATTR_MIN" value="wxS(&quot;Min&quot;)"/>
  <define name="wxPG_ATTR_MAX" value="wxS(&quot;Max&quot;)"/>
  <define name="wxPG_ATTR_HINT" value="wxS(&quot;Hint&quot;)"/>
  <define name="wxPG_ATTR_INLINE_HELP" value="wxS(&quot;InlineHelp&quot;)"/>
  <define name="wxPG_FILE_SHOW_FULL_PATH" value="wxS(&quot;ShowFullPath&quot;)"/>
  <define name="wxPG_FILE_SHOW_RELATIVE_PATH" value="wxS(&quot;ShowRelativePath&quot;)"/>
  <define name="wxPG_FILE_INITIAL_PATH" value="wxS(&quot;InitialPath&quot;)"/>
  <define name="wxPG_FILE_DIALOG_TITLE" value="wxS(&quot;DialogTitle&quot;)"/>
  <define name="wxPG_FILE_DIALOG_STYLE" value="wxS(&quot;DialogStyle&quot;)"/>
  <define name="wxPG_DIR_DIALOG_MESSAGE" value="wxS(&quot;DialogMessage&quot;)"/>
  <define name="wxPG_ARRAY_DELIMITER" value="wxS(&quot;Delimiter&quot;)"/>
  <define name="wxPG_DATE_FORMAT" value="wxS(&quot;DateFormat&quot;)"/>
  <define name="wxPG_DATE_PICKER_STYLE" value="wxS(&quot;PickerStyle&quot;)"/>
  <define name="wxPG_ATTR_SPINCTRL_STEP" value="wxS(&quot;Step&quot;)"/>
  <define name="wxPG_ATTR_SPINCTRL_WRAP" value="wxS(&quot;Wrap&quot;)"/>
  <define name="wxPG_ATTR_SPINCTRL_MOTIONSPIN" value="wxS(&quot;MotionSpin&quot;)"/>
  <define name="wxPG_ATTR_MULTICHOICE_USERSTRINGMODE" value="wxS(&quot;UserStringMode&quot;)"/>
  <define name="wxPG_COLOUR_ALLOW_CUSTOM" value="wxS(&quot;AllowCustom&quot;)"/>
  <define name="wxPG_COLOUR_HAS_ALPHA" value="wxS(&quot;HasAlpha&quot;)"/>
  <define name="wxLANGUAGE_DEFAULT" value="0"/>
  <define name="wxLANGUAGE_UNKNOWN" value="1"/>
  <define name="wxLANGUAGE_ABKHAZIAN" value="2"/>
  <define name="wxLANGUAGE_AFAR" value="3"/>
  <define name="wxLANGUAGE_AFRIKAANS" value="4"/>
  <define name="wxLANGUAGE_ALBANIAN" value="5"/>
  <define name="wxLANGUAGE_AMHARIC" value="6"/>
  <define name="wxLANGUAGE_ARABIC" value="7"/>
  <define name="wxLANGUAGE_ARABIC_ALGERIA" value="8"/>
  <define name="wxLANGUAGE_ARABIC_BAHRAIN" value="9"/>
  <define name="wxLANGUAGE_ARABIC_EGYPT" value="10"/>
  <define name="wxLANGUAGE_ARABIC_IRAQ" value="11"/>
  <define name="wxLANGUAGE_ARABIC_JORDAN" value="12"/>
  <define name="wxLANGUAGE_ARABIC_KUWAIT" value="13"/>
  <define name="wxLANGUAGE_ARABIC_LEBANON" value="14"/>
  <define name="wxLANGUAGE_ARABIC_LIBYA" value="15"/>
  <define name="wxLANGUAGE_ARABIC_MOROCCO" value="16"/>
  <define name="wxLANGUAGE_ARABIC_OMAN" value="17"/>
  <define name="wxLANGUAGE_ARABIC_QATAR" value="18"/>
  <define name="wxLANGUAGE_ARABIC_SAUDI_ARABIA" value="19"/>
  <define name="wxLANGUAGE_ARABIC_SUDAN" value="20"/>
  <define name="wxLANGUAGE_ARABIC_SYRIA" value="21"/>
  <define name="wxLANGUAGE_ARABIC_TUNISIA" value="22"/>
  <define name="wxLANGUAGE_ARABIC_UAE" value="23"/>
  <define name="wxLANGUAGE_ARABIC_YEMEN" value="24"/>
  <define name="wxLANGUAGE_ARMENIAN" value="25"/>
  <define name="wxLANGUAGE_ASSAMESE" value="26"/>
  <define name="wxLANGUAGE_ASTURIAN" value="27"/>
  <define name="wxLANGUAGE_AYMARA" value="28"/>
  <define name="wxLANGUAGE_AZERI" value="29"/>
  <define name="wxLANGUAGE_AZERI_CYRILLIC" value="30"/>
  <define name="wxLANGUAGE_AZERI_LATIN" value="31"/>
  <define name="wxLANGUAGE_BASHKIR" value="32"/>
  <define name="wxLANGUAGE_BASQUE" value="33"/>
  <define name="wxLANGUAGE_BELARUSIAN" value="34"/>
  <define name="wxLANGUAGE_BENGALI" value="35"/>
  <define name="wxLANGUAGE_BHUTANI" value="36"/>
  <define name="wxLANGUAGE_BIHARI" value="37"/>
  <define name="wxLANGUAGE_BISLAMA" value="38"/>
  <define name="wxLANGUAGE_BOSNIAN" value="39"/>
  <define name="wxLANGUAGE_BRETON" value="40"/>
  <define name="wxLANGUAGE_BULGARIAN" value="41"/>
  <define name="wxLANGUAGE_BURMESE" value="42"/>
  <define name="wxLANGUAGE_CAMBODIAN" value="43"/>
  <define name="wxLANGUAGE_CATALAN" value="44"/>
  <define name="wxLANGUAGE_CHINESE" value="45"/>
  <define name="wxLANGUAGE_CHINESE_SIMPLIFIED" value="46"/>
  <define name="wxLANGUAGE_CHINESE_TRADITIONAL" value="47"/>
  <define name="wxLANGUAGE_CHINESE_HONGKONG" value="48"/>
  <define name="wxLANGUAGE_CHINESE_MACAU" value="49"/>
  <define name="wxLANGUAGE_CHINESE_SINGAPORE" value="50"/>
  <define name="wxLANGUAGE_CHINESE_TAIWAN" value="51"/>
  <define name="wxLANGUAGE_CORSICAN" value="52"/>
  <define name="wxLANGUAGE_CROATIAN" value="53"/>
  <define name="wxLANGUAGE_CZECH" value="54"/>
  <define name="wxLANGUAGE_DANISH" value="55"/>
  <define name="wxLANGUAGE_DUTCH" value="56"/>
  <define name="wxLANGUAGE_DUTCH_BELGIAN" value="57"/>
  <define name="wxLANGUAGE_ENGLISH" value="58"/>
  <define name="wxLANGUAGE_ENGLISH_UK" value="59"/>
  <define name="wxLANGUAGE_ENGLISH_US" value="60"/>
  <define name="wxLANGUAGE_ENGLISH_AUSTRALIA" value="61"/>
  <define name="wxLANGUAGE_ENGLISH_BELIZE" value="62"/>
  <define name="wxLANGUAGE_ENGLISH_BOTSWANA" value="63"/>
  <define name="wxLANGUAGE_ENGLISH_CANADA" value="64"/>
  <define name="wxLANGUAGE_ENGLISH_CARIBBEAN" value="65"/>
  <define name="wxLANGUAGE_ENGLISH_DENMARK" value="66"/>
  <define name="wxLANGUAGE_ENGLISH_EIRE" value="67"/>
  <define name="wxLANGUAGE_ENGLISH_JAMAICA" value="68"/>
  <define name="wxLANGUAGE_ENGLISH_NEW_ZEALAND" value="69"/>
  <define name="wxLANGUAGE_ENGLISH_PHILIPPINES" value="70"/>
  <define name="wxLANGUAGE_ENGLISH_SOUTH_AFRICA" value="71"/>
  <define name="wxLANGUAGE_ENGLISH_TRINIDAD" value="72"/>
  <define name="wxLANGUAGE_ENGLISH_ZIMBABWE" value="73"/>
  <define name="wxLANGUAGE_ESPERANTO" value="74"/>
  <define name="wxLANGUAGE_ESTONIAN" value="75"/>
  <define name="wxLANGUAGE_FAEROESE" value="76"/>
  <define name="wxLANGUAGE_FARSI" value="77"/>
  <define name="wxLANGUAGE_FIJI" value="78"/>
  <define name="wxLANGUAGE_FINNISH" value="79"/>
  <define name="wxLANGUAGE_FRENCH" value="80"/>
  <define name="wxLANGUAGE_FRENCH_BELGIAN" value="81"/>
  <define name="wxLANGUAGE_FRENCH_CANADIAN" value="82"/>
  <define name="wxLANGUAGE_FRENCH_LUXEMBOURG" value="83"/>
  <define name="wxLANGUAGE_FRENCH_MONACO" value="84"/>
  <define name="wxLANGUAGE_FRENCH_SWISS" value="85"/>
  <define name="wxLANGUAGE_FRISIAN" value="86"/>
  <define name="wxLANGUAGE_GALICIAN" value="87"/>
  <define name="wxLANGUAGE_GEORGIAN" value="88"/>
  <define name="wxLANGUAGE_GERMAN" value="89"/>
  <define name="wxLANGUAGE_GERMAN_AUSTRIAN" value="90"/>
  <define name="wxLANGUAGE_GERMAN_BELGIUM" value="91"/>
  <define name="wxLANGUAGE_GERMAN_LIECHTENSTEIN" value="92"/>
  <define name="wxLANGUAGE_GERMAN_LUXEMBOURG" value="93"/>
  <define name="wxLANGUAGE_GERMAN_SWISS" value="94"/>
  <define name="wxLANGUAGE_GREEK" value="95"/>
  <define name="wxLANGUAGE_GREENLANDIC" value="96"/>
  <define name="wxLANGUAGE_GUARANI" value="97"/>
  <define name="wxLANGUAGE_GUJARATI" value="98"/>
  <define name="wxLANGUAGE_HAUSA" value="99"/>
  <define name="wxLANGUAGE_HEBREW" value="100"/>
  <define name="wxLANGUAGE_HINDI" value="101"/>
  <define name="wxLANGUAGE_HUNGARIAN" value="102"/>
  <define name="wxLANGUAGE_ICELANDIC" value="103"/>
  <define name="wxLANGUAGE_INDONESIAN" value="104"/>
  <define name="wxLANGUAGE_INTERLINGUA" value="105"/>
  <define name="wxLANGUAGE_INTERLINGUE" value="106"/>
  <define name="wxLANGUAGE_INUKTITUT" value="107"/>
  <define name="wxLANGUAGE_INUPIAK" value="108"/>
  <define name="wxLANGUAGE_IRISH" value="109"/>
  <define name="wxLANGUAGE_ITALIAN" value="110"/>
  <define name="wxLANGUAGE_ITALIAN_SWISS" value="111"/>
  <define name="wxLANGUAGE_JAPANESE" value="112"/>
  <define name="wxLANGUAGE_JAVANESE" value="113"/>
  <define name="wxLANGUAGE_KANNADA" value="114"/>
  <define name="wxLANGUAGE_KASHMIRI" value="115"/>
  <define name="wxLANGUAGE_KASHMIRI_INDIA" value="116"/>
  <define name="wxLANGUAGE_KAZAKH" value="117"/>
  <define name="wxLANGUAGE_KERNEWEK" value="118"/>
  <define name="wxLANGUAGE_KINYARWANDA" value="119"/>
  <define name="wxLANGUAGE_KIRGHIZ" value="120"/>
  <define name="wxLANGUAGE_KIRUNDI" value="121"/>
  <define name="wxLANGUAGE_KONKANI" value="122"/>
  <define name="wxLANGUAGE_KOREAN" value="123"/>
  <define name="wxLANGUAGE_KURDISH" value="124"/>
  <define name="wxLANGUAGE_LAOTHIAN" value="125"/>
  <define name="wxLANGUAGE_LATIN" value="126"/>
  <define name="wxLANGUAGE_LATVIAN" value="127"/>
  <define name="wxLANGUAGE_LINGALA" value="128"/>
  <define name="wxLANGUAGE_LITHUANIAN" value="129"/>
  <define name="wxLANGUAGE_MACEDONIAN" value="130"/>
  <define name="wxLANGUAGE_MALAGASY" value="131"/>
  <define name="wxLANGUAGE_MALAY" value="132"/>
  <define name="wxLANGUAGE_MALAYALAM" value="133"/>
  <define name="wxLANGUAGE_MALAY_BRUNEI_DARUSSALAM" value="134"/>
  <define name="wxLANGUAGE_MALAY_MALAYSIA" value="135"/>
  <define name="wxLANGUAGE_MALTESE" value="136"/>
  <define name="wxLANGUAGE_MANIPURI" value="137"/>
  <define name="wxLANGUAGE_MAORI" value="138"/>
  <define name="wxLANGUAGE_MARATHI" value="139"/>
  <define name="wxLANGUAGE_MOLDAVIAN" value="140"/>
  <define name="wxLANGUAGE_MONGOLIAN" value="141"/>
  <define name="wxLANGUAGE_NAURU" value="142"/>
  <define name="wxLANGUAGE_NEPALI" value="143"/>
  <define name="wxLANGUAGE_NEPALI_INDIA" value="144"/>
  <define name="wxLANGUAGE_NORWEGIAN_BOKMAL" value="145"/>
  <define name="wxLANGUAGE_NORWEGIAN_NYNORSK" value="146"/>
  <define name="wxLANGUAGE_OCCITAN" value="147"/>
  <define name="wxLANGUAGE_ORIYA" value="148"/>
  <define name="wxLANGUAGE_OROMO" value="149"/>
  <define name="wxLANGUAGE_PASHTO" value="150"/>
  <define name="wxLANGUAGE_POLISH" value="151"/>
  <define name="wxLANGUAGE_PORTUGUESE" value="152"/>
  <define name="wxLANGUAGE_PORTUGUESE_BRAZILIAN" value="153"/>
  <define name="wxLANGUAGE_PUNJABI" value="154"/>
  <define name="wxLANGUAGE_QUECHUA" value="155"/>
  <define name="wxLANGUAGE_RHAETO_ROMANCE" value="156"/>
  <define name="wxLANGUAGE_ROMANIAN" value="157"/>
  <define name="wxLANGUAGE_RUSSIAN" value="158"/>
  <define name="wxLANGUAGE_RUSSIAN_UKRAINE" value="159"/>
  <define name="wxLANGUAGE_SAMI" value="160"/>
  <define name="wxLANGUAGE_SAMOAN" value="161"/>
  <define name="wxLANGUAGE_SANGHO" value="162"/>
  <define name="wxLANGUAGE_SANSKRIT" value="163"/>
  <define name="wxLANGUAGE_SCOTS_GAELIC" value="164"/>
  <define name="wxLANGUAGE_SERBIAN" value="165"/>
  <define name="wxLANGUAGE_SERBIAN_CYRILLIC" value="166"/>
  <define name="wxLANGUAGE_SERBIAN_LATIN" value="167"/>
  <define name="wxLANGUAGE_SERBO_CROATIAN" value="168"/>
  <define name="wxLANGUAGE_SESOTHO" value="169"/>
  <define name="wxLANGUAGE_SETSWANA" value="170"/>
  <define name="wxLANGUAGE_SHONA" value="171"/>
  <define name="wxLANGUAGE_SINDHI" value="172"/>
  <define name="wxLANGUAGE_SINHALESE" value="173"/>
  <define name="wxLANGUAGE_SISWATI" value="174"/>
  <define name="wxLANGUAGE_SLOVAK" value="175"/>
  <define name="wxLANGUAGE_SLOVENIAN" value="176"/>
  <define name="wxLANGUAGE_SOMALI" value="177"/>
  <define name="wxLANGUAGE_SPANISH" value="178"/>
  <define name="wxLANGUAGE_SPANISH_ARGENTINA" value="179"/>
  <define name="wxLANGUAGE_SPANISH_BOLIVIA" value="180"/>
  <define name="wxLANGUAGE_SPANISH_CHILE" value="181"/>
  <define name="wxLANGUAGE_SPANISH_COLOMBIA" value="182"/>
  <define name="wxLANGUAGE_SPANISH_COSTA_RICA" value="183"/>
  <define name="wxLANGUAGE_SPANISH_DOMINICAN_REPUBLIC" value="184"/>
  <define name="wxLANGUAGE_SPANISH_ECUADOR" value="185"/>
  <define name="wxLANGUAGE_SPANISH_EL_SALVADOR" value="186"/>
  <define name="wxLANGUAGE_SPANISH_GUATEMALA" value="187"/>
  <define name="wxLANGUAGE_SPANISH_HONDURAS" value="188"/>
  <define name="wxLANGUAGE_SPANISH_MEXICAN" value="189"/>
  <define name="wxLANGUAGE_SPANISH_MODERN" value="190"/>
  <define name="wxLANGUAGE_SPANISH_NICARAGUA" value="191"/>
  <define name="wxLANGUAGE_SPANISH_PANAMA" value="192"/>
  <define name="wxLANGUAGE_SPANISH_PARAGUAY" value="193"/>
  <define name="wxLANGUAGE_SPANISH_PERU" value="194"/>
  <define name="wxLANGUAGE_SPANISH_PUERTO_RICO" value="195"/>
  <define name="wxLANGUAGE_SPANISH_URUGUAY" value="196"/>
  <define name="wxLANGUAGE_SPANISH_US" value="197"/>
  <define name="wxLANGUAGE_SPANISH_VENEZUELA" value="198"/>
  <define name="wxLANGUAGE_SUNDANESE" value="199"/>
  <define name="wxLANGUAGE_SWAHILI" value="200"/>
  <define name="wxLANGUAGE_SWEDISH" value="201"/>
  <define name="wxLANGUAGE_SWEDISH_FINLAND" value="202"/>
  <define name="wxLANGUAGE_TAGALOG" value="203"/>
  <define name="wxLANGUAGE_TAJIK" value="204"/>
  <define name="wxLANGUAGE_TAMIL" value="205"/>
  <define name="wxLANGUAGE_TATAR" value="206"/>
  <define name="wxLANGUAGE_TELUGU" value="207"/>
  <define name="wxLANGUAGE_THAI" value="208"/>
  <define name="wxLANGUAGE_TIBETAN" value="209"/>
  <define name="wxLANGUAGE_TIGRINYA" value="210"/>
  <define name="wxLANGUAGE_TONGA" value="211"/>
  <define name="wxLANGUAGE_TSONGA" value="212"/>
  <define name="wxLANGUAGE_TURKISH" value="213"/>
  <define name="wxLANGUAGE_TURKMEN" value="214"/>
  <define name="wxLANGUAGE_TWI" value="215"/>
  <define name="wxLANGUAGE_UIGHUR" value="216"/>
  <define name="wxLANGUAGE_UKRAINIAN" value="217"/>
  <define name="wxLANGUAGE_URDU" value="218"/>
  <define name="wxLANGUAGE_URDU_INDIA" value="219"/>
  <define name="wxLANGUAGE_URDU_PAKISTAN" value="220"/>
  <define name="wxLANGUAGE_UZBEK" value="221"/>
  <define name="wxLANGUAGE_UZBEK_CYRILLIC" value="222"/>
  <define name="wxLANGUAGE_UZBEK_LATIN" value="223"/>
  <define name="wxLANGUAGE_VALENCIAN" value="224"/>
  <define name="wxLANGUAGE_VIETNAMESE" value="225"/>
  <define name="wxLANGUAGE_VOLAPUK" value="226"/>
  <define name="wxLANGUAGE_WELSH" value="227"/>
  <define name="wxLANGUAGE_WOLOF" value="228"/>
  <define name="wxLANGUAGE_XHOSA" value="229"/>
  <define name="wxLANGUAGE_YIDDISH" value="230"/>
  <define name="wxLANGUAGE_YORUBA" value="231"/>
  <define name="wxLANGUAGE_ZHUANG" value="232"/>
  <define name="wxLANGUAGE_ZULU" value="233"/>
  <define name="wxLANGUAGE_KABYLE" value="234"/>
  <define name="wxLANGUAGE_USER_DEFINED" value="235"/>
  <define name="wxXML_NO_INDENTATION" value="(-1)"/>
  <define name="wxXML_ELEMENT_NODE" value="1"/>
  <define name="wxXML_ATTRIBUTE_NODE" value="2"/>
  <define name="wxXML_TEXT_NODE" value="3"/>
  <define name="wxXML_CDATA_SECTION_NODE" value="4"/>
  <define name="wxXML_ENTITY_REF_NODE" value="5"/>
  <define name="wxXML_ENTITY_NODE" value="6"/>
  <define name="wxXML_PI_NODE" value="7"/>
  <define name="wxXML_COMMENT_NODE" value="8"/>
  <define name="wxXML_DOCUMENT_NODE" value="9"/>
  <define name="wxXML_DOCUMENT_TYPE_NODE" value="10"/>
  <define name="wxXML_DOCUMENT_FRAG_NODE" value="11"/>
  <define name="wxXML_NOTATION_NODE" value="12"/>
  <define name="wxXML_HTML_DOCUMENT_NODE" value="13"/>
  <define name="wxXMLDOC_NONE" value="0"/>
  <define name="wxXMLDOC_KEEP_WHITESPACE_NODES" value="1"/>
  <define name="wxInvalidOffset" value="-1"/>
  <define name="wxPATH_NATIVE" value="0"/>
  <define name="wxPATH_UNIX" value="1"/>
  <define name="wxPATH_BEOS" value="1"/>
  <define name="wxPATH_MAC" value="2"/>
  <define name="wxPATH_DOS" value="3"/>
  <define name="wxPATH_WIN" value="3"/>
  <define name="wxPATH_OS2" value="3"/>
  <define name="wxPATH_VMS" value="4"/>
  <define name="wxPATH_MAX" value="5"/>
  <define name="wxSHUTDOWN_FORCE" value="1"/>
  <define name="wxSHUTDOWN_POWEROFF" value="2"/>
  <define name="wxSHUTDOWN_REBOOT" value="4"/>
  <define name="wxSHUTDOWN_LOGOFF" value="8"/>
  <define name="wxStrip_Mnemonics" value="1"/>
  <define name="wxStrip_Accel" value="2"/>
  <define name="wxStrip_All" value="3"/>
  <define name="wxKILL_CHILDREN" value="1"/>
  <define name="wxKILL_NOCHILDREN" value="0"/>
  <define name="wxKILL_OK" value="0"/>
  <define name="wxKILL_BAD_SIGNAL" value="1"/>
  <define name="wxKILL_ACCESS_DENIED" value="2"/>
  <define name="wxKILL_NO_PROCESS" value="3"/>
  <define name="wxKILL_ERROR" value="4"/>
  <define name="wxSIGNONE" value="0"/>
  <define name="wxSIGHUP" value="1"/>
  <define name="wxSIGINT" value="2"/>
  <define name="wxSIGQUIT" value="3"/>
  <define name="wxSIGILL" value="4"/>
  <define name="wxSIGTRAP" value="5"/>
  <define name="wxSIGABRT" value="6"/>
  <define name="wxSIGEMT" value="7"/>
  <define name="wxSIGFPE" value="8"/>
  <define name="wxSIGKILL" value="9"/>
  <define name="wxSIGBUS" value="10"/>
  <define name="wxSIGSEGV" value="11"/>
  <define name="wxSIGSYS" value="12"/>
  <define name="wxSIGPIPE" value="13"/>
  <define name="wxSIGALRM" value="14"/>
  <define name="wxSIGTERM" value="15"/>
  <define name="wxStrip_Mnemonics" value="1"/>
  <define name="wxStrip_Accel" value="2"/>
  <define name="wxStrip_All" value="3"/>
  <!--  wxThread and wxProcess priorities -->
  <define name="wxPRIORITY_MIN" value="0"/>
  <define name="wxPRIORITY_DEFAULT" value="50"/>
  <define name="wxPRIORITY_MAX" value="100"/>
  <define name="wxBIG_ENDIAN" value="4321"/>
  <define name="wxLITTLE_ENDIAN" value="1234"/>
  <define name="wxPDP_ENDIAN" value="3412"/>
  <define name="wxFloat32" value="float"/>
  <define name="wxFloat64" value="double"/>
  <define name="wxDouble" value="double"/>
  <define name="wxWindowID" value="int"/>
  <define name="wxNotebookPage" value="wxWindow"/>
  <define name="wxArtClient" value="wxString"/>
  <define name="wxArtID" value="wxString"/>
  <define name="wxNullPtr" value="nullptr"/>
  <define name="wxDash" value="wxInt8"/>
  <define name="wxChar" value="char"/>
  <define name="wxSChar" value="signed char"/>
  <define name="wxUChar" value="unsigned char"/>
  <define name="wxAlignment" value="int"/>
  <define name="wxCoord" value="int"/>
  <define name="wxTextCoord" value="long"/>
  <define name="wxEmptyString" value="wxString()"/>
  <podtype name="wxInt8" sign="s" size="1"/>
  <podtype name="wxUint8" sign="u" size="1"/>
  <podtype name="wxByte" sign="u" size="1"/>
  <podtype name="wxInt16" sign="s" size="2"/>
  <podtype name="wxUint16" sign="u" size="2"/>
  <podtype name="wxWord" sign="u" size="2"/>
  <podtype name="wxChar16" sign="u" size="2"/>
  <podtype name="wxInt32" sign="s" size="4"/>
  <podtype name="wxUint32" sign="u" size="4"/>
  <podtype name="wxDword" sign="u" size="4"/>
  <podtype name="wxChar32" sign="u" size="4"/>
  <podtype name="wxInt64" sign="s" size="8"/>
  <podtype name="wxUint64" sign="u" size="8"/>
  <podtype name="wxIntPtr" sign="s"/>
  <podtype name="wxUIntPtr" sign="u"/>
  <!-- typedef unsigned short wxDateTime_t; -->
  <podtype name="wxDateTime_t" sign="u"/>
  <podtype name="wxLogLevel"/>
  <!-- https://docs.wxwidgets.org/trunk/group__group__class__smartpointers.html -->
  <smart-pointer class-name="wxObjectDataPtr"/>
  <smart-pointer class-name="wxScopedArray"/>
  <smart-pointer class-name="wxScopedPtr"/>
  <smart-pointer class-name="wxSharedPtr"/>
  <smart-pointer class-name="wxWeakRefDynamic"/>
  <smart-pointer class-name="wxWeakRef"/>
  <smart-pointer class-name="wxWindowPtr"/>
  <smart-pointer class-name="wxScopedTiedPtr"/>
  <smart-pointer class-name="wxTrackable"/>
  <!-- ########## wxWidgets containers ########## -->
  <!-- wxString https://docs.wxwidgets.org/3.0/classwx_string.html -->
  <container id="wxString" startPattern="wxString" endPattern="" opLessAllowed="true" itEndPattern=":: iterator|const_iterator|reverse_iterator|const_reverse_iterator">
    <type string="std-like"/>
    <size>
      <function name="resize" action="resize"/>
      <function name="clear" action="clear"/>
      <function name="Clear" action="clear"/>
      <function name="Empty" action="clear"/>
      <function name="size" yields="size"/>
      <function name="length" yields="size"/>
      <function name="Length" yields="size"/>
      <function name="Len" yields="size"/>
      <function name="empty" yields="empty"/>
      <function name="IsEmpty" yields="empty"/>
      <function name="IsNull" yields="empty"/>
      <function name="erase" action="erase"/>
      <function name="insert" action="insert"/>
      <function name="swap" action="change"/>
      <function name="assign" action="change"/>
      <function name="append" action="change"/>
      <function name="Append" action="change"/>
      <function name="Prepend" action="change"/>
      <function name="replace" action="change"/>
      <function name="Replace" action="change"/>
      <function name="reserve" action="change-internal"/>
      <function name="shrink_to_fit" action="change-internal"/>
      <function name="Shrink" action="change-internal"/>
      <function name="Alloc" action="change-internal"/>
      <function name="Trim" action="change"/>
      <function name="Truncate" action="change"/>
      <function name="Remove" action="change"/>
      <function name="RemoveLast" action="change"/>
      <function name="Pad" action="change"/>
    </size>
    <access indexOperator="array-like">
      <function name="begin" yields="start-iterator"/>
      <function name="rbegin" yields="start-iterator"/>
      <function name="end" yields="end-iterator"/>
      <function name="rend" yields="end-iterator"/>
      <function name="at" yields="at_index"/>
      <function name="data" yields="buffer"/>
      <function name="c_str" yields="buffer-nt"/>
      <function name="wx_str" yields="buffer-nt"/>
      <function name="wc_str" yields="buffer-nt"/>
      <function name="find" action="find"/>
      <function name="Find" action="find"/>
      <function name="First" action="find"/>
      <function name="rfind" action="find"/>
      <function name="find_last_of" action="find"/>
      <function name="find_last_not_of" action="find"/>
      <function name="find_first_of" action="find"/>
      <function name="find_first_not_of" action="find"/>
    </access>
  </container>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#addd9ccfa3ae2b7ab2d66bcbf034d0be0 -->
  <!-- static wxString wxString::Format(const wxString & format, ...) -->
  <function name="wxString::Format">
    <returnValue type="wxString"/>
    <const/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- size_t wxString::Replace(const wxString & strOld, const wxString & strNew, bool replaceAll = true) -->
  <function name="wxString::Replace">
    <returnValue type="size_t"/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="bool">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxString::SetChar(size_t n, wxUniChar ch) -->
  <function name="wxString::SetChar">
    <returnValue type="size_t"/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- wxUniChar wxString::GetChar(size_t n) const -->
  <function name="wxString::GetChar">
    <returnValue type="wxUniChar"/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#a9588b7f2684b9a6a924dc3746a2b2f8d -->
  <!-- int wxString::Printf(const wxString & format, ...) -->
  <function name="wxString::Printf">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxLogStatus(const char * format, ...) -->
  <!-- void wxLogSysError(const char * format, ...) -->
  <function name="wxLogStatus,wxLogSysError">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--static wxString wxStandardPaths::MSWGetShellDir(int csidl)-->
  <function name="wxStandardPaths::MSWGetShellDir">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <pure/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--#define wxSTRINGIZE_T(x) -->
  <!--#define wxSTRINGIZE(x) -->
  <!--These are defined as macros in wxWidgets. Non the less, this is configured as
      as function to catch unused return values. -->
  <function name="wxSTRINGIZE_T,wxSTRINGSIZE">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--#define wxCONCAT(x1,x2) -->
  <!--#define wxCONCAT3(x1,x2,x3) -->
  <!--#define wxCONCAT4(x1,x2,x3,x4) -->
  <!--#define wxCONCAT5(x1,x2,x3,x4,x5) -->
  <!--This is defined as macro in wxWidgets. Non the less, this is configured as
      as function to catch unused return values. -->
  <function name="wxCONCAT,wxCONCAT3,wxCONCAT4,wxCONCAT5">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="any" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ace32756bab999f8aae9be0cf981fc449 -->
  <!-- bool wxString::IsEmpty() -->
  <function name="wxString::IsEmpty">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ae0a2020695a6ecd9ee49c14fe7429176 -->
  <!-- bool wxString::IsNull() -->
  <function name="wxString::IsNull">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <warn severity="style">This is the same as 'wxString::IsEmpty' and is kept for wxWidgets 1.xx compatibility. You should not use it in new code.</warn>
  </function>
  <!-- bool wxString::Contains(const wxString & str) const-->
  <function name="wxString::Contains">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function; you should not use it in new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#a42fc468fb16b820b1b599fadfc6285cb -->
  <!-- bool wxString::IsNumber() -->
  <function name="wxString::IsNumber">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function; you should not use it in new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#a932ddb6b4786213596c3e41b1fa1f7c5 -->
  <!-- bool wxString::IsAscii() -->
  <function name="wxString::IsAscii">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#a1b27a667e2c97b561e8dbb917e491cf0 -->
  <!-- bool wxString::IsWord() -->
  <function name="wxString::IsWord">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function; you should not use it in new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- size_t wxString::Len () const -->
  <!-- size_t wxString::length () const -->
  <function name="wxString::Len,wxString::length">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="size_t"/>
    <use-retval/>
  </function>
  <!-- wxUniChar     wxString::Last () const -->
  <!-- wxUniCharRef  wxString::Last () const -->
  <function name="wxString::Last">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxUniChar"/>
    <use-retval/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function; you should not use it in new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- size_t wxString::Length () const -->
  <function name="wxString::Length">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="size_t"/>
    <use-retval/>
    <warn severity="style">This is the same as 'wxString::Len' and is kept for wxWidgets 1.xx compatibility. You should not use it in new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- wxString wxString::Lower() -->
  <function name="wxString::Lower">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- wxString& wxString::MakeCapitalized()-->
  <function name="wxString::MakeCapitalized">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- wxString& wxString::MakeLower()-->
  <function name="wxString::MakeLower">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- wxString& wxString::MakeUpper()-->
  <function name="wxString::MakeUpper">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_string.html#ab20a87ca731a52c36ec674dae2213ad8 -->
  <!-- bool wxString::Matches(const wxString & mask) const -->
  <function name="wxString::Matches">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#gaec3640fa3b46c970ff0c86fe354e59ff -->
  <!-- unsigned long wxSysErrorCode() -->
  <function name="wxSysErrorCode">
    <noreturn>false</noreturn>
    <returnValue type="unsigned long"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga249358701f3c2d410088ddf7a61d8564 -->
  <!-- void wxLogMessage(const char * formatString, ...) -->
  <function name="wxLogMessage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#gaf57b7e28ab76bacf10b3be044e8bd634 -->
  <!-- void wxLogVerbose(const char * formatString, ...) -->
  <function name="wxLogVerbose">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga0c2b19580ef6721508e6d69534b10e90 -->
  <!-- void wxLogWarning(const char * formatString, ...) -->
  <function name="wxLogWarning">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- #define wxLogApiError(api, rc) -->
  <function name="wxLogApiError">
    <noreturn>true</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga4ae39c06cbeaa5461cd1b5c293a31403 -->
  <!-- void wxLogFatalError(const char * formatString, ...) -->
  <function name="wxLogFatalError">
    <!-- From the docs: Like wxLogError(), but also terminates the program with the exit code 3. -->
    <noreturn>true</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga0dd3c633f990f794e76065c9a7af4c87 -->
  <!-- void wxLogError(const char * formatString, ...) -->
  <function name="wxLogError">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga947e317db477914c12b13c4534867ec9 -->
  <!-- void wxLogTrace(const char *mask, const char *formatString, ...) -->
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#gae28a46b220921cd87a6f75f0842294c5 -->
  <!-- void wxLogTrace(wxTraceMask mask, const char *formatString, ...) // Deprecated! -->
  <function name="wxLogTrace">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga9c530ae20eb423744f90874d2c97d02b -->
  <!-- void wxLogDebug(const char *formatString, ...) -->
  <function name="wxLogDebug">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#ga28f01715af5aaf37caffdc5bc00fde3f -->
  <!-- void wxLogSysError(const char *formatString, ...) -->
  <function name="wxLogSysError">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#gac47036f8bd8f711bf4646418c71828a5 -->
  <!-- void wxLogGeneric(wxLogLevel level, const char * formatString, ...) -->
  <function name="wxLogGeneric">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__log.html#gadf3ee751bc5ecbbc6d73fa0ecf3217f0 -->
  <!-- void wxLogInfo(const char * formatString, ...) -->
  <function name="wxLogInfo">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_spin_ctrl.html#a1db15e6f350f71f2fcba821ce69a531c	-->
  <!-- int wxSpinCtrl::GetMax() const -->
  <!-- int wxSpinCtrl::GetMin() const -->
  <!-- int wxSpinCtrl::GetBase() const -->
  <!-- int wxSpinCtrl::GetValue() const -->
  <function name="wxSpinCtrl::GetMax,wxSpinCtrl::GetMin,wxSpinCtrl::GetBase,wxSpinCtrl::GetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="int"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_spin_ctrl.html#a1db15e6f350f71f2fcba821ce69a531c	-->
  <!-- bool wxSpinCtrl::SetBase (int base)-->
  <function name="wxSpinCtrl::SetBase">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <pure/>
    <returnValue type="bool"><![CDATA[arg1==10 || arg1==16]]></returnValue>
    <arg nr="1" direction="in">
      <valid>10,16</valid>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::HideRow(int row)-->
  <!-- void wxGrid::ShowRow(int row)-->
  <!-- void wxGrid::HideCol(int col)-->
  <!-- void wxGrid::ShowCol(int col)-->
  <!-- void wxGrid::AutoSizeColLabelSize(int col)-->
  <function name="wxGrid::HideRow,wxGrid::ShowRow,wxGrid::HideCol,wxGrid::ShowCol,wxGrid::AutoSizeColLabelSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <valid>0:</valid>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxString wxListBox::GetString (unsigned int n) const-->
  <function name="wxListBox::GetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in">
      <valid>0:</valid>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--virtual int wxListBox::GetSelection(void) const-->
  <function name="wxListBox::GetSelection">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="int"/>
  </function>
  <!--virtual int wxListBox::GetSelections(wxArrayInt & selections) const-->
  <function name="wxListBox::GetSelections">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- unsigned int wxSpinCtrlDouble::GetDigits() const-->
  <function name="wxSpinCtrlDouble::GetDigits">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="unsigned int"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- double wxSpinCtrlDouble::GetIncrement() const-->
  <function name="wxSpinCtrlDouble::GetIncrement">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="double"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- double wxSpinCtrlDouble::GetMax() const-->
  <function name="wxSpinCtrlDouble::GetMax">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="double"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- double wxSpinCtrlDouble::GetMin() const-->
  <function name="wxSpinCtrlDouble::GetMin">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="double"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- double wxSpinCtrlDouble::GetValue() const-->
  <function name="wxSpinCtrlDouble::GetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="double"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- void wxSpinCtrlDouble::SetDigits (unsigned int digits) -->
  <function name="wxSpinCtrlDouble::SetDigits">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <valid>0:</valid>
      <not-bool/>
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- void wxSpinCtrlDouble::SetIncrement(double inc) -->
  <function name="wxSpinCtrlDouble::SetIncrement">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSpinCtrlDouble::SetRange(double minVal, double maxVal) -->
  <!-- void wxSpinCtrl::SetRange(int minVal, int maxVal) -->
  <function name="wxSpinCtrlDouble::SetRange,wxSpinCtrl::SetRange">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxItemContainerImmutable::SetStringSelection( const wxString & s ) -->
  <!-- bool wxChoice::SetStringSelection( const wxString & s ) -->
  <!-- bool wxComboBox::SetStringSelection( const wxString & s ) -->
  <function name="wxItemContainerImmutable::SetStringSelection,wxChoice::SetStringSelection,wxComboBox::SetStringSelection">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_spin_ctrl_double.html-->
  <!-- virtual void wxSpinCtrlDouble::SetValue(const wxString & text)-->
  <!-- void wxSpinCtrlDouble::SetValue(double value)-->
  <function name="wxSpinCtrlDouble::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_slider.html	-->
  <!-- int wxSlider::GetLineSize () const	-->
  <!-- int wxSlider::GetMax () const	-->
  <!-- int wxSlider::GetMin () const	-->
  <!-- int wxSlider::GetPageSize () const	-->
  <!-- int wxSlider::GetSelEnd () const	-->
  <!-- int wxSlider::GetSelStart () const	-->
  <!-- int wxSlider::GetThumbLength () const	-->
  <!-- int wxSlider::GetTickFreq () const	-->
  <!-- int wxSlider::GetValue () const	-->
  <function name="wxSlider::GetLineSize,wxSlider::GetMax,wxSlider::GetMin,wxSlider::GetPageSize,wxSlider::GetSelEnd,wxSlider::GetSelStart,wxSlider::GetThumbLength,wxSlider::GetTickFreq,wxSlider::GetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="int"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- int wxTimer::GetId () const	-->
  <!-- int wxTimer::GetInterval () const	-->
  <function name="wxTimer::GetId,wxTimer::GetInterval">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="int"/>
  </function>
  <!-- static int wxLocale::GetSystemLanguage(void)	-->
  <function name="wxLocale::GetSystemLanguage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="int"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- wxEvtHandler * GetOwner () const	-->
  <function name="wxTimer::GetOwner">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="wxEvtHandler *"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- bool wxTimer::IsOneShot () const -->
  <!-- bool wxTimer::IsRunning () const -->
  <function name="wxTimer::IsOneShot,wxTimer::IsRunning">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="bool"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- virtual void Notify ()-->
  <function name="wxTimer::Notify">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- void SetOwner (wxEvtHandler *owner, int id=-1)-->
  <function name="wxTimer::SetOwner">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-null/>
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="-1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- virtual bool wxTimer::Start (int milliseconds=-1, bool oneShot=wxTIMER_CONTINUOUS) -->
  <function name="wxTimer::Start">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="-1">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxTIMER_CONTINUOUS">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- bool wxTimer::StartOnce (int milliseconds=-1) -->
  <function name="wxTimer::StartOnce">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="-1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_timer.html	-->
  <!-- virtual void wxTimer::Stop () -->
  <function name="wxTimer::Stop">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual bool wxRadioBox::Enable (unsigned int n, bool enable=true) -->
  <!-- virtual bool wxRadioBox::Enable (bool enable=true) -->
  <function name="wxRadioBox::Enable">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxWindowBase::SetSizerAndFit (wxSizer * sizer, bool deleteOld = true) -->
  <!-- void wxWindow::SetSizerAndFit (wxSizer * sizer, bool deleteOld = true) -->
  <!-- void wxPanel::SetSizerAndFit (wxSizer * sizer, bool deleteOld = true) -->
  <function name="wxWindow::SetSizerAndFit,wxPanel::SetSizerAndFit,wxWindowBase::SetSizerAndFit">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- static void wxLog::SetVerbose(bool verbose=true) -->
  <function name="wxLog::SetVerbose">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- static wxString wxLocale::GetLanguageName(int lang) -->
  <function name="wxLocale::GetLanguageName">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual int wxRadioBox::FindString (const wxString &string, bool bCase=false) const -->
  <function name="wxRadioBox::FindString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="int"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- unsigned int wxRadioBox::GetColumnCount () const -->
  <function name="wxRadioBox::GetColumnCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned int"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual int wxRadioBox::GetItemFromPoint (const wxPoint &pt) const -->
  <function name="wxRadioBox::GetItemFromPoint">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="int"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- wxString GetItemHelpText (unsigned int item) const -->
  <function name="wxRadioBox::GetItemHelpText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- wxToolTip * GetItemToolTip (unsigned int item) const -->
  <function name="wxRadioBox::GetItemToolTip">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxToolTip *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- unsigned int GetRowCount () const -->
  <function name="wxRadioBox::GetRowCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned int"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual bool IsItemEnabled (unsigned int n) const -->
  <function name="wxRadioBox::IsItemEnabled">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual bool wxRadioBox::IsItemShown (unsigned int n) const -->
  <function name="wxRadioBox::IsItemShown">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- void wxRadioBox::SetItemHelpText (unsigned int item, const wxString &helptext) -->
  <function name="wxRadioBox::SetItemHelpText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- void wxRadioBox::SetItemToolTip (unsigned int item, const wxString &text) -->
  <function name="wxRadioBox::SetItemToolTip">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxMenuItem* wxMenu::AppendSubMenu(wxMenu * submenu, const wxString & text, const wxString & help = wxEmptyString) -->
  <function name="wxMenu::AppendSubMenu">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxMenuItem*"/>
    <arg nr="1" direction="in">
      <not-null/>
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
  </function>
  <!-- void wxMenu::Enable(int id, bool enable) -->
  <!-- void wxMenu::Check(int id, bool check) -->
  <function name="wxMenu::Enable,wxMenu::Check">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxMenu::SetHelpString(int id, const wxString & helpString) -->
  <function name="wxMenu::SetHelpString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxStringTokenizer::SetString(const wxString & str, const wxString & delims = wxDEFAULT_DELIMITERS, wxStringTokenizerMode mode = wxTOKEN_DEFAULT) -->
  <function name="wxStringTokenizer::SetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxDEFAULT_DELIMITERS"/>
    <arg nr="3" direction="in" default="wxTOKEN_DEFAULT"/>
  </function>
  <!-- virtual void wxTextEntry::SetSelection (long from, long to) -->
  <!-- virtual void wxTextEntry::SetSelection (int n) -->
  <!-- virtual void wxRadioBox::SetSelection (int n) -->
  <!-- virtual void wxTextCtrl::SetSelection (long from, long to) -->
  <!-- virtual void wxSpinCtrl::SetSelection (long from, long to) -->
  <!-- virtual void wxComboBox::SetSelection (long from, long to) -->
  <!-- virtual void wxComboBox::SetSelection (int n) -->
  <!-- virtual void wxComboCtrl::SetSelection (long from, long to) -->
  <!-- virtual void wxComboCtrl::SetSelection (int n) -->
  <!-- virtual void wxOwnerDrawnComboBox::SetSelection (long from, long to) -->
  <!-- virtual void wxOwnerDrawnComboBox::SetSelection (int n) -->
  <function name="wxTextEntry::SetSelection,wxTextCtrl::SetSelection,wxSpinCtrl::SetSelection,wxComboBox::SetSelection,wxRadioBox::SetSelection,wxComboCtrl::SetSelection,wxOwnerDrawnComboBox::SetSelection">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxTextCtrl::SaveFile(const wxString & filename = wxEmptyString, int fileType = wxTEXT_TYPE_ANY )-->
  <function name="wxTextCtrl::SaveFile">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxEmptyString"/>
    <arg nr="2" direction="in" default="wxTEXT_TYPE_ANY">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual bool Show (unsigned int item, bool show=true) -->
  <function name="wxRadioBox::Show">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- long wxListCtrl::InsertItem(wxListItem & info) -->
  <!-- long wxListCtrl::InsertItem(long index, const wxString & label) -->
  <!-- long wxListCtrl::InsertItem(long index, int imageIndex)-->
  <!-- long wxListCtrl::InsertItem(long index, const wxString & label, int imageIndex)-->
  <!-- long wxListView::InsertItem(wxListItem & info) -->
  <!-- long wxListView::InsertItem(long index, const wxString & label) -->
  <!-- long wxListView::InsertItem(long index, int imageIndex)-->
  <!-- long wxListView::InsertItem(long index, const wxString & label, int imageIndex)-->
  <function name="wxListCtrl::InsertItem,wxListView::InsertItem">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="long"/>
    <arg nr="any" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxTopLevelWindowBase::Show (bool show=true) -->
  <!-- virtual bool wxWindow::Show (bool show=true) -->
  <!-- virtual bool wxStaticText::Show (bool show=true) -->
  <!-- virtual bool wxButton::Show (bool show=true) -->
  <!-- virtual bool wxStaticBitmap::Show (bool show=true) -->
  <!-- virtual bool wxTextCtrl::Show (bool show=true) -->
  <!-- virtual bool wxPopupTransientWindow::Show (bool show=true) -->
  <!-- virtual bool wxSpinCtrl::Show (bool show=true) -->
  <!-- virtual bool wxChoice::Show (bool show=true) -->
  <!-- virtual bool wxBitmapButton::Show (bool show=true) -->
  <!-- virtual bool wxCheckBox::Show (bool show=true) -->
  <!-- virtual bool wxFrame::Show (bool show=true) -->
  <!-- virtual bool wxSashLayoutWindow::Show (bool show=true) -->
  <!-- virtual bool wxPreviewFrame::Show (bool show=true) -->
  <!-- virtual bool wxMenuBar::Show (bool show=true) -->
  <function name="wxTopLevelWindowBase::Show,wxMenuBar::Show,wxWindow::Show,wxFrame::Show,wxPreviewFrame::Show,wxStaticText::Show,wxSashLayoutWindow::Show,wxButton::Show,wxStaticBitmap::Show,wxTextCtrl::Show,wxPopupTransientWindow::Show,wxSpinCtrl::Show,wxChoice::Show,wxBitmapButton::Show,wxCheckBox::Show">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxWindow::DragAcceptFiles(bool accept) -->
  <!-- virtual void wxTextCtrl::DragAcceptFiles(bool accept) -->
  <function name="wxWindow::DragAcceptFiles,wxTextCtrl::DragAcceptFiles">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxSizer::Show(wxWindow * window, bool show = true, bool recursive = false) -->
  <!-- bool wxSizer::Show(wxSizer * window, bool show = true, bool recursive = false) -->
  <!-- bool wxSizer::Show(size_t index, bool show = true) -->
  <!-- bool wxStaticBoxSizer::Show(wxWindow * window, bool show = true, bool recursive = false) -->
  <!-- bool wxStaticBoxSizer::Show(wxSizer * window, bool show = true, bool recursive = false) -->
  <!-- bool wxStaticBoxSizer::Show(size_t index, bool show = true) -->
  <!-- bool wxBoxSizer::Show(wxWindow * window, bool show = true, bool recursive = false) -->
  <!-- bool wxBoxSizer::Show(wxSizer * window, bool show = true, bool recursive = false) -->
  <!-- bool wxBoxSizer::Show(size_t index, bool show = true) -->
  <!-- bool wxFlexGridSizer::Show(wxWindow * window, bool show = true, bool recursive = false) -->
  <!-- bool wxFlexGridSizer::Show(wxSizer * window, bool show = true, bool recursive = false) -->
  <!-- bool wxFlexGridSizer::Show(size_t index, bool show = true) -->
  <function name="wxSizer::Show,wxStaticBoxSizer::Show,wxBoxSizer::Show,wxFlexGridSizer::Show">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSizer::ShowItems( bool show ) -->
  <function name="wxSizer::ShowItems">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::ShowCol( int col ) -->
  <!-- void wxGrid::ShowRow( int row ) -->
  <function name="wxGrid::ShowCol,wxGrid::ShowRow">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- static wxString wxFontMapper::GetEncodingDescription(wxFontEncoding encoding)-->
  <function name="wxFontMapper::GetEncodingDescription">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxSashWindow::SetSashVisible(wxSashEdgePosition edge, bool visible) -->
  <!-- void wxSashLayoutWindow::SetSashVisible(wxSashEdgePosition edge, bool visible) -->
  <function name="wxSashWindow::SetSashVisible,wxSashLayoutWindow::SetSashVisible">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxFont::SetStrikethrough (bool show=true) -->
  <function name="wxFont::SetStrikethrough">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::AddText(const wxString & text)-->
  <function name="wxStyledTextCtrl::AddText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static wxIcon wxArtProvider::GetIcon(const wxArtID & id,const wxArtClient & client = wxART_OTHER, const wxSize & size = wxDefaultSize ) -->
  <function name="wxArtProvider::GetIcon">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxIcon"/>
    <use-retval/>
    <pure/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxART_OTHER"/>
    <arg nr="3" direction="in" default="wxDefaultSize"/>
  </function>
  <!-- static wxBitmap wxArtProvider::GetBitmap(const wxArtID & id,const wxArtClient & client = wxART_OTHER, const wxSize & size = wxDefaultSize ) -->
  <function name="wxArtProvider::GetBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxBitmap"/>
    <use-retval/>
    <pure/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxART_OTHER"/>
    <arg nr="3" direction="in" default="wxDefaultSize"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual unsigned int GetCount () const -->
  <function name="wxRadioBox::GetCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned int"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual wxString GetString (unsigned int n) const -->
  <function name="wxRadioBox::GetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual void SetString (unsigned int n, const wxString &string) -->
  <function name="wxRadioBox::SetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_radio_box.html -->
  <!-- virtual int GetSelection () const -->
  <function name="wxRadioBox::GetSelection">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="int"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_button.html -->
  <!-- bool GetAuthNeeded () const -->
  <function name="wxButton::GetAuthNeeded">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_button.html -->
  <!-- wxString GetLabel () const -->
  <function name="wxButton::GetLabel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!--virtual bool wxWindow::Enable(bool enable = true)-->
  <!--virtual bool wxComboBox::Enable(bool enable = true)-->
  <!--virtual bool wxButton::Enable(bool enable = true)-->
  <!--virtual bool wxAnyButton::Enable(bool enable = true)-->
  <!--virtual bool wxBitmapButton::Enable(bool enable = true)-->
  <!--virtual bool wxToggleButton::Enable(bool enable = true)-->
  <!--virtual bool wxBitmapToggleButton::Enable(bool enable = true)-->
  <!--virtual bool wxContextHelpButton::Enable(bool enable = true)-->
  <!--virtual bool wxCommandLinkButton::Enable(bool enable = true)-->
  <!--virtual bool wxPropertyGridManager::Enable(bool enable = true)-->
  <!--virtual bool wxFilePickerCtrl::Enable(bool enable = true)-->
  <!--virtual bool wxStaticBitmap::Enable(bool enable = true)-->
  <!--virtual bool wxSpinCtrl::Enable(bool enable = true)-->
  <!--virtual bool wxSlider::Enable(bool enable = true)-->
  <!--virtual bool wxChoice::Enable(bool enable = true)-->
  <!--virtual bool wxOwnerDrawnComboBox::Enable(bool enable = true)-->
  <!--virtual bool wxPanel::Enable(bool enable = true)-->
  <!--virtual bool wxListBox::Enable(bool enable = true)-->
  <!--virtual bool wxCheckListBox::Enable(bool enable = true)-->
  <function name="wxWindow::Enable,wxListBox::Enable,wxCheckListBox::Enable,wxPanel::Enable,wxSlider::Enable,wxChoice::Enable,wxComboBox::Enable,wxButton::Enable,wxStaticBitmap::Enable,wxSpinCtrl::Enable,wxAnyButton::Enable,wxCommandLinkButton::Enable,wxToggleButton::Enable,wxOwnerDrawnComboBox::Enable,wxBitmapToggleButton::Enable,wxContextHelpButton::Enable,wxBitmapButton::Enable,wxPropertyGridManager::Enable,wxFilePickerCtrl::Enable">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_button.html -->
  <!-- void SetAuthNeeded (bool needed=true) -->
  <function name="wxButton::SetAuthNeeded">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_button.html -->
  <!-- virtual wxWindow * SetDefault () -->
  <function name="wxButton::SetDefault">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxWindow *"/>
  </function>
  <!-- void wxControl::SetLabel (const wxString &label) -->
  <!-- void wxButton::SetLabel (const wxString &label) -->
  <!-- void wxRadioBox::SetLabel (const wxString &label) -->
  <!-- void wxStaticBox::SetLabel (const wxString &label) -->
  <function name="wxControl::SetLabel,wxButton::SetLabel,wxRadioBox::SetLabel,wxStaticBox::SetLabel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_colour.html -->
  <!-- virtual unsigned char Alpha () const -->
  <function name="wxColour::Alpha">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned char"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_colour.html -->
  <!-- static void wxColour::ChangeLightness(int ialpha) -->
  <function name="wxColour::ChangeLightness">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxStaticBitmap::SetBitmap(const wxBitmap & label) -->
  <function name="wxStaticBitmap::SetBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_colour.html -->
  <!-- virtual unsigned char Blue () const -->
  <function name="wxColour::Blue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned char"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_colour.html -->
  <!-- virtual unsigned char Green () const -->
  <function name="wxColour::Green">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned char"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_colour.html -->
  <!-- virtual unsigned char Red () const -->
  <function name="wxColour::Red">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="unsigned char"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- void AddLine (const wxString &str, wxTextFileType type=typeDefault) -->
  <function name="wxTextFile::AddLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="typeDefault">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- void Clear () -->
  <function name="wxTextFile::Clear">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool Close () -->
  <function name="wxTextFile::Close">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool Create () -->
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool Create (const wxString &strFile) -->
  <function name="wxTextFile::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool Eof () const -->
  <function name="wxTextFile::Eof">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool Exists () const -->
  <function name="wxTextFile::Exists">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- size_t GetCurrentLine () const -->
  <function name="wxTextFile::GetCurrentLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="size_t"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxString & GetFirstLine () -->
  <function name="wxTextFile::GetFirstLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxString & GetLastLine () -->
  <function name="wxTextFile::GetLastLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- size_t GetLineCount () const -->
  <function name="wxTextFile::GetLineCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="size_t"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxTextFileType GetLineType (size_t n) const -->
  <function name="wxTextFile::GetLineType">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxTextFileType"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- const wxString & GetName () const -->
  <function name="wxTextFile::GetName">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="const wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxString & GetNextLine () -->
  <function name="wxTextFile::GetNextLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxString & GetPrevLine () -->
  <function name="wxTextFile::GetPrevLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- void GoToLine (size_t n) -->
  <function name="wxTextFile::GoToLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxSlider::SetLineSize (int n) -->
  <function name="wxSlider::SetLineSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxTextFileType GuessType () const -->
  <function name="wxTextFile::GuessType">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxTextFileType"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- void InsertLine (const wxString &str, size_t n, wxTextFileType type=typeDefault) -->
  <function name="wxTextFile::InsertLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="typeDefault">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- bool IsOpened () const -->
  <function name="wxTextFile::IsOpened">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- void RemoveLine (size_t n) -->
  <function name="wxTextFile::RemoveLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>1:</valid>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_text_file.html -->
  <!-- wxString & GetLine (size_t n) -->
  <!-- const wxString & GetLine (size_t n) const -->
  <function name="wxTextFile::GetLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_box_sizer.html -->
  <!-- virtual wxSizerItem* wxBoxSizer::AddSpacer( int size )-->
  <!-- virtual wxSizerItem* wxSizer::AddSpacer( int size)-->
  <!-- virtual wxSizerItem* wxGridSizer::AddSpacer( int size)-->
  <!-- virtual wxSizerItem* wxFlexGridSizer::AddSpacer( int size)-->
  <function name="wxSizer::AddSpacer,wxBoxSizer::AddSpacer,wxGridSizer::AddSpacer,wxFlexGridSizer::AddSpacer">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxSizerItem*"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- wxSizerItem* wxSizer::Add (wxSizer * window, const wxSizerFlags &flags) -->
  <!-- wxSizerItem* wxSizer::Add (wxWindow * window, const wxSizerFlags &flags) -->
  <!-- wxSizerItem* wxSizer::Add (wxSizer * window, int proportion = 0, int flag = 0, int border = 0, wxObject * userData = NULL) -->
  <!-- wxSizerItem* wxSizer::Add (wxWindow * window, int proportion = 0, int flag = 0, int border = 0, wxObject * userData = NULL) -->
  <!-- wxSizerItem* wxSizer::Add (int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL) -->
  <!-- wxSizerItem* wxSizer::Add (int width, int height, const wxSizerFlags &flags) -->
  <!-- wxSizerItem* wxSizer::Add (wxSizerItem *item) -->
  <function name="wxSizer::Add,wxBoxSizer::Add,wxGridSizer::Add,wxStaticBoxSizer::Add,wxStdDialogButtonSizer::Add,wxWrapSizer::Add,wxFlexGridSizer::Add,wxGridBagSizer::Add">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxSizerItem*"/>
    <arg nr="1" direction="in">
      <!-- <not-null/> Deactivated due to FPs with overloaded function: wxSizerItem * Add (int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL) -->
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="inout" default="NULL">
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_box_sizer.html#a58007d1fd88698b9f733ba651977ad55 -->
  <!-- virtual wxSize wxBoxSizer::CalcMin()-->
  <function name="wxBoxSizer::CalcMin">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_box_sizer.html#a58007d1fd88698b9f733ba651977ad55 -->
  <!-- int wxBoxSizer::GetOrientation ( ) const-->
  <function name="wxBoxSizer::GetOrientation">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_box_sizer.html#a58007d1fd88698b9f733ba651977ad55 -->
  <!-- virtual void wxBoxSizer::RecalcSizes() -->
  <function name="wxBoxSizer::RecalcSizes">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_box_sizer.html -->
  <!-- void wxBoxSizer::SetOrientation(int orient) -->
  <function name="wxBoxSizer::SetOrientation">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxIntegerValidator::SetMin(ValueType min) -->
  <!-- void wxIntegerValidator::SetMax(ValueType max) -->
  <!-- void wxIntegerValidator::SetStyle(int style) -->
  <function name="wxIntegerValidator::SetMin,wxIntegerValidator::SetMax,wxIntegerValidator::SetStyle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSashWindow::SetExtraBorderSize(int width) -->
  <!-- void wxSashLayoutWindow::SetExtraBorderSize(int width) -->
  <!-- void wxSashWindow::SetMaximumSizeX(int max) -->
  <!-- void wxSashWindow::SetMaximumSizeY(int max) -->
  <!-- void wxSashWindow::SetMinimumSizeX(int min) -->
  <!-- void wxSashWindow::SetMinimumSizeY(int min) -->
  <function name="wxSashLayoutWindow::SetExtraBorderSize,wxSashWindow::SetExtraBorderSize,wxSashWindow::SetMaximumSizeX,wxSashWindow::SetMaximumSizeY,wxSashWindow::SetMinimumSizeX,wxSashWindow::SetMinimumSizeY">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxSashLayoutWindow::SetOrientation(wxLayoutOrientation or)  -->
  <!-- void wxSashLayoutWindow::SetAlignment(wxLayoutAlignment alignment)  -->
  <function name="wxSashLayoutWindow::SetOrientation,wxSashLayoutWindow::SetAlignment">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxRect::SetTopLeft(const wxPoint &p)  -->
  <!-- void wxRect::SetTopRight(const wxPoint &p)  -->
  <!-- void wxRect::SetBottomLeft(const wxPoint &p)  -->
  <!-- void wxRect::SetBottomRight(const wxPoint &p)  -->
  <function name="wxRect::SetTopLeft,wxRect::SetTopRight,wxRect::SetBottomLeft,wxRect::SetBottomRight">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_static_box_sizer.html#a556686a3445d0f7f8aa1b12e962a7494 -->
  <!-- virtual wxSize wxStaticBoxSizer::CalcMin() -->
  <function name="wxStaticBoxSizer::CalcMin">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxSize"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_static_box_sizer.html#a556686a3445d0f7f8aa1b12e962a7494 -->
  <!-- wxStaticBox* wxStaticBoxSizer::GetStaticBox()const-->
  <function name="wxStaticBoxSizer::GetStaticBox">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxStaticBox*"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_static_box_sizer.html#a556686a3445d0f7f8aa1b12e962a7494 -->
  <!-- virtual void wxStaticBoxSizer::RecalcSizes()-->
  <function name="wxStaticBoxSizer::RecalcSizes">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/classwx_menu.html-->
  <!-- wxMenuItem * Append (int id, const wxString &item=wxEmptyString, const wxString &helpString=wxEmptyString, wxItemKind kind=wxITEM_NORMAL) -->
  <function name="wxMenu::Append">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxMenuItem *"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
    <arg nr="4" direction="in" default="wxITEM_NORMAL">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.0/group__group__funcmacro__misc.html#ga3ff36fe489da2a779248b56f283615ca -->
  <!-- bool wxLaunchDefaultBrowser(const wxString &url, int flags=0) -->
  <function name="wxLaunchDefaultBrowser">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga3e960a6805631320fede18bf1176f278 -->
  <!-- bool wxDirExists(const wxString &dirname) -->
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga72d2e4ef03d51c0d59c2cb788462d600 -->
  <!-- bool wxFileExists(const wxString &filename) -->
  <function name="wxDirExists,wxFileExists">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual wxString wxFileDialog::GetPath(void) const -->
  <!-- virtual wxString wxFileDialog::GetFilename(void) const -->
  <!-- virtual wxString wxFileDialog::GetMessage(void) const-->
  <!-- virtual wxString wxFileDialog::GetWildcard(void) const-->
  <!-- virtual wxString wxFileDialog::GetDirectory(void) const-->
  <function name="wxFileDialog::GetPath,wxFileDialog::GetFilename,wxFileDialog::GetMessage,wxFileDialog::GetWildcard,wxFileDialog::GetDirectory">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga139aabab52fdd09c37716662d6a47110 -->
  <!-- wxString wxGetWorkingDirectory(char *buf=NULL, int sz=1000) -->
  <function name="wxGetWorkingDirectory">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <arg nr="1" direction="out">
      <minsize type="argvalue" arg="2"/>
    </arg>
    <arg nr="2" direction="in" default="1000">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style" reason="Obsolete" alternatives="wxGetCwd"/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#gab0cc6ceca11d23f61cba353c01eeac06 -->
  <!-- wxString wxGetCwd() -->
  <function name="wxGetCwd">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga315b861f905ae6b3915faa79526a198e -->
  <!-- bool wxSetWorkingDirectory(const wxString &dir) -->
  <function name="wxSetWorkingDirectory">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga3510d5cf8163eded5bae385ce758df57 -->
  <!-- bool wxMkdir(const wxString &dir, int perm=wxS_DIR_DEFAULT) -->
  <function name="wxMkdir">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="wxS_DIR_DEFAULT">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.1/group__group__funcmacro__file.html#ga9ae2276737ad4fe72ea96c5f2d9bbfd3 -->
  <!-- bool wxRmdir(const wxString &dir, int flags=0) -->
  <function name="wxRmdir">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/3.0/group__group__funcmacro__string.html#ga223e9aea5b1a2252c7e632613c7b9a74 -->
  <!-- const wxString& wxGetTranslation(const wxString & string, const wxString & domain = wxEmptyString) -->
  <!-- http://docs.wxwidgets.org/3.0/group__group__funcmacro__string.html#ga6810b710e8860fa7088fc454feb9ecb1 -->
  <!-- const wxString& wxGetTranslation(const wxString & string, const wxString & plural, unsigned n, const wxString & domain = wxEmptyString) -->
  <function name="wxGetTranslation">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in" default="wxEmptyString"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_app.html#a420a1cef557cfe2edaee6ffdaaa5f7fb -->
  <!-- virtual void wxApp::MacOpenFile (const wxString & fileName) -->
  <function name="wxApp::MacOpenFile">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'wxApp::MacOpenFiles' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_art_provider.html#ae6090f32579d782205dd247006e4c7de -->
  <!-- static void wxArtProvider::Insert(wxArtProvider * provider)-->
  <function name="wxArtProvider::Insert">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-null/>
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'PushBack' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_calendar_ctrl.html#ab2e1f2d643c4a48f3d5cb2273e3a6e13 -->
  <!-- virtual void wxCalendarCtrl::EnableYearChange( bool enable = true)-->
  <function name="wxCalendarCtrl::EnableYearChange">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
    <warn severity="style">This function should be used instead of changing 'wxCAL_NO_YEAR_CHANGE' style bit directly. It allows or disallows the user to change the year interactively. Only in generic 'wxCalendarCtrl'.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_combo_ctrl.html#ae38353a81954d02af302ba103e984cb73 -->
  <!-- wxCoord wxComboCtrl::GetTextIndent( ) const-->
  <function name="wxComboCtrl::GetTextIndent">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="wxCoord"/>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'GetMargins()' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_combo_ctrl.html#ae38353a81954d02af302ba103e984cb7 -->
  <!-- void wxComboCtrl::HidePopup (bool generateEvent=false)-->
  <function name="wxComboCtrl::HidePopup">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in" default="false">
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'Dismiss()' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_combo_ctrl.html#ae38353a81954d02af302ba103e984cb7 -->
  <!-- virtual void wxComboCtrl::ShowPopup() -->
  <function name="wxComboCtrl::ShowPopup">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'Popup()' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_combo_ctrl.html#ae38353a81954d02af302ba103e984cb7 -->
  <!-- void wxComboCtrl::SetTextIndent(int indent) -->
  <function name="wxComboCtrl::SetTextIndent">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'SetMargins()' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_data_view_custom_renderer.html#a242d0992df73be6830e66d74b211974d-->
  <!-- virtual bool wxDataViewCustomRenderer::Activate (wxRect cell, wxDataViewModel * model, const wxDataViewItem & item, unsigned int col)	-->
  <function name="wxDataViewCustomRenderer::Activate">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="inout">
      <not-null/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'wxDataViewCustomRenderer::ActivateCell()' method instead in any new code.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_data_view_custom_renderer.html#ab7fe7693a94fee896eb0b60b843cd474-->
  <!-- virtual bool wxDataViewCustomRenderer::LeftClick ( wxPoint cursor, wxRect cell, wxDataViewModel * model, const wxDataViewItem & item, unsigned int col)-->
  <function name="wxDataViewCustomRenderer::LeftClick">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="inout">
      <not-null/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated and kept mostly for backwards compatibility. Please override 'wxDataViewCustomRenderer::ActivateCell()' method instead in any new code.</warn>
  </function>
  <!-- wxString wxString::Left( size_t nCount ) const -->
  <function name="wxString::Left">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxCharBuffer wxString::mb_str( const wxMBConv & conv = wxConvLibc ) const -->
  <function name="wxString::mb_str">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <returnValue type="wxCharBuffer"/>
    <use-retval/>
    <arg nr="1" direction="in" default="wxConvLibc"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_debug_context.html#aa2175db985d125950314331d790428c2-->
  <!-- static int wxDebugContext::GetLevel() -->
  <function name="wxDebugContext::GetLevel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <use-retval/>
    <warn severity="style">This function is deprecated and is replaced by 'wxLog' functionality.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_debug_context.html#ad96f255b65d4b0a3a6429ba9ce991ffb-->
  <!-- static void wxDebugContext::SetLevel(int level) -->
  <function name="wxDebugContext::SetLevel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated and is replaced by 'wxLog' functionality.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__file.html#ga42358e18253927c01bfc5f48e6778075-->
  <!-- void wxDos2UnixFilename (wxChar * s) -->
  <function name="wxDos2UnixFilename">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated. Construct a 'wxFileName' with 'wxPATH_DOS' and then use 'wxFileName::GetFullPath(wxPATH_UNIX)' instead.</warn>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/group__group__funcmacro__file.html#ga2414d8f9b3d08370551b0609eef5f0db-->
  <!-- wxString wxFileNameFromPath (const wxString & path) -->
  <function name="wxFileNameFromPath">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated. Please use 'wxFileName::SplitPath()' instead.</warn>
  </function>
  <!-- bool wxControlBase::SetLabelMarkup( const wxString & markup ) -->
  <!-- bool wxStaticText::SetLabelMarkup( const wxString & markup ) -->
  <function name="wxControlBase::SetLabelMarkup,wxStaticText::SetLabelMarkup">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static void wxFileName::SplitPath(const wxString & fullpath, wxString * volume, wxString * path, wxString * name, wxString * ext, bool * hasExt = NULL, wxPathFormat format = wxPATH_NATIVE ) -->
  <!-- static void wxFileName::SplitPath(const wxString & fullpath, wxString * volume, wxString * path, wxString * name, wxString * ext, wxPathFormat format)-->
  <!-- static void wxFileName::SplitPath(const wxString & fullpath, wxString * path  , wxString * name, wxString * ext , wxPathFormat format = wxPATH_NATIVE)-->
  <function name="wxFileName::SplitPath">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out"/>
    <arg nr="3" direction="out"/>
    <arg nr="4" direction="out"/>
    <arg nr="5" default="wxPATH_NATIVE"/>
    <arg nr="6" default="NULL"/>
    <arg nr="7" default="wxPATH_NATIVE"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_sizer_item.html#a83baa6835015e9ccd71ba290883db4f5-->
  <!-- void wxSizerItem::SetWindow(wxWindow * window)-->
  <function name="wxSizerItem::SetWindow">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <warn severity="style">This function is deprecated.</warn>
  </function>
  <!-- void wxSizerItem::SetSizer(wxSizer * sizer)-->
  <function name="wxSizerItem::SetSizer">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <warn severity="style">This function is deprecated. This function does not free the old sizer which may result in memory leaks, use 'wxSizerItem::AssignSizer' which does free it instead.</warn>
  </function>
  <!-- void wxSizerItem::SetInitSize(int x, int y)-->
  <function name="wxSizerItem::SetInitSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <warn severity="style">This is identical to 'wxSizerItem::SetMinSize()', prefer to use the other function, as its name is more clear</warn>
  </function>
  <!-- void wxSizer::SetSizeHints( wxWindow * window ) -->
  <!-- void wxBoxSizer::SetSizeHints( wxWindow * window ) -->
  <!-- void wxFlexGridSizer::SetSizeHints( wxWindow * window ) -->
  <!-- void wxGridBagSizer::SetSizeHints( wxWindow * window ) -->
  <function name="wxSizer::SetSizeHints,wxBoxSizer::SetSizeHints,wxFlexGridSizer::SetSizeHints,wxGridBagSizer::SetSizeHints">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxWindowBase::SetSizeHints(const wxSize & minSize, const wxSize & maxSize = wxDefaultSize, const wxSize & incSize = wxDefaultSize) -->
  <!-- virtual void wxWindow::SetSizeHints(const wxSize & minSize, const wxSize & maxSize = wxDefaultSize, const wxSize & incSize = wxDefaultSize) -->
  <function name="wxWindowBase::SetSizeHints,wxWindow::SetSizeHints">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxDefaultSize" direction="in"/>
    <arg nr="3" default="wxDefaultSize" direction="in"/>
  </function>
  <!-- void wxFlexGridSizer::SetFlexibleDirection(int direction)-->
  <function name="wxFlexGridSizer::SetFlexibleDirection">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxString::FromAscii( const char * ascii ) -->
  <!-- wxString wxString::FromAscii( const unsigned char * ascii ) -->
  <!-- wxString wxString::FromAscii( const char * ascii, size_t len) -->
  <!-- wxString wxString::FromAscii( const char c) -->
  <function name="wxString::FromAscii">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <arg nr="any">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxUpdateUIEvent::Check( bool enable ) -->
  <!-- void wxUpdateUIEvent::Enable( bool enable ) -->
  <function name="wxUpdateUIEvent::Enable,wxUpdateUIEvent::Check">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxListCtrl::SetItemPtrData(long item, wxUIntPtr data) -->
  <function name="wxListCtrl::SetItemPtrData">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxListCtrl::SetItem(wxListItem &info) -->
  <!-- long wxListCtrl::SetItem(long index, int column, const wxString & label, int imageId = -1) -->
  <!-- bool wxListView::SetItem(wxListItem &info) -->
  <!-- long wxListView::SetItem(long index, int column, const wxString & label, int imageId = -1) -->
  <function name="wxListCtrl::SetItem,wxListView::SetItem">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxMenuBar::IsChecked( int id ) const -->
  <!-- bool wxMenuBar::IsEnabled( int id ) const -->
  <function name="wxMenuBar::IsEnabled,wxMenuBar::IsChecked">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxMenuBar::IsAttached( void ) const -->
  <function name="wxMenuBar::IsAttached">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- void wxMenuBar::Check(int id, bool check) -->
  <function name="wxMenuBar::Check">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxWindowBase::SetSizer(wxSizer * sizer, bool deleteOld = true)-->
  <!-- void wxWindow::SetSizer(wxSizer * sizer, bool deleteOld = true)-->
  <!-- void wxPanel::SetSizer(wxSizer * sizer, bool deleteOld = true)-->
  <!-- void wxFrame::SetSizer(wxSizer * sizer, bool deleteOld = true)-->
  <!-- void wxScrolledWindow::SetSizer(wxSizer * sizer, bool deleteOld = true)-->
  <function name="wxWindowBase::SetSizer,wxWindow::SetSizer,wxPanel::SetSizer,wxScrolledWindow::SetSizer,wxFrame::SetSizer">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxWindowBase::SetAutoLayout(bool autoLayout)-->
  <!-- void wxWindow::SetAutoLayout(bool autoLayout)-->
  <function name="wxWindowBase::SetAutoLayout,wxWindow::SetAutoLayout">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxBookCtrlBase::DeletePage(size_t page) -->
  <!--         bool wxNotebook::DeletePage(size_t page) -->
  <function name="wxBookCtrlBase::DeletePage,wxNotebook::DeletePage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxWindowBase::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxWindow::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxPanel::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxStatusBar::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxSpinButton::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxBitmapButton::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxCommandLinkButton::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxContextHelpButton::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxButton::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxStaticText::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxGauge::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <!-- void wxCheckBox::SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)-->
  <function name="wxWindowBase::SetSize,wxWindow::SetSize,wxPanel::SetSize,wxStatusBar::SetSize,wxContextHelpButton::SetSize,wxCommandLinkButton::SetSize,wxBitmapButton::SetSize,wxSpinButton::SetSize,wxButton::SetSize,wxStaticText::SetSize,wxGauge::SetSize,wxCheckBox::SetSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxSIZE_AUTO">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_sizer_item.html#a83baa6835015e9ccd71ba290883db4f5-->
  <!-- void wxSizerItem::SetSpacer(const wxSize & size)-->
  <function name="wxSizerItem::SetSpacer">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated. This function does not free the old sizer which may result in memory leaks, use 'wxSizerItem::AssignSpacer' which does free it instead.</warn>
  </function>
  <!-- virtual void wxWindow::SetExtraStyle	(long exStyle) -->
  <!-- virtual void wxPropertyGridManager::SetExtraStyle(long exStyle) -->
  <function name="wxWindow::SetExtraStyle,wxPropertyGridManager::SetExtraStyle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxPropertyGridPage* wxPropertyGridManager::AddPage(const wxString & label = wxEmptyString, const wxBitmap & 	bmp = wxPG_NULL_BITMAP, wxPropertyGridPage * pageObj = NULL) -->
  <function name="wxPropertyGridManager::AddPage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxPropertyGridPage*"/>
    <arg nr="1" direction="in" default="wxEmptyString"/>
    <arg nr="2" direction="in" default="wxPG_NULL_BITMAP"/>
    <arg nr="3" direction="inout" default="NULL"/>
  </function>
  <!-- virtual bool wxBookCtrlBase::AddPage(wxWindow * page, const wxString & text,bool select = false, int imageId = NO_IMAGE ) -->
  <!-- virtual bool wxNotebook::AddPage(wxWindow * page, const wxString & text,bool select = false, int imageId = NO_IMAGE ) -->
  <function name="wxBookCtrlBase::AddPage,wxNotebook::AddPage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="false">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in" default="NO_IMAGE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxString wxBookCtrlBase::GetPageText( size_t nPage) const -->
  <!-- virtual wxString wxAuiNotebook::GetPageText( size_t nPage) const -->
  <!-- virtual wxString wxNotebook::GetPageText( size_t nPage) const -->
  <function name="wxBookCtrlBase::GetPageText,wxNotebook::GetPageText,wxAuiNotebook::GetPageText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--         bool wxAuiNotebook::AddPage(wxWindow * page, const wxString & caption, bool select = false, const wxBitmap & bitmap = wxNullBitmap) -->
  <!-- virtual bool wxAuiNotebook::AddPage(wxWindow * page, const wxString & text   , bool select, int imageId ) -->
  <function name="wxAuiNotebook::AddPage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="false"/>
    <arg nr="4" direction="in" default="wxNullBitmap"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_grid.html#a83774c9cbf840641cc6ffba25ce32059-->
  <!-- void wxGrid::SetCellAlignment(int align, int row, int col) -->
  <function name="wxGrid::SetCellAlignment">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated. Please use 'wxGrid::SetCellAlignment(row, col, horiz, vert)' instead.</warn>
  </function>
  <!-- void wxGrid::SetCellValue(int row, int col, const wxString & s) -->
  <function name="wxGrid::SetCellValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!-- void wxGrid::MakeCellVisible(int row, int col)-->
  <function name="wxGrid::MakeCellVisible">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::AutoSizeColumns (bool setAsMin = true) -->
  <function name="wxGrid::AutoSizeColumns">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--void wxGrid::DrawTextRectangle(wxDC & dc, const wxString & text, const wxRect & rect, int horizontalAlignment = wxALIGN_LEFT, int verticalAlignment = wxALIGN_TOP, int textOrientation = wxHORIZONTAL) -->
  <!--void wxGrid::DrawTextRectangle(wxDC & dc, const wxArrayString & lines, const wxRect & rect, int horizontalAlignment = wxALIGN_LEFT, int verticalAlignment = wxALIGN_TOP, int textOrientation = wxHORIZONTAL) -->
  <function name="wxGrid::DrawTextRectangle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxALIGN_LEFT">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxALIGN_TOP">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxHORIZONTAL">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxGrid::GetCellValue (int row, int col) const -->
  <function name="wxGrid::GetCellValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxColour wxGrid::GetCellTextColour(int row, int col) const -->
  <function name="wxGrid::GetCellTextColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxColour"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxGrid::GetCellOverflow(int row, int col) const -->
  <function name="wxGrid::GetCellOverflow">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::DrawTextRectangle(wxDC & dc,
                                      const wxString & text,
                                      const wxRect & rect,
                                      int horizontalAlignment = wxALIGN_LEFT,
                                      int verticalAlignment = wxALIGN_TOP,
                                      int textOrientation = wxHORIZONTAL) const -->
  <function name="wxGrid::SetCellAlignment">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="inout"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxALIGN_LEFT">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxALIGN_TOP">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxHORIZONTAL">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxGrid::CreateGrid(int numRows, int numCols, wxGridSelectionModes selmode = wxGridSelectCells) -->
  <function name="wxGrid::CreateGrid">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxGridSelectCells">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxPanel::Create(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxTAB_TRAVERSAL, const wxString &name=wxPanelNameStr) -->
  <function name="wxPanel::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="wxID_ANY" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxDefaultPosition"/>
    <arg nr="4" direction="in" default="wxDefaultSize"/>
    <arg nr="5" direction="in" default="wxTAB_TRAVERSAL">
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxPanel"/>
  </function>
  <!-- bool wxFrame::Create(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxDEFAULT_FRAME_STYLE, const wxString &name=wxFrameNameStr) -->
  <function name="wxFrame::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="wxID_ANY" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxDefaultPosition"/>
    <arg nr="4" direction="in" default="wxDefaultSize"/>
    <arg nr="5" direction="in" default="wxDEFAULT_FRAME_STYLE">
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxFrame"/>
  </function>
  <!-- virtual bool wxImageList::GetSize(int index, int & width, int & height) const -->
  <function name="wxImageList::GetSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- wxWidgets-docs: Currently, the index parameter is ignored as all images in the list have the same size. It should be 0.-->
      <valid>0</valid>
    </arg>
    <arg nr="2" direction="out"/>
    <arg nr="3" direction="out"/>
  </function>
  <!-- bool wxControl::Create(wxWindow * parent, wxWindowID id, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = 0, const wxValidator & validator = wxDefaultValidator, const wxString & name = wxControlNameStr) -->
  <function name="wxControl::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxDefaultPosition"/>
    <arg nr="4" direction="in" default="wxDefaultSize"/>
    <arg nr="5" direction="in" default="0">
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxDefaultValidator"/>
    <arg nr="7" direction="in" default="wxControl"/>
  </function>
  <!-- bool wxSlider::Create(wxWindow * parent, wxWindowID id, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = 0, const wxValidator & validator = wxDefaultValidator, const wxString & name = wxControlNameStr) -->
  <function name="wxSlider::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxDefaultPosition"/>
    <arg nr="4" direction="in" default="wxDefaultSize"/>
    <arg nr="5" direction="in" default="0">
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxDefaultValidator"/>
    <arg nr="7" direction="in" default="wxSlider"/>
  </function>
  <!-- bool wxScrolledWindow::Create(wxWindow * parent, wxWindowID id, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = wxWANTS_CHARS, const wxString & name = wxControlNameStr) -->
  <function name="wxScrolledWindow::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxDefaultPosition"/>
    <arg nr="4" direction="in" default="wxDefaultSize"/>
    <arg nr="5" direction="in" default="wxWANTS_CHARS">
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="wxScrolledWindow"/>
  </function>
  <!-- bool wxCheckBox::Create(wxWindow * parent, wxWindowID id, const wxString & label, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = 0, const wxString & 	name = wxDialogNameStr) -->
  <function name="wxCheckBox::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxDefaultPosition"/>
    <arg nr="5" direction="in" default="wxDefaultSize"/>
    <arg nr="6" direction="in" default="0">
      <not-bool/>
    </arg>
    <arg nr="7" direction="in" default="wxDefaultValidator"/>
    <arg nr="8" direction="in" default="wxStaticTextNameStr"/>
  </function>
  <!-- bool wxStaticText::Create(wxWindow * parent, wxWindowID id, const wxString & title, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = 0, const wxValidator & validator = wxDefaultValidator, const wxString & name = NameStr) -->
  <function name="wxStaticText::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxDefaultPosition"/>
    <arg nr="5" direction="in" default="wxDefaultSize"/>
    <arg nr="6" direction="in" default="0">
      <not-bool/>
    </arg>
    <arg nr="7" direction="in" default="wxStaticTextNameStr"/>
  </function>
  <!-- bool wxDialog::Create(wxWindow * parent, wxWindowID id, const wxString & title, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = wxDEFAULT_DIALOG_STYLE, const wxString & 	name = wxDialogNameStr) -->
  <function name="wxDialog::Create">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxDefaultPosition"/>
    <arg nr="5" direction="in" default="wxDefaultSize"/>
    <arg nr="6" direction="in" default="wxDEFAULT_DIALOG_STYLE">
      <not-bool/>
    </arg>
    <arg nr="7" direction="in" default="wxDialog"/>
  </function>
  <!-- void wxGrid::SetMargins(int extraWidth, int extraHeight) -->
  <function name="wxGrid::SetMargins">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SetRowLabelValue(int row, const wxString & value) -->
  <!-- void wxGrid::SetColLabelValue(int col, const wxString & value) -->
  <function name="wxGrid::SetRowLabelValue,wxGrid::SetColLabelValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- bool wxCheckListBox::IsChecked( unsigned int uiIndex ) -->
  <function name="wxCheckListBox::IsChecked">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxFileName::Assign( const wxFileName & filepath ) -->
  <function name="wxFileName::Assign">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxFileName::AppendDir( const wxString & dir ) -->
  <function name="wxFileName::AppendDir">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!--        bool wxFileName::DirExists( void ) const -->
  <!-- static bool wxFileName::DirExists( const wxString & dir ) -->
  <function name="wxFileName::DirExists">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxEmptyString"/>
  </function>
  <!-- bool wxFileName::Normalize(int flags = wxPATH_NORM_ALL, const wxString & cwd = wxEmptyString, wxPathFormat format = wxPATH_NATIVE) -->
  <function name="wxFileName::Normalize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxPATH_NORM_ALL">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="wxPATH_NATIVE"/>
  </function>
  <!-- bool wxGetEnv( const wxString & var, wxString * value ) -->
  <function name="wxGetEnv">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out"/>
  </function>
  <!-- void wxCheckListBox::Check (unsigned int item, bool check = true ) -->
  <function name="wxCheckListBox::Check">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetReadOnly(int row, int col, bool isReadOnly = true) -->
  <function name="wxGrid::SetReadOnly">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxGridCellEditor* wxGrid::GetCellEditor(int row, int col) const -->
  <function name="wxGrid::GetCellEditor">
    <noreturn>false</noreturn>
    <const/>
    <returnValue type="wxGridCellEditor *"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxGridCellRenderer* wxGrid::GetCellRenderer(int row, int col) const -->
  <function name="wxGrid::GetCellRenderer">
    <noreturn>false</noreturn>
    <const/>
    <returnValue type="wxGridCellRenderer *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxRefCounter::DecRef(void) -->
  <!-- void wxGridCellRenderer::DecRef(void) -->
  <function name="wxRefCounter::DecRef,wxGridCellRenderer::DecRef">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_grid.html#adbcbd091140c6adf0f8d04ea1642b24d-->
  <!-- void wxGrid::SetCellTextColour(const wxColour &val, int row, int col) -->
  <function name="wxGrid::SetCellTextColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::ClearSelection(void) -->
  <function name="wxGrid::ClearSelection">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- http://docs.wxwidgets.org/trunk/classwx_grid.html#adbcbd091140c6adf0f8d04ea1642b24d-->
  <!-- void wxGrid::SetCellTextColour(wxColour &val) -->
  <!-- @todo: This is an overloaded function of SetCellTextColour. Activate it once, overloaded functions are supported.
  <function name="wxGrid::SetCellTextColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <warn severity="style">This function is deprecated. Please use 'SetDefaultCellTextColour(colour)' instead.</warn>
  </function>  -->
  <!-- int wxEntry (HINSTANCE hInstance, HINSTANCE hPrevInstance = NULL,char * pCmdLine = NULL,int 	nCmdShow = SW_SHOWNORMAL) -->
  <function name="wxEntry">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" default="NULL"/>
    <arg nr="3" default="NULL"/>
    <arg nr="4" direction="in" default="SW_SHOWNORMAL">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxWindow::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxFrame::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxTextCtrl::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxPanel::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxScrolledWindow::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxStaticBitmap::SetBackgroundColour(const wxColour &c) -->
  <!--         bool wxBitmapButton::SetBackgroundColour(const wxColour &c) -->
  <function name="wxWindow::SetBackgroundColour,wxFrame::SetBackgroundColour,wxBitmapButton::SetBackgroundColour,wxTextCtrl::SetBackgroundColour,wxPanel::SetBackgroundColour,wxScrolledWindow::SetBackgroundColour,wxStaticBitmap::SetBackgroundColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxTextCtrlHitTestResult wxTextCtrl::HitTest(const wxPoint & pt, long * pos) const -->
  <!-- wxTextCtrlHitTestResult wxTextCtrl::HitTest(const wxPoint & pt, wxTextCoord * col, wxTextCoord *row) const -->
  <function name="wxTextCtrl::HitTest">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <returnValue type="wxTextCtrlHitTestResult"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out"/>
    <arg nr="3" direction="out" default="NULL"/>
  </function>
  <!-- void wxGridCellAttr::SetBackgroundColour(const wxColour &c) -->
  <function name="wxGridCellAttr::SetBackgroundColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxTextAttr::SetBackgroundColour(const wxColour &c) -->
  <function name="wxTextAttr::SetBackgroundColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual bool wxWindow::SetBackgroundStyle (wxBackgroundStyle style) -->
  <function name="wxWindow::SetBackgroundStyle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGridBagSizer::SetEmptyCellSize( const wxSize & sz ) -->
  <function name="wxGridBagSizer::SetEmptyCellSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::SetUserScale( double x, double y) -->
  <!-- void wxGCDC::SetUserScale( double x, double y) -->
  <function name="wxDC::SetUserScale,wxGCDC::SetUserScale">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- FILE* wxFopen(const wxString & path, const wxString & mode) -->
  <function name="wxFopen">
    <use-retval/>
    <returnValue type="FILE *"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in">
      <not-null/>
      <strz/>
    </arg>
    <arg nr="2" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- bool wxDynamicLibrary::Load(const wxString & name, int flags = wxDL_DEFAULT) -->
  <function name="wxDynamicLibrary::Load">
    <use-retval/>
    <returnValue type="bool"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxDL_DEFAULT" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void *wxDynamicLibrary::RawGetSymbol(wxDllType handle, const wxString& name) -->
  <function name="wxDynamicLibrary::RawGetSymbol">
    <use-retval/>
    <returnValue type="void *"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxFileName::SetExt(const wxString & ext) -->
  <!-- void wxFileName::SetFullName(const wxString & fullname) -->
  <!-- void wxFileName::SetName(const wxString & name) -->
  <function name="wxFileName::SetExt,wxFileName::SetFullName,wxFileName::SetName">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxEvent::SetId(int id)-->
  <!-- void wxCommandEvent::SetId(int id)-->
  <!-- void wxPropertyGridEvent::SetId(int id)-->
  <function name="wxEvent::SetId,wxCommandEvent::SetId,wxPropertyGridEvent::SetId">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxFileName::Mkdir(int perm = wxS_DIR_DEFAULT, int flags = 0) const -->
  <function name="wxFileName::Mkdir">
    <use-retval/>
    <returnValue type="bool"/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <arg nr="1" default="wxS_DIR_DEFAULT" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxCommandEvent::SetInt(int intCommand) -->
  <function name="wxCommandEvent::SetInt">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStdDialogButtonSizer::AddButton(wxButton * button) -->
  <function name="wxStdDialogButtonSizer::AddButton">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxCheckBox::SetValue(bool state) -->
  <!-- virtual void wxToggleButton::SetValue(bool state) -->
  <function name="wxCheckBox::SetValue,wxToggleButton::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxChoice::SetSelection(int n) -->
  <function name="wxChoice::SetSelection">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxChoice::SetColumns(int n = 1) -->
  <function name="wxChoice::SetColumns">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxTextCtrl::Enable (bool enable=true) -->
  <!-- virtual bool wxCheckBox::Enable (bool enable=true) -->
  <function name="wxTextCtrl::Enable,wxCheckBox::Enable">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!--  static wxString wxFileName::CreateTempFileName( const wxString & prefix, wxFile * fileTemp = NULL ) -->
  <!--  static wxString wxFileName::CreateTempFileName( const wxString & prefix, wxFFile * fileTemp = NULL ) -->
  <function name="wxFileName::CreateTempFileName">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <pure/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxEvtHandler::Disconnect(int id = wxID_ANY, wxEventType eventType = wxEVT_NULL, wxObjectEventFunction function = NULL, wxObject * userData = NULL, wxEvtHandler * eventSink = NULL) -->
  <function name="wxEvtHandler::Disconnect,wxSlider::Disconnect,wxSpinCtrl::Disconnect,wxRadioBox::Disconnect,wxRadioButton::Disconnect,wxCheckListBox::Disconnect,wxListBox::Disconnect,wxStaticText::Disconnect,wxTextCtrl::Disconnect,wxButton::Disconnect,wxBitmapButton::Disconnect,wxCheckBox::Disconnect,wxComboBox::Disconnect,wxWindow::Disconnect,wxChoice::Disconnect">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxID_ANY">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxEVT_NULL"/>
    <arg nr="3" direction="in" default="NULL">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxEvtHandler::Connect(int id, int lastId, wxEventType eventType, wxObjectEventFunction function, wxObject * userData = NULL, wxEvtHandler * eventSink = NULL) -->
  <!-- void wxEvtHandler::Connect(int id, wxEventType eventType, wxObjectEventFunction function, wxObject * userData = NULL, wxEvtHandler * eventSink = NULL)-->
  <!-- void wxEvtHandler::Connect(wxEventType eventType, wxObjectEventFunction function, wxObject * userData = NULL, wxEvtHandler * eventSink = NULL)-->
  <function name="wxEvtHandler::Connect,wxSpinCtrl::Connect,wxRadioBox::Connect,wxRadioButton::Connect,wxStyledTextCtrl::Connect,wxCheckListBox::Connect,wxComboBox::Connect,wxStaticText::Connect,wxTextCtrl::Connect,wxStaticBitmap::Connect,wxButton::Connect,wxSlider::Connect,wxBitmapButton::Connect,wxCheckBox::Connect,wxWindow::Connect,wxChoice::Connect,wxListBox::Connect">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="NULL">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="inout" default="NULL">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="inout" default="NULL">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" direction="inout" default="NULL">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString& wxString::erase (wxString::size_type pos = 0, size_type n = wxString::npos) -->
  <!-- wxString::iterator wxString::erase (wxString::iterator first, wxString::iterator last); -->
  <!-- wxString::iterator wxString::erase (wxString::iterator first) -->
  <function name="wxString::erase">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxString::npos">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxBitmap::SetMask( wxMask * mask ) -->
  <function name="wxBitmap::SetMask">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxWindow::SetToolTip(const wxString & tipString) -->
  <!-- void wxCheckBox::SetToolTip(const wxString & tipString) -->
  <!-- void wxButton::SetToolTip(const wxString & tipString) -->
  <!-- void wxBitmapButton::SetToolTip(const wxString & tipString) -->
  <!-- void wxRadioButton::SetToolTip(const wxString & tipString) -->
  <!-- void wxTextCtrl::SetToolTip(const wxString & tipString) -->
  <!-- void wxRadioBox::SetToolTip(const wxString & tipString) -->
  <!-- void wxComboBox::SetToolTip(const wxString & tipString) -->
  <!-- void wxStaticText::SetToolTip(const wxString & tipString) -->
  <!-- void wxChoice::SetToolTip(const wxString & tipString) -->
  <!-- void wxSpinCtrl::SetToolTip(const wxString & tipString) -->
  <!-- void wxSlider::SetToolTip(const wxString & tipString) -->
  <function name="wxComboBox::SetToolTip,wxRadioButton::SetToolTip,wxSlider::SetToolTip,wxSpinCtrl::SetToolTip,wxWindow::SetToolTip,wxChoice::SetToolTip,wxCheckBox::SetToolTip,wxButton::SetToolTip,wxBitmapButton::SetToolTip,wxTextCtrl::SetToolTip,wxRadioBox::SetToolTip,wxStaticText::SetToolTip">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxRegEx::Matches( const wxChar * text, int flags = 0 ) -->
  <!-- bool wxRegEx::Matches( const wxChar * text, int flags, size_t len ) -->
  <function name="wxRegEx::Matches">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxBitmapToggleButton::SetBitmap( const wxBitmap & bitmap, wxDirection dir = wxLEFT ) -->
  <!-- void wxCommandLinkButton::SetBitmap( const wxBitmap & bitmap, wxDirection dir = wxLEFT ) -->
  <!-- void wxContextHelpButton::SetBitmap( const wxBitmap & bitmap, wxDirection dir = wxLEFT ) -->
  <!-- void wxBitmapButton::SetBitmap( const wxBitmap & bitmap, wxDirection dir = wxLEFT ) -->
  <function name="wxBitmapToggleButton::SetBitmap,wxCommandLinkButton::SetBitmap,wxContextHelpButton::SetBitmap,wxBitmapButton::SetBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxLEFT" direction="in"/>
  </function>
  <!-- void wxBitmapButton::SetBitmapLabel( const wxBitmap & bitmap ) -->
  <function name="wxBitmapButton::SetBitmapLabel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxCmdLineParser::AddOption(const wxString & name, const wxString & lng = wxEmptyString, const wxString & desc = wxEmptyString, wxCmdLineParamType type = wxCMD_LINE_VAL_STRING, int flags = 0) -->
  <function name="wxCmdLineParser::AddOption">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxEmptyString" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
    <arg nr="4" direction="in" default="wxCMD_LINE_VAL_STRING">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- static void wxValidator::SuppressBellOnError(bool suppress = true) -->
  <function name="wxValidator::SuppressBellOnError">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxBitmapToggleButton::SetValue( bool state ) -->
  <function name="wxBitmapToggleButton::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxAnyButton::SetBitmapCurrent (const wxBitmap &bitmap) -->
  <!-- void wxAnyButton::SetBitmapDisabled (const wxBitmap &bitmap) -->
  <!-- void wxAnyButton::SetBitmapFocus (const wxBitmap &bitmap) -->
  <!-- void wxAnyButton::SetBitmapLabel (const wxBitmap &bitmap) -->
  <!-- void wxAnyButton::SetBitmapPressed (const wxBitmap &bitmap) -->
  <!-- void wxBitmapToggleButton::SetBitmapCurrent (const wxBitmap &bitmap) -->
  <!-- void wxBitmapToggleButton::SetBitmapDisabled (const wxBitmap &bitmap) -->
  <!-- void wxBitmapToggleButton::SetBitmapFocus (const wxBitmap &bitmap) -->
  <!-- void wxBitmapToggleButton::SetBitmapLabel (const wxBitmap &bitmap) -->
  <!-- void wxBitmapToggleButton::SetBitmapPressed (const wxBitmap &bitmap) -->
  <function name="wxAnyButton::SetBitmapCurrent,wxAnyButton::SetBitmapDisabled,wxAnyButton::SetBitmapFocus,wxAnyButton::SetBitmapLabel,wxAnyButton::SetBitmapPressed,wxAnyButton::SetBitmapPressed,wxBitmapToggleButton::SetBitmapCurrent,wxBitmapToggleButton::SetBitmapDisabled,wxBitmapToggleButton::SetBitmapFocus,wxBitmapToggleButton::SetBitmapLabel,wxBitmapToggleButton::SetBitmapPressed">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxBitmapToggleButton::GetValue( ) const -->
  <function name="wxBitmapToggleButton::GetValue">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="bool"/>
  </function>
  <!-- void wxSearchCtrl::SetDescriptiveText(const wxString & text) -->
  <function name="wxSearchCtrl::SetDescriptiveText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxFlexGridSizer::AddGrowableCol(size_t idx, int proportion = 0) -->
  <!-- void wxFlexGridSizer::AddGrowableRow(size_t idx, int proportion = 0) -->
  <!-- void wxGridBagSizer::AddGrowableCol(size_t idx, int proportion = 0) -->
  <!-- void wxGridBagSizer::AddGrowableRow(size_t idx, int proportion = 0) -->
  <function name="wxFlexGridSizer::AddGrowableCol,wxFlexGridSizer::AddGrowableRow,wxGridBagSizer::AddGrowableCol,wxGridBagSizer::AddGrowableRow">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxSize wxSizer::Fit(wxWindow * window)-->
  <!-- wxSize wxSizer::FitInside(wxWindow * window)-->
  <!-- wxSize wxBoxSizer::Fit(wxWindow * window)-->
  <!-- wxSize wxBoxSizer::FitInside(wxWindow * window)-->
  <!-- wxSize wxFlexGridSizer::Fit(wxWindow * window)-->
  <!-- wxSize wxFlexGridSizer::FitInside(wxWindow * window)-->
  <function name="wxSizer::Fit,wxSizer::FitInside,wxBoxSizer::Fit,wxBoxSizer::FitInside,wxFlexGridSizer::Fit,wxFlexGridSizer::FitInside">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxSize"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxFrame::SetMenuBar (wxMenuBar *menuBar) -->
  <function name="wxFrame::SetMenuBar">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxMenuBar::Append(wxMenu * menu, const wxString & title) -->
  <function name="wxMenuBar::Append">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- size_t wxStrlen ( const wxCharBuffer & s) -->
  <!-- size_t wxStrlen ( const wxWCharBuffer & s ) -->
  <!-- size_t wxStrlen ( const wxString & s ) -->
  <!-- size_t wxStrlen ( const wxCStrData & s) -->
  <function name="wxStrlen">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t">strlen(arg1)</returnValue>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxAtoi(const wxString & str)-->
  <function name="wxAtoi">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- double wxAtof(const wxString & str)-->
  <function name="wxAtof">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="double"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- long wxAtol(const wxString & str)-->
  <function name="wxAtol">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="long"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxString::ToDouble(double * val) const -->
  <!-- bool wxString::ToCDouble(double * val) const -->
  <function name="wxString::ToDouble,wxString::ToCDouble">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- wxString & wxString::Trim( bool bFromRight = true ) -->
  <function name="wxString::Trim">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxString wxString::Strip (stripType s = trailing) const -->
  <function name="wxString::Strip">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in"/>
    <warn severity="style">This is the same as wxString::Trim() except that it doesn't change this string. This is a wxWidgets 1.xx compatibility function; you should not use it in new code.</warn>
  </function>
  <!-- int wxItemContainer::Append(const wxString & item) -->
  <!-- int wxItemContainer::Append(const wxArrayString & items) -->
  <!-- int wxItemContainer::Append(const std::vector< wxString > & items) -->
  <!-- int wxItemContainer::Append(const wxString & item, void * clientData) -->
  <!-- int wxItemContainer::Append(const wxString & item, wxClientData * clientData) -->
  <!-- int wxComboBox::Append(const wxString & item) -->
  <!-- int wxChoice::Append(const wxString & item) -->
  <!-- int wxListBox::Append(const wxString & item) -->
  <function name="wxItemContainer::Append,wxComboBox::Append,wxChoice::Append,wxListBox::Append">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- virtual void wxBitmap::SetDepth(int depth)  -->
  <!-- virtual void wxBitmap::SetHeight(int height)-->
  <!-- virtual void wxBitmap::SetWidth(int width)  -->
  <function name="wxBitmap::SetDepth,wxBitmap::SetHeight,wxBitmap::SetWidth">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time.</warn>
  </function>
  <!-- void wxItemContainer::Delete(unsigned int n) -->
  <!-- void wxListBox::Delete(unsigned int n) -->
  <function name="wxItemContainer::Delete,wxListBox::Delete">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- bool wxString::ToLong(long * val, int base = 10) const -->
  <!-- bool wxString::ToCLong(long * val, int base = 10) const -->
  <!-- bool wxString::ToLongLong(long long * val, int base = 10) const -->
  <!-- bool wxString::ToULong(unsigned long * val, int base = 10) const -->
  <!-- bool wxString::ToCULong(unsigned long * val, int base = 10) const -->
  <!-- bool wxString::ToULongLong(unsigned long long * val, int base = 10) const -->
  <function name="wxString::ToLong,wxString::ToCLong,wxString::ToLongLong,wxString::ToULong,wxString::ToCULong,wxString::ToULongLong">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="out">
      <not-null/>
    </arg>
    <arg nr="2" direction="in" default="10">
      <not-uninit/>
      <not-bool/>
      <valid>0,2:36</valid>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::MouseDragDrop (long x1, long y1, long x2, long y2, int button = wxMOUSE_BTN_LEFT) -->
  <function name="wxUIActionSimulator::MouseDragDrop">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxMOUSE_BTN_LEFT">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::MouseMove(long x,long y) -->
  <function name="wxUIActionSimulator::MouseMove">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::KeyUp(int keycode, int modifiers = wxMOD_NONE)-->
  <!-- bool wxUIActionSimulator::KeyDown(int keycode, int modifiers = wxMOD_NONE)-->
  <!-- bool wxUIActionSimulator::Char(int keycode, int modifiers = wxMOD_NONE)-->
  <function name="wxUIActionSimulator::KeyUp,wxUIActionSimulator::KeyDown,wxUIActionSimulator::Char">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxMOD_NONE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::MouseMove(const wxPoint & point)-->
  <function name="wxUIActionSimulator::MouseMove">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::MouseUp(int button = wxMOUSE_BTN_LEFT)-->
  <!-- bool wxUIActionSimulator::MouseDblClick(int button = wxMOUSE_BTN_LEFT)-->
  <!-- bool wxUIActionSimulator::MouseClick(int button = wxMOUSE_BTN_LEFT)-->
  <function name="wxUIActionSimulator::MouseUp,wxUIActionSimulator::MouseDblClick,wxUIActionSimulator::MouseClick">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxMOUSE_BTN_LEFT">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::MouseDown(int button = wxMOUSE_BTN_DOWN)-->
  <function name="wxUIActionSimulator::MouseDown">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxMOUSE_BTN_DOWN">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxUIActionSimulator::Select(const wxString & text)-->
  <function name="wxUIActionSimulator::Select">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxUIActionSimulator::Text(const char *)-->
  <function name="wxUIActionSimulator::Text">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- bool wxPGProperty::Hide(bool hide, int flags = wxPG_RECURSE)-->
  <function name="wxPGProperty::Hide">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="wxPG_RECURSE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxPGProperty::SetValueFromInt(long value, int flags = 0) -->
  <!-- bool wxBoolProperty::SetValueFromInt(long value, int flags = 0) -->
  <!-- bool wxIntProperty::SetValueFromInt(long value, int flags = 0) -->
  <!-- bool wxUIntProperty::SetValueFromInt(long value, int flags = 0) -->
  <function name="wxPGProperty::SetValueFromInt,wxBoolProperty::SetValueFromInt,wxIntProperty::SetValueFromInt,wxUIntProperty::SetValueFromInt">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetBackgroundColour(const wxColour &colour, int flags = wxPG_RECURSE) -->
  <function name="wxPGProperty::SetBackgroundColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxPG_RECURSE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- const wxPGCell& wxPGProperty::GetCell(unsigned int column) const -->
  <!--       wxPGCell& wxPGProperty::GetCell(unsigned int column) -->
  <function name="wxPGProperty::GetCell">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="wxPGCell &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetValue(wxVariant value, wxVariant * pList = NULL, int flags = wxPG_SETVAL_REFRESH_EDITOR) -->
  <function name="wxPGProperty::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="wxPG_SETVAL_REFRESH_EDITOR">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetExpanded(bool expanded) -->
  <!-- void wxStringProperty::SetExpanded(bool expanded) -->
  <function name="wxPGProperty::SetExpanded,wxStringProperty::SetExpanded">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSashLayoutWindow::SetDefaultSize(const wxSize & size) -->
  <function name="wxSashLayoutWindow::SetDefaultSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyReadOnly(wxPGPropArg id, bool set = true, int flags = wxPG_RECURSE)	 -->
  <!-- void wxPropertyGridPage::SetPropertyReadOnly(wxPGPropArg id, bool set = true, int flags = wxPG_RECURSE)	 -->
  <!-- void wxPropertyGridManager::SetPropertyReadOnly(wxPGPropArg id, bool set = true, int flags = wxPG_RECURSE)	 -->
  <function name="wxPropertyGridInterface::SetPropertyReadOnly,wxPropertyGridPage::SetPropertyReadOnly,wxPropertyGridManager::SetPropertyReadOnly">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="wxPG_RECURSE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxPGProperty* wxPropertyGridInterface::AppendIn(wxPGPropArg id, wxPGProperty * newProperty)-->
  <!-- wxPGProperty* wxPropertyGridPage::AppendIn(wxPGPropArg id, wxPGProperty * newProperty)-->
  <function name="wxPropertyGridInterface::AppendIn,wxPropertyGridPage::AppendIn">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxPGProperty*"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetAttribute(const wxString & name, wxVariant value) -->
  <!-- void wxBoolProperty::SetAttribute(const wxString & name, wxVariant value) -->
  <!-- void wxFileProperty::SetAttribute(const wxString & name, wxVariant value) -->
  <!-- void wxDirProperty::SetAttribute(const wxString & name, wxVariant value) -->
  <function name="wxPGProperty::SetAttribute,wxBoolProperty::SetAttribute,wxFileProperty::SetAttribute,wxDirProperty::SetAttribute">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxPGProperty::RefreshEditor() -->
  <!-- void wxPGProperty::RefreshChildren() -->
  <function name="wxPGProperty::RefreshEditor,wxPGProperty::RefreshChildren">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
  </function>
  <!-- void wxPGProperty::SetAttributes(const wxPGAttributeStorage & attributes) -->
  <function name="wxPGProperty::SetAttributes">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxFrame::SetStatusText( const wxString & text, int number = 0 ) -->
  <function name="wxFrame::SetStatusText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxString::StartsWith( const wxString & prefix, wxString * rest = NULL ) const -->
  <!-- bool wxString::EndsWith( const wxString & suffix, wxString * rest = NULL ) const -->
  <function name="wxString::StartsWith,wxString::EndsWith">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxPGProperty* wxStringProperty::AppendChild(wxPGProperty * childProperty) -->
  <!-- wxPGProperty* wxPGProperty::AppendChild(wxPGProperty * childProperty) -->
  <function name="wxPGProperty::AppendChild,wxStringProperty::AppendChild">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxPGProperty*"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyImage( wxPGPropArg id, wxBitmap & bmp ) -->
  <!-- void wxPropertyGridManager::SetPropertyImage( wxPGPropArg id, wxBitmap & bmp ) -->
  <function name="wxPropertyGridInterface::SetPropertyImage,wxPropertyGridManager::SetPropertyImage">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="inout"/>
  </function>
  <!-- bool wxPGProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <!-- bool wxFloatProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <!-- bool wxBoolProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <!-- bool wxUIntProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <!-- bool wxIntProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <!-- bool wxEnumProperty::SetValueFromString(const wxString & text, int flags = wxPG_PROGRAMMATIC_VALUE) -->
  <function name="wxPGProperty::SetValueFromString,wxFloatProperty::SetValueFromString,wxEnumProperty::SetValueFromString,wxBoolProperty::SetValueFromString,wxUIntProperty::SetValueFromString,wxIntProperty::SetValueFromString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxPG_PROGRAMMATIC_VALUE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetTextColour(const wxColour & colour, int flags = wxPG_RECURSE)-->
  <!-- void wxFloatProperty::SetTextColour(const wxColour & colour, int flags = wxPG_RECURSE)-->
  <!-- void wxUIntProperty::SetTextColour(const wxColour & colour, int flags = wxPG_RECURSE)-->
  <function name="wxPGProperty::SetTextColour,wxFloatProperty::SetTextColour,wxUIntProperty::SetTextColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxPG_RECURSE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxBookCtrlBase::SetPageImage(size_t page, int image) -->
  <!--         bool wxToolbook::SetPageImage(size_t page, int image) -->
  <function name="wxBookCtrlBase::SetPageImage,wxToolbook::SetPageImage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual bool wxBookCtrlBase::AddPage(wxWindow * page, const wxString & text, bool select = false, int imageId = NO_IMAGE) -->
  <!--         bool wxToolbook::AddPage(wxWindow * page, const wxString & text, bool select = false, int imageId = NO_IMAGE) -->
  <function name="wxBookCtrlBase::AddPage,wxToolbook::AddPage">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="false">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in" default="NO_IMAGE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxFileDialog::SetFilterIndex(int filterIndex)-->
  <function name="wxFileDialog::SetFilterIndex">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- Sets the default filter index, starting from zero. -->
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual wxClassInfo * wxObject::GetClassInfo () const -->
  <!-- and inherited classes -->
  <function name="wxObject::GetClassInfo,wxAcceleratorTable::GetClassInfo,wxAccessible::GetClassInfo,wxAnimation::GetClassInfo,wxArchiveClassFactory::GetClassInfo,wxArchiveEntry::GetClassInfo,wxArtProvider::GetClassInfo,wxAutomationObject::GetClassInfo,wxBitmapHandler::GetClassInfo,wxClient::GetClassInfo,wxClipboard::GetClassInfo,wxColour::GetClassInfo,wxColourData::GetClassInfo,wxColourPropertyValue::GetClassInfo,wxCommand::GetClassInfo,wxCommandProcessor::GetClassInfo,wxConfigBase::GetClassInfo,wxConnection::GetClassInfo,wxConnectionBase::GetClassInfo,wxContextHelp::GetClassInfo,wxDataViewIconText::GetClassInfo,wxDataViewRenderer::GetClassInfo,wxDC::GetClassInfo,wxDDEClient::GetClassInfo,wxDocTemplate::GetClassInfo,wxDragImage::GetClassInfo,wxEncodingConverter::GetClassInfo,wxEvent::GetClassInfo,wxEvtHandler::GetClassInfo,wxFileHistory::GetClassInfo,wxFileSystem::GetClassInfo,wxFileSystemHandler::GetClassInfo,wxFilterClassFactory::GetClassInfo,wxFindReplaceData::GetClassInfo,wxFontData::GetClassInfo,wxFSFile::GetClassInfo,wxGDIObject::GetClassInfo,wxGLContext::GetClassInfo,wxGraphicsObject::GetClassInfo,wxGraphicsRenderer::GetClassInfo,wxGridTableBase::GetClassInfo,wxHashTable::GetClassInfo,wxHelpControllerBase::GetClassInfo,wxHtmlCell::GetClassInfo,wxHtmlDCRenderer::GetClassInfo,wxHtmlEasyPrinting::GetClassInfo,wxHtmlFilter::GetClassInfo,wxHtmlHelpData::GetClassInfo,wxHtmlLinkInfo::GetClassInfo,wxHtmlTagHandler::GetClassInfo,wxImage::GetClassInfo,wxImageHandler::GetClassInfo,wxImageList::GetClassInfo,wxIndividualLayoutConstraint::GetClassInfo,wxJoystick::GetClassInfo,wxLayoutAlgorithm::GetClassInfo,wxLayoutConstraints::GetClassInfo,wxListItem::GetClassInfo,wxMask::GetClassInfo,wxMenuItem::GetClassInfo,wxMetafile::GetClassInfo,wxModule::GetClassInfo,wxPageSetupDialog::GetClassInfo,wxPageSetupDialogData::GetClassInfo,wxPGCell::GetClassInfo,wxPGEditor::GetClassInfo,wxPGEditorDialogAdapter::GetClassInfo,wxPGProperty::GetClassInfo,wxPrintData::GetClassInfo,wxPrintDialog::GetClassInfo,wxPrintDialogData::GetClassInfo,wxPrinter::GetClassInfo,wxPrintout::GetClassInfo,wxPrintPreview::GetClassInfo,wxQuantize::GetClassInfo,wxRegionIterator::GetClassInfo,wxRichTextAction::GetClassInfo,wxRichTextDrawingContext::GetClassInfo,wxRichTextDrawingHandler::GetClassInfo,wxRichTextFieldType::GetClassInfo,wxRichTextFileHandler::GetClassInfo,wxRichTextFontTable::GetClassInfo,wxRichTextFormattingDialogFactory::GetClassInfo,wxRichTextHeaderFooterData::GetClassInfo,wxRichTextImageBlock::GetClassInfo,wxRichTextObject::GetClassInfo,wxRichTextPrinting::GetClassInfo,wxRichTextProperties::GetClassInfo,wxRichTextRenderer::GetClassInfo,wxRichTextStyleDefinition::GetClassInfo,wxRichTextStyleSheet::GetClassInfo,wxSizer::GetClassInfo,wxSizerItem::GetClassInfo,wxSockAddress::GetClassInfo,wxSocketBase::GetClassInfo,wxSound::GetClassInfo,wxStringTokenizer::GetClassInfo,wxSystemOptions::GetClassInfo,wxTCPClient::GetClassInfo,wxTCPConnection::GetClassInfo,wxTCPServer::GetClassInfo,wxToolBarToolBase::GetClassInfo,wxToolTip::GetClassInfo,wxURI::GetClassInfo,wxVariant::GetClassInfo,wxWebViewFactory::GetClassInfo,wxXmlDocument::GetClassInfo,wxXmlResource::GetClassInfo,wxXmlResourceHandler::GetClassInfo">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxClassInfo *"/>
    <use-retval/>
  </function>
  <!-- void wxFilePickerCtrl::SetPath(const wxString & filename) -->
  <function name="wxFilePickerCtrl::SetPath">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxEvent::SetEventType(wxEventType type) -->
  <!-- void wxCommandEvent::SetEventType(wxEventType type) -->
  <function name="wxEvent::SetEventType,wxCommandEvent::SetEventType">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxColour::Set(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=wxALPHA_OPAQUE) -->
  <!-- void wxColour::Set(unsigned long RGB)-->
  <!-- void wxColour::Set(const wxString &str)-->
  <function name="wxColour::Set">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- void wxEvent::SetEventObject(wxObject *object) -->
  <!-- void wxCommandEvent::SetEventObject(wxObject *object) -->
  <!-- void wxNavigationKeyEvent::SetEventObject(wxObject *object) -->
  <function name="wxEvent::SetEventObject,wxCommandEvent::SetEventObject,wxNavigationKeyEvent::SetEventObject">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxNavigationKeyEvent::SetCurrentFocus(wxWindow * currentFocus) -->
  <function name="wxNavigationKeyEvent::SetCurrentFocus">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxCommandEvent::SetString(const wxString &sr) -->
  <!-- void wxGridEvent::SetString(const wxString &sr) -->
  <function name="wxCommandEvent::SetString,wxGridEvent::SetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxXmlNode::GetAttribute (const wxString & attrName, wxString * value) const -->
  <!-- bool wxXmlNode::GetPropVal (const wxString & attrName, wxString * value) const -->
  <function name="wxXmlNode::GetAttribute,wxXmlNode::GetPropVal">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out">
      <not-null/>
    </arg>
  </function>
  <!-- wxString wxXmlNode::GetAttribute(const wxString & attrName, const wxString & defaultVal = wxEmptyString) const -->
  <!-- wxString wxXmlNode::GetPropVal(const wxString & attrName, const wxString & defaultVal = wxEmptyString) const -->
  <function name="wxXmlNode::GetAttribute,wxXmlNode::GetPropVal">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxEmptyString"/>
  </function>
  <!-- virtual void wxXmlNode::AddAttribute( const wxString & name, const wxString & value ) -->
  <function name="wxXmlNode::AddAttribute">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- virtual void wxXmlNode::AddAttribute(wxXmlAttribute * attr ) -->
  <!-- virtual void wxXmlNode::AddChild(wxXmlNode * child) -->
  <function name="wxXmlNode::AddAttribute,wxXmlNode::AddChild">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- wxXmlAttribute * wxXmlNode::GetAttributes( void ) const -->
  <function name="wxXmlNode::GetAttributes">
    <noreturn>false</noreturn>
    <returnValue type="wxXmlAttribute *"/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxXmlNode * wxXmlNode::GetChildren( void ) const-->
  <function name="wxXmlNode::GetChildren">
    <noreturn>false</noreturn>
    <const/>
    <returnValue type="wxXmlNode *"/>
    <use-retval/>
  </function>
  <!-- const wxString & wxXmlNode::GetContent( void ) const -->
  <function name="wxXmlNode::GetContent">
    <noreturn>false</noreturn>
    <const/>
    <returnValue type="const wxString &amp;"/>
    <use-retval/>
  </function>
  <!-- int wxXmlNode::GetDepth( wxXmlNode * grandparent = NULL ) const -->
  <function name="wxXmlNode::GetDepth">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <const/>
    <arg nr="1" default="NULL" direction="inout"/>
  </function>
  <!-- int wxXmlNode::GetLineNumber( void ) const -->
  <function name="wxXmlNode::GetLineNumber">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <const/>
    <use-retval/>
  </function>
  <!-- virtual wxString wxColour::GetAsString(long flags = wxC2S_NAME|wxC2S_CSS_SYNTAX) const -->
  <function name="wxColour::GetAsString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in" default="wxC2S_NAME|wxC2S_CSS_SYNTAX">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxFlexGridSizer::SetNonFlexibleGrowMode(wxFlexSizerGrowMode mode) -->
  <function name="wxFlexGridSizer::SetNonFlexibleGrowMode">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- They are implemented as macros in wxWidgets, but its better to configure them as functions -->
  <!-- const wxClassInfo * wxCLASSINFO(info) -->
  <!-- const wxClassInfo *   CLASSINFO(info) -->
  <function name="wxCLASSINFO,CLASSINFO">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="const wxClassInfo *"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxObjectRefData * wxObject::GetRefData () const -->
  <!-- and inherited classes -->
  <function name="wxObject::GetRefData,wxAcceleratorTable::GetRefData,wxAccessible::GetRefData,wxAnimation::GetRefData,wxArchiveClassFactory::GetRefData,wxArchiveEntry::GetRefData,wxArtProvider::GetRefData,wxAutomationObject::GetRefData,wxBitmapHandler::GetRefData,wxClient::GetRefData,wxClipboard::GetRefData,wxColour::GetRefData,wxColourData::GetRefData,wxColourPropertyValue::GetRefData,wxCommand::GetRefData,wxCommandProcessor::GetRefData,wxConfigBase::GetRefData,wxConnection::GetRefData,wxConnectionBase::GetRefData,wxContextHelp::GetRefData,wxDataViewIconText::GetRefData,wxDataViewRenderer::GetRefData,wxDC::GetRefData,wxDDEClient::GetRefData,wxDocTemplate::GetRefData,wxDragImage::GetRefData,wxEncodingConverter::GetRefData,wxEvent::GetRefData,wxEvtHandler::GetRefData,wxFileHistory::GetRefData,wxFileSystem::GetRefData,wxFileSystemHandler::GetRefData,wxFilterClassFactory::GetRefData,wxFindReplaceData::GetRefData,wxFontData::GetRefData,wxFSFile::GetRefData,wxGDIObject::GetRefData,wxGLContext::GetRefData,wxGraphicsObject::GetRefData,wxGraphicsRenderer::GetRefData,wxGridTableBase::GetRefData,wxHashTable::GetRefData,wxHelpControllerBase::GetRefData,wxHtmlCell::GetRefData,wxHtmlDCRenderer::GetRefData,wxHtmlEasyPrinting::GetRefData,wxHtmlFilter::GetRefData,wxHtmlHelpData::GetRefData,wxHtmlLinkInfo::GetRefData,wxHtmlTagHandler::GetRefData,wxImage::GetRefData,wxImageHandler::GetRefData,wxImageList::GetRefData,wxIndividualLayoutConstraint::GetRefData,wxJoystick::GetRefData,wxLayoutAlgorithm::GetRefData,wxLayoutConstraints::GetRefData,wxListItem::GetRefData,wxMask::GetRefData,wxMenuItem::GetRefData,wxMetafile::GetRefData,wxModule::GetRefData,wxPageSetupDialog::GetRefData,wxPageSetupDialogData::GetRefData,wxPGCell::GetRefData,wxPGEditor::GetRefData,wxPGEditorDialogAdapter::GetRefData,wxPGProperty::GetRefData,wxPrintData::GetRefData,wxPrintDialog::GetRefData,wxPrintDialogData::GetRefData,wxPrinter::GetRefData,wxPrintout::GetRefData,wxPrintPreview::GetRefData,wxQuantize::GetRefData,wxRegionIterator::GetRefData,wxRichTextAction::GetRefData,wxRichTextDrawingContext::GetRefData,wxRichTextDrawingHandler::GetRefData,wxRichTextFieldType::GetRefData,wxRichTextFileHandler::GetRefData,wxRichTextFontTable::GetRefData,wxRichTextFormattingDialogFactory::GetRefData,wxRichTextHeaderFooterData::GetRefData,wxRichTextImageBlock::GetRefData,wxRichTextObject::GetRefData,wxRichTextPrinting::GetRefData,wxRichTextProperties::GetRefData,wxRichTextRenderer::GetRefData,wxRichTextStyleDefinition::GetRefData,wxRichTextStyleSheet::GetRefData,wxSizer::GetRefData,wxSizerItem::GetRefData,wxSockAddress::GetRefData,wxSocketBase::GetRefData,wxSound::GetRefData,wxStringTokenizer::GetRefData,wxSystemOptions::GetRefData,wxTCPClient::GetRefData,wxTCPConnection::GetRefData,wxTCPServer::GetRefData,wxToolBarToolBase::GetRefData,wxToolTip::GetRefData,wxURI::GetRefData,wxVariant::GetRefData,wxWebViewFactory::GetRefData,wxXmlDocument::GetRefData,wxXmlResource::GetRefData,wxXmlResourceHandler::GetRefData">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxObjectRefData *"/>
    <use-retval/>
  </function>
  <!-- bool IsKindOf (const wxClassInfo *info) const -->
  <!-- and inherited classes -->
  <function name="wxObject::IsKindOf,wxAcceleratorTable::IsKindOf,wxAccessible::IsKindOf,wxAnimation::IsKindOf,wxArchiveClassFactory::IsKindOf,wxArchiveEntry::IsKindOf,wxArtProvider::IsKindOf,wxAutomationObject::IsKindOf,wxBitmapHandler::IsKindOf,wxClient::IsKindOf,wxClipboard::IsKindOf,wxColour::IsKindOf,wxColourData::IsKindOf,wxColourPropertyValue::IsKindOf,wxCommand::IsKindOf,wxCommandProcessor::IsKindOf,wxConfigBase::IsKindOf,wxConnection::IsKindOf,wxConnectionBase::IsKindOf,wxContextHelp::IsKindOf,wxDataViewIconText::IsKindOf,wxDataViewRenderer::IsKindOf,wxDC::IsKindOf,wxDDEClient::IsKindOf,wxDocTemplate::IsKindOf,wxDragImage::IsKindOf,wxEncodingConverter::IsKindOf,wxEvent::IsKindOf,wxEvtHandler::IsKindOf,wxFileHistory::IsKindOf,wxFileSystem::IsKindOf,wxFileSystemHandler::IsKindOf,wxFilterClassFactory::IsKindOf,wxFindReplaceData::IsKindOf,wxFontData::IsKindOf,wxFSFile::IsKindOf,wxGDIObject::IsKindOf,wxGLContext::IsKindOf,wxGraphicsObject::IsKindOf,wxGraphicsRenderer::IsKindOf,wxGridTableBase::IsKindOf,wxHashTable::IsKindOf,wxHelpControllerBase::IsKindOf,wxHtmlCell::IsKindOf,wxHtmlDCRenderer::IsKindOf,wxHtmlEasyPrinting::IsKindOf,wxHtmlFilter::IsKindOf,wxHtmlHelpData::IsKindOf,wxHtmlLinkInfo::IsKindOf,wxHtmlTagHandler::IsKindOf,wxImage::IsKindOf,wxImageHandler::IsKindOf,wxImageList::IsKindOf,wxIndividualLayoutConstraint::IsKindOf,wxJoystick::IsKindOf,wxLayoutAlgorithm::IsKindOf,wxLayoutConstraints::IsKindOf,wxListItem::IsKindOf,wxMask::IsKindOf,wxMenuItem::IsKindOf,wxMetafile::IsKindOf,wxModule::IsKindOf,wxPageSetupDialog::IsKindOf,wxPageSetupDialogData::IsKindOf,wxPGCell::IsKindOf,wxPGEditor::IsKindOf,wxPGEditorDialogAdapter::IsKindOf,wxPGProperty::IsKindOf,wxPrintData::IsKindOf,wxPrintDialog::IsKindOf,wxPrintDialogData::IsKindOf,wxPrinter::IsKindOf,wxPrintout::IsKindOf,wxPrintPreview::IsKindOf,wxQuantize::IsKindOf,wxRegionIterator::IsKindOf,wxRichTextAction::IsKindOf,wxRichTextDrawingContext::IsKindOf,wxRichTextDrawingHandler::IsKindOf,wxRichTextFieldType::IsKindOf,wxRichTextFileHandler::IsKindOf,wxRichTextFontTable::IsKindOf,wxRichTextFormattingDialogFactory::IsKindOf,wxRichTextHeaderFooterData::IsKindOf,wxRichTextImageBlock::IsKindOf,wxRichTextObject::IsKindOf,wxRichTextPrinting::IsKindOf,wxRichTextProperties::IsKindOf,wxRichTextRenderer::IsKindOf,wxRichTextStyleDefinition::IsKindOf,wxRichTextStyleSheet::IsKindOf,wxSizer::IsKindOf,wxSizerItem::IsKindOf,wxSockAddress::IsKindOf,wxSocketBase::IsKindOf,wxSound::IsKindOf,wxStringTokenizer::IsKindOf,wxSystemOptions::IsKindOf,wxTCPClient::IsKindOf,wxTCPConnection::IsKindOf,wxTCPServer::IsKindOf,wxToolBarToolBase::IsKindOf,wxToolTip::IsKindOf,wxURI::IsKindOf,wxVariant::IsKindOf,wxWebViewFactory::IsKindOf,wxXmlDocument::IsKindOf,wxXmlResource::IsKindOf,wxXmlResourceHandler::IsKindOf">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- bool IsSameAs (const wxObject &obj) const -->
  <function name="wxObject::IsSameAs,wxAcceleratorTable::IsSameAs,wxBitmap::IsSameAs,wxAccessible::IsSameAs,wxAnimation::IsSameAs,wxArchiveClassFactory::IsSameAs,wxArchiveEntry::IsSameAs,wxArtProvider::IsSameAs,wxAutomationObject::IsSameAs,wxBitmapHandler::IsSameAs,wxClient::IsSameAs,wxClipboard::IsSameAs,wxColour::IsSameAs,wxColourData::IsSameAs,wxColourPropertyValue::IsSameAs,wxCommand::IsSameAs,wxCommandProcessor::IsSameAs,wxConfigBase::IsSameAs,wxConnection::IsSameAs,wxConnectionBase::IsSameAs,wxContextHelp::IsSameAs,wxDataViewIconText::IsSameAs,wxDataViewRenderer::IsSameAs,wxDC::IsSameAs,wxDDEClient::IsSameAs,wxDocTemplate::IsSameAs,wxDragImage::IsSameAs,wxEncodingConverter::IsSameAs,wxEvent::IsSameAs,wxEvtHandler::IsSameAs,wxFileHistory::IsSameAs,wxFileSystem::IsSameAs,wxFileSystemHandler::IsSameAs,wxFilterClassFactory::IsSameAs,wxFindReplaceData::IsSameAs,wxFontData::IsSameAs,wxFSFile::IsSameAs,wxGDIObject::IsSameAs,wxGLContext::IsSameAs,wxGraphicsObject::IsSameAs,wxGraphicsRenderer::IsSameAs,wxGridTableBase::IsSameAs,wxHashTable::IsSameAs,wxHelpControllerBase::IsSameAs,wxHtmlCell::IsSameAs,wxHtmlDCRenderer::IsSameAs,wxHtmlEasyPrinting::IsSameAs,wxHtmlFilter::IsSameAs,wxHtmlHelpData::IsSameAs,wxHtmlLinkInfo::IsSameAs,wxHtmlTagHandler::IsSameAs,wxImage::IsSameAs,wxImageHandler::IsSameAs,wxImageList::IsSameAs,wxIndividualLayoutConstraint::IsSameAs,wxJoystick::IsSameAs,wxLayoutAlgorithm::IsSameAs,wxLayoutConstraints::IsSameAs,wxListItem::IsSameAs,wxMask::IsSameAs,wxMenuItem::IsSameAs,wxMetafile::IsSameAs,wxModule::IsSameAs,wxPageSetupDialog::IsSameAs,wxPageSetupDialogData::IsSameAs,wxPGCell::IsSameAs,wxPGEditor::IsSameAs,wxPGEditorDialogAdapter::IsSameAs,wxPGProperty::IsSameAs,wxPrintData::IsSameAs,wxPrintDialog::IsSameAs,wxPrintDialogData::IsSameAs,wxPrinter::IsSameAs,wxPrintout::IsSameAs,wxPrintPreview::IsSameAs,wxQuantize::IsSameAs,wxRegionIterator::IsSameAs,wxRichTextAction::IsSameAs,wxRichTextDrawingContext::IsSameAs,wxRichTextDrawingHandler::IsSameAs,wxRichTextFieldType::IsSameAs,wxRichTextFileHandler::IsSameAs,wxRichTextFontTable::IsSameAs,wxRichTextFormattingDialogFactory::IsSameAs,wxRichTextHeaderFooterData::IsSameAs,wxRichTextImageBlock::IsSameAs,wxRichTextObject::IsSameAs,wxRichTextPrinting::IsSameAs,wxRichTextProperties::IsSameAs,wxRichTextRenderer::IsSameAs,wxRichTextStyleDefinition::IsSameAs,wxRichTextStyleSheet::IsSameAs,wxSizer::IsSameAs,wxSizerItem::IsSameAs,wxSockAddress::IsSameAs,wxSocketBase::IsSameAs,wxSound::IsSameAs,wxStringTokenizer::IsSameAs,wxSystemOptions::IsSameAs,wxTCPClient::IsSameAs,wxTCPConnection::IsSameAs,wxTCPServer::IsSameAs,wxToolBarToolBase::IsSameAs,wxToolTip::IsSameAs,wxURI::IsSameAs,wxVariant::IsSameAs,wxWebViewFactory::IsSameAs,wxXmlDocument::IsSameAs,wxXmlResource::IsSameAs,wxXmlResourceHandler::IsSameAs">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxString::IsSameAs(const wxString & s, bool caseSensitive = true) const -->
  <!-- bool wxString::IsSameAs(const wxUniChar ch, bool caseSensitive = true) const -->
  <function name="wxString::IsSameAs">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxToolBar::ToggleTool( int toolid, bool toggle ) -->
  <function name="wxToolBar::ToggleTool">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxMenuItem* wxMenu::AppendCheckItem(int id, const wxString & item, const wxString & 	help = wxEmptyString)-->
  <!-- wxMenuItem* wxMenu::AppendRadioItem(int id, const wxString & item, const wxString & 	help = wxEmptyString)-->
  <function name="wxMenu::AppendCheckItem,wxMenu::AppendRadioItem">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxMenuItem*"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
  </function>
  <!-- virtual int wxMenu::FindItem(const wxString & itemString) const-->
  <!-- wxMenuItem* wxMenu::FindItem(int id, wxMenu ** menu = NULL ) const -->
  <function name="wxMenu::FindItem">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out" default="NULL"/>
  </function>
  <!-- void Ref(const wxObject &clone) -->
  <function name="wxObject::Ref,wxAcceleratorTable::Ref,wxAccessible::Ref,wxAnimation::Ref,wxArchiveClassFactory::Ref,wxArchiveEntry::Ref,wxArtProvider::Ref,wxAutomationObject::Ref,wxBitmapHandler::Ref,wxClient::Ref,wxClipboard::Ref,wxColour::Ref,wxColourData::Ref,wxColourPropertyValue::Ref,wxCommand::Ref,wxCommandProcessor::Ref,wxConfigBase::Ref,wxConnection::Ref,wxConnectionBase::Ref,wxContextHelp::Ref,wxDataViewIconText::Ref,wxDataViewRenderer::Ref,wxDC::Ref,wxDDEClient::Ref,wxDocTemplate::Ref,wxDragImage::Ref,wxEncodingConverter::Ref,wxEvent::Ref,wxEvtHandler::Ref,wxFileHistory::Ref,wxFileSystem::Ref,wxFileSystemHandler::Ref,wxFilterClassFactory::Ref,wxFindReplaceData::Ref,wxFontData::Ref,wxFSFile::Ref,wxGDIObject::Ref,wxGLContext::Ref,wxGraphicsObject::Ref,wxGraphicsRenderer::Ref,wxGridTableBase::Ref,wxHashTable::Ref,wxHelpControllerBase::Ref,wxHtmlCell::Ref,wxHtmlDCRenderer::Ref,wxHtmlEasyPrinting::Ref,wxHtmlFilter::Ref,wxHtmlHelpData::Ref,wxHtmlLinkInfo::Ref,wxHtmlTagHandler::Ref,wxImage::Ref,wxImageHandler::Ref,wxImageList::Ref,wxIndividualLayoutConstraint::Ref,wxJoystick::Ref,wxLayoutAlgorithm::Ref,wxLayoutConstraints::Ref,wxListItem::Ref,wxMask::Ref,wxMenuItem::Ref,wxMetafile::Ref,wxModule::Ref,wxPageSetupDialog::Ref,wxPageSetupDialogData::Ref,wxPGCell::Ref,wxPGEditor::Ref,wxPGEditorDialogAdapter::Ref,wxPGProperty::Ref,wxPrintData::Ref,wxPrintDialog::Ref,wxPrintDialogData::Ref,wxPrinter::Ref,wxPrintout::Ref,wxPrintPreview::Ref,wxQuantize::Ref,wxRegionIterator::Ref,wxRichTextAction::Ref,wxRichTextDrawingContext::Ref,wxRichTextDrawingHandler::Ref,wxRichTextFieldType::Ref,wxRichTextFileHandler::Ref,wxRichTextFontTable::Ref,wxRichTextFormattingDialogFactory::Ref,wxRichTextHeaderFooterData::Ref,wxRichTextImageBlock::Ref,wxRichTextObject::Ref,wxRichTextPrinting::Ref,wxRichTextProperties::Ref,wxRichTextRenderer::Ref,wxRichTextStyleDefinition::Ref,wxRichTextStyleSheet::Ref,wxSizer::Ref,wxSizerItem::Ref,wxSockAddress::Ref,wxSocketBase::Ref,wxSound::Ref,wxStringTokenizer::Ref,wxSystemOptions::Ref,wxTCPClient::Ref,wxTCPConnection::Ref,wxTCPServer::Ref,wxToolBarToolBase::Ref,wxToolTip::Ref,wxURI::Ref,wxVariant::Ref,wxWebViewFactory::Ref,wxXmlDocument::Ref,wxXmlResource::Ref,wxXmlResourceHandler::Ref">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- https://docs.wxwidgets.org/3.1/classwx_window.html -->
  <!-- bool wxWindow::Close (bool force = false) -->
  <function name="wxWindow::Close,wxBannerWindow::Close,wxControl::Close,wxGLCanvas::Close,wxHtmlHelpWindow::Close,wxMDIClientWindow::Close,wxMenuBar::Close,wxNativeWindow::Close,wxNonOwnedWindow::Close,wxPanel::Close,wxPGMultiButton::Close,wxSashWindow::Close,wxSplitterWindow::Close,wxTipWindow::Close,wxTreeListCtrl::Close,wxActiveXContainer::Close,wxActivityIndicator::Close,wxAnimationCtrl::Close,wxAnyButton::Close,wxAuiToolBar::Close,wxBookCtrlBase::Close,wxCalenderCtrl::Close,wxCheckBox::Close,wxChoice::Close,wxCollapsibleHeaderCtrl::Close,wxCollapsiblePane::Close,wxComboBox::Close,wxComboCtrl::Close,wxControlWithItems::Close,wxDataViewCtrl::Close,wxDatePickerCtrl::Close,wxFileCtrl::Close,wxGauge::Close,wxGenericDirCtrl::Close,wxHeaderCtrl::Close,wxHyperlinkCtrl::Close,wxInfoBar::Close,wxListBox::Close,wxListCtrl::Close,wxMediaCtrl::Close,wxPickerBase::Close,wxPropertyGrid::Close,wxRadioBox::Close,wxRadioButton::Close,wxRibbonControl::Close,wxRichTextCtrl::Close">
    <noreturn>true</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStaticText::Wrap (int width ) -->
  <function name="wxStaticText::Wrap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxDialog::EndModal(int retCode) -->
  <function name="wxDialog::EndModal">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxToolBarToolBase * wxToolBarBase::AddTool( wxToolBarToolBase * tool ) -->
  <function name="wxToolBarBase::AddTool">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxToolBarToolBase *"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxListBox::SetString( unsigned int n, const wxString & s ) -->
  <function name="wxListBox::SetString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- virtual int wxListBox::FindString( const wxString & s, bool bCase = false ) const -->
  <function name="wxListBox::FindString">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="int"/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxListBox::SetSelection(int n) -->
  <function name="wxListBox::SetSelection">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxWindow::SetPosition(const wxPoint & pt)
       and derived classes -->
  <function name="wxWindow::SetPosition,wxStaticText::SetPosition,wxButton::SetPosition,wxBitmapButton::SetPosition,wxBannerWindow::SetPosition,wxControl::SetPosition,wxGLCanvas::SetPosition,wxHtmlHelpWindow::SetPosition,wxMDIClientWindow::SetPosition,wxMenuBar::SetPosition,wxNativeWindow::SetPosition,wxNonOwnedWindow::SetPosition,wxPanel::SetPosition,wxPGMultiButton::SetPosition,wxSashWindow::SetPosition,wxSplitterWindow::SetPosition,wxTipWindow::SetPosition,wxTreeListCtrl::SetPosition,wxActiveXContainer::SetPosition,wxActivityIndicator::SetPosition,wxAnimationCtrl::SetPosition,wxAnyButton::SetPosition,wxAuiToolBar::SetPosition,wxBookCtrlBase::SetPosition,wxCalenderCtrl::SetPosition,wxCheckBox::SetPosition,wxChoice::SetPosition,wxCollapsibleHeaderCtrl::SetPosition,wxCollapsiblePane::SetPosition,wxComboBox::SetPosition,wxComboCtrl::SetPosition,wxControlWithItems::SetPosition,wxDataViewCtrl::SetPosition,wxDatePickerCtrl::SetPosition,wxFileCtrl::SetPosition,wxGauge::SetPosition,wxGenericDirCtrl::SetPosition,wxHeaderCtrl::SetPosition,wxHyperlinkCtrl::SetPosition,wxInfoBar::SetPosition,wxListBox::SetPosition,wxListCtrl::SetPosition,wxMediaCtrl::SetPosition,wxPickerBase::SetPosition,wxPropertyGrid::SetPosition,wxRadioBox::SetPosition,wxRadioButton::SetPosition,wxRibbonCtrl::SetPosition,wxRichTextCtrl::SetPosition">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxGrid::AppendCols( int numCols = 1, bool updateLabels = true ) -->
  <!-- bool wxGrid::AppendRows( int numRows = 1, bool updateLabels = true ) -->
  <function name="wxGrid::AppendCols,wxGrid::AppendRows">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool SetFont (const wxFont &font) 
       and derived classes -->
  <function name="wxToggleButton::SetFont,wxSpinCtrl::SetFont,wxGrid::SetFont,wxStyledTextCtrl::SetFont,wxStaticBox::SetFont,wxButton::SetFont,wxDataViewTreeCtrl::SetFont,wxTextCtrl::SetFont,wxWindow::SetFont,wxPropertyGridManager::SetFont,wxPaintDC::SetFont,wxStaticText::SetFont,wxBannerWindow::SetFont,wxControl::SetFont,wxGLCanvas::SetFont,wxHtmlHelpWindow::SetFont,wxMDIClientWindow::SetFont,wxMenuBar::SetFont,wxNativeWindow::SetFont,wxNonOwnedWindow::SetFont,wxPanel::SetFont,wxPGMultiButton::SetFont,wxSashWindow::SetFont,wxSplitterWindow::SetFont,wxTipWindow::SetFont,wxTreeListCtrl::SetFont,wxActiveXContainer::SetFont,wxActivityIndicator::SetFont,wxAnimationCtrl::SetFont,wxAnyButton::SetFont,wxAuiToolBar::SetFont,wxBookCtrlBase::SetFont,wxCalenderCtrl::SetFont,wxCheckBox::SetFont,wxChoice::SetFont,wxCollapsibleHeaderCtrl::SetFont,wxCollapsiblePane::SetFont,wxComboBox::SetFont,wxComboCtrl::SetFont,wxControlWithItems::SetFont,wxDataViewCtrl::SetFont,wxDatePickerCtrl::SetFont,wxFileCtrl::SetFont,wxGauge::SetFont,wxGenericDirCtrl::SetFont,wxHeaderCtrl::SetFont,wxHyperlinkCtrl::SetFont,wxInfoBar::SetFont,wxListBox::SetFont,wxListCtrl::SetFont,wxMediaCtrl::SetFont,wxPickerBase::SetFont,wxPropertyGrid::SetFont,wxRadioBox::SetFont,wxRadioButton::SetFont,wxRibbonCtrl::SetFont,wxRichTextCtrl::SetFont">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxStaticText::SetLabel ( const wxString & label ) -->
  <function name="wxStaticText::SetLabel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual wxControl* wxToolBar::FindControl(int id) -->
  <function name="wxToolBar::FindControl">
    <noreturn>false</noreturn>
    <returnValue type="wxControl*"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!--virtual wxToolBarToolBase* wxToolBar::AddControl(wxControl * control, const wxString & label = wxEmptyString)-->
  <function name="wxToolBar::AddControl">
    <noreturn>false</noreturn>
    <returnValue type="wxToolBarToolBase *"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
  </function>
  <!-- void wxDC::DrawEllipse( wxCoord x, wxCoord y, wxCoord width, wxCoord height ) -->
  <!-- void wxMemoryDC::DrawEllipse( wxCoord x, wxCoord y, wxCoord width, wxCoord height ) -->
  <function name="wxDC::DrawEllipse,wxMemoryDC::DrawEllipse">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawEllipticArc (wxCoord x, wxCoord y, wxCoord width, wxCoord height, double start, double end) -->
  <!-- void wxDC::DrawEllipticArc (const wxPoint &pt, const wxSize &sz, double sa, double ea) -->
  <function name="wxDC::DrawEllipticArc,wxGCDC::DrawEllipticArc,wxMemoryDC::DrawEllipticArc,wxBufferedDC::DrawEllipticArc,wxBufferedPaintDC::DrawEllipticArc,wxAutoBufferedPaintDC::DrawEllipticArc,wxMetafileDC::DrawEllipticArc,wxMirrorDC::DrawEllipticArc,wxPostScriptDC::DrawEllipticArc,wxPrinterDC::DrawEllipticArc,wxScreenDC::DrawEllipticArc,wxSVGFileDC::DrawEllipticArc,wxWindowDC::DrawEllipticArc,wxClientDC::DrawEllipticArc,wxPaintDC::DrawEllipticArc">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawSpline (int n, const wxPoint points[]) -->
  <!-- void wxDC::DrawSpline (const wxPointList *points) -->
  <!-- void wxDC::DrawSpline (wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2, wxCoord x3, wxCoord y3) -->
  <function name="wxDC::DrawSpline,wxMemoryDC::DrawSpline,wxBufferedDC::DrawSpline,wxBufferedPaintDC::DrawSpline,wxAutoBufferedPaintDC::DrawSpline,wxMetaFileDC::DrawSpline,wxMirrorDC::DrawSpline,wxPostScriptDC::DrawSpline,wxGCDC::DrawSpline,wxPrinterDC::DrawSpline,wxScreenDC::DrawSpline,wxSVGFileDC::DrawSpline,wxWindowDC::DrawSpline,wxClientDC::DrawSpline,wxPaintDC::DrawSpline">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxFont::SetWeight(wxFontWeight weight) -->
  <function name="wxFont::SetWeight">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxSizer::SetItemMinSize( wxWindow * window, int width, int height ) -->
  <!-- bool wxBoxSizer::SetItemMinSize( wxWindow * window, int width, int height ) -->
  <function name="wxSizer::SetItemMinSize,wxBoxSizer::SetItemMinSize">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxPoint wxRect::GetPosition() const -->
  <function name="wxStaticText::GetPosition">
    <noreturn>false</noreturn>
    <returnValue type="wxPoint"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- bool wxVariant::IsNull() const -->
  <function name="wxVariant::IsNull">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- void wxVariant::MakeNull() -->
  <function name="wxVariant::MakeNull">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
  </function>
  <!-- bool wxVariant::IsType() const -->
  <function name="wxVariant::IsType">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxAny wxVariant::GetAny() const -->
  <function name="wxVariant::GetAny">
    <noreturn>false</noreturn>
    <returnValue type="wxAny"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxArrayString wxVariant::GetArrayString() const -->
  <function name="wxVariant::GetArrayString">
    <noreturn>false</noreturn>
    <returnValue type="wxArrayString"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- bool wxVariant::GetBool() const -->
  <function name="wxVariant::GetBool">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxUniChar wxVariant::GetChar() const -->
  <function name="wxVariant::GetChar">
    <noreturn>false</noreturn>
    <returnValue type="wxUniChar"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxVariantData * wxVariant::GetData () const-->
  <function name="wxVariant::GetData">
    <noreturn>false</noreturn>
    <returnValue type="wxVariantData *"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxDateTime wxVariant::GetDateTime () const-->
  <function name="wxVariant::GetDateTime">
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- double wxVariant::GetDouble () const-->
  <function name="wxVariant::GetDouble">
    <noreturn>false</noreturn>
    <returnValue type="double"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- long wxVariant::GetLong() const -->
  <function name="wxVariant::GetLong">
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxLongLong wxVariant::GetLongLong() const -->
  <function name="wxVariant::GetLongLong">
    <noreturn>false</noreturn>
    <returnValue type="wxLongLong"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- const wxString & wxVariant::GetName () const-->
  <function name="wxVariant::GetName">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxString wxVariant::GetString () const-->
  <!-- wxString wxVariant::GetType () const-->
  <function name="wxVariant::GetString,wxVariant::GetType">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxULongLong wxVariant::GetULongLong() const -->
  <function name="wxVariant::GetULongLong">
    <noreturn>false</noreturn>
    <returnValue type="wxULongLong"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- void * wxVariant::GetVoidPtr() const -->
  <function name="wxVariant::GetVoidPtr">
    <noreturn>false</noreturn>
    <returnValue type="void *"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- wxObject * wxVariant::GetWxObjectPtr() const -->
  <function name="wxVariant::GetWxObjectPtr">
    <noreturn>false</noreturn>
    <returnValue type="wxObject *"/>
    <leak-ignore/>
    <const/>
    <use-retval/>
  </function>
  <!-- void wxSize::SetHeight(int height)-->
  <!-- void wxSize::SetWidth(int width)-->
  <function name="wxSize::SetHeight,wxSize::SetWidth">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxBrush::SetColour(const wxColour & colour)-->
  <function name="wxBrush::SetColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxDC::SetClippingRegion (wxCoord x, wxCoord y, wxCoord width, wxCoord height)-->
  <!-- void wxDC::SetClippingRegion (const wxPoint &pt, const wxSize &sz) -->
  <!-- void wxDC::SetClippingRegion (const wxRect &rect) -->
  <!-- void wxMemoryDC::SetClippingRegion (wxCoord x, wxCoord y, wxCoord width, wxCoord height)-->
  <!-- void wxMemoryDC::SetClippingRegion (const wxPoint &pt, const wxSize &sz) -->
  <!-- void wxMemoryDC::SetClippingRegion (const wxRect &rect) -->
  <function name="wxDC::SetClippingRegion,wxMemoryDC::SetClippingRegion">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- virtual void wxBrush::SetStyle (wxBrushStyle style) -->
  <function name="wxBrush::SetStyle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxComboCtrl::SetValue(const wxString &value) -->
  <!-- virtual void wxOwnerDrawnComboBox::SetValue(const wxString &value) -->
  <!-- virtual void wxComboCtrl::SetValueByUser(const wxString &value) -->
  <function name="wxComboCtrl::SetValue,wxOwnerDrawnComboBox::SetValue,wxComboCtrl::SetValueByUser">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxBitmap::LoadFile( const wxString & name, wxBitmapType type = wxBITMAP_DEFAULT_TYPE ) -->
  <function name="wxBitmap::LoadFile">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxBITMAP_DEFAULT_TYPE">
      <not-null/>
    </arg>
  </function>
  <!-- wxRect wxRect::CentreIn(const wxRect & r, int dir = wxBOTH) -->
  <!-- wxRect wxRect::CenterIn(const wxRect & r, int dir = wxBOTH) -->
  <function name="wxRect::CentreIn,wxRect::CenterIn">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxRect"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="wxBOTH">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxTextEntry::SetValue (const wxString & value)-->
  <!-- virtual void wxTextCtrl::SetValue (const wxString & value)-->
  <!-- virtual void wxComboBox::SetValue (const wxString & value)-->
  <!-- virtual void wxStyledTextCtrl::SetValue (const wxString & value)-->
  <function name="wxTextEntry::SetValue,wxTextCtrl::SetValue,wxComboBox::SetValue,wxStyledTextCtrl::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxLog::SetLogLevel( wxLogLevel logLevel ) -->
  <!-- void wxLogGui::SetLogLevel( wxLogLevel logLevel ) -->
  <function name="wxLog::SetLogLevel,wxLogGui::SetLogLevel">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxRect::Contains(const wxPoint & pt) const -->
  <!-- bool wxRect::Contains(const wxRect & rect) const -->
  <function name="wxRect::Contains">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxString wxListCtrl::GetItemText (long item, int col=0) const -->
  <!-- wxString wxListView::GetItemText (long item, int col=0) const -->
  <function name="wxListCtrl::GetItemText,wxListView::GetItemText">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxListCtrl::SetColumnWidth (int col, int width) -->
  <!-- bool wxListView::SetColumnWidth (int col, int width) -->
  <function name="wxListCtrl::SetColumnWidth,wxListView::SetColumnWidth">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- long wxListCtrl::InsertColumn(long col, const wxListItem & info) -->
  <!-- long wxListCtrl::InsertColumn(long col, const wxString & heading, int format = wxLIST_FORMAT_LEFT, int width = wxLIST_AUTOSIZE) -->
  <!-- long wxListView::InsertColumn(long col, const wxListItem & info) -->
  <!-- long wxListView::InsertColumn(long col, const wxString & heading, int format = wxLIST_FORMAT_LEFT, int width = wxLIST_AUTOSIZE) -->
  <function name="wxListCtrl::InsertColumn,wxListView::InsertColumn">
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="wxLIST_FORMAT_LEFT">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in" default="wxLIST_AUTOSIZE">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxLog * wxLog::SetActiveTarget( wxLog * logger ) -->
  <!-- wxLog * wxLogGui::SetActiveTarget( wxLog * logger ) -->
  <function name="wxLog::SetActiveTarget,wxLogGui::SetActiveTarget">
    <noreturn>false</noreturn>
    <returnValue type="wxLog *"/>
    <leak-ignore/>
    <arg nr="1" direction="inout"/>
  </function>
  <!-- bool wxIsSameDouble( double x, double y ) const -->
  <function name="wxIsSameDouble">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxConfigBase::Write(const wxString &key, const wxString &value)-->
  <!-- bool wxConfigBase::Write(const wxString &key, const long value)-->
  <!-- bool wxConfigBase::Write(const wxString &key, const double value)-->
  <!-- bool wxConfigBase::Write(const wxString &key, const bool value)-->
  <function name="wxConfigBase::Write,wxConfig::Write,wxFileConfig::Write,wxRegConfig::Write">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxGrid::SetDefaultCellTextColour( const wxColour &colour ) -->
  <!-- void wxGrid::SetDefaultCellBackgroundColour( const wxColour &colour ) -->
  <!-- void wxGrid::SetDefaultCellFont( const wxFont &font ) -->
  <function name="wxGrid::SetDefaultCellTextColour,wxGrid::SetDefaultCellBackgroundColour,wxGrid::SetDefaultCellFont">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGrid::SetCellFont( int row, int col, const wxFont &  ) -->
  <function name="wxGrid::SetCellFont">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!-- void wxSlider::SetMax( int maxValue ) -->
  <!-- void wxSlider::SetMin( int minValue ) -->
  <function name="wxSlider::SetMax,wxSlider::SetMin">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxTextEntry::SetInsertionPoint(long pos) -->
  <!-- virtual void wxTextCtrl::SetInsertionPoint(long pos) -->
  <function name="wxTextEntry::SetInsertionPoint,wxTextCtrl::SetInsertionPoint">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxMemoryBuffer::AppendByte(char data) -->
  <function name="wxMemoryBuffer::AppendByte">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void* wxMemoryBuffer::GetWriteBuf(size_t sizeNeeded) -->
  <function name="wxMemoryBuffer::GetWriteBuf">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void*"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <valid>1:</valid>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxMemoryBuffer::UngetWriteBuf(size_t sizeNeeded) -->
  <function name="wxMemoryBuffer::UngetWriteBuf">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <valid>1:</valid>
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--bool Read(const wxString &key, wxString *str) const -->
  <!--bool Read(const wxString &key, double *d) const -->
  <!--bool Read(const wxString &key, float *f) const -->
  <!--bool Read(const wxString &key, bool *b) const -->
  <!--bool Read(const wxString &key, wxMemoryBuffer *buf) const -->
  <function name="wxConfigBase::Read,wxConfig::Read,wxFileConfig::Read,wxRegConfig::Read">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="inout">
      <not-null/>
    </arg>
  </function>
  <!-- void wxControl::SetLabelText(const wxString & text)
     and derived classes -->
  <function name="wxControl::SetLabelText,wxToggleButton::SetLabelText,wxButton::SetLabelText,wxActiveXContainer::SetLabelText,wxActivityIndicator::SetLabelText,wxAnimationCtrl::SetLabelText,wxAnyButton::SetLabelText,wxAuiToolBar::SetLabelText,wxBookCtrlBase::SetLabelText,wxCalendarCtrl::SetLabelText,wxCheckBox::SetLabelText,wxChoice::SetLabelText,wxCollapsibleHeaderCtrl::SetLabelText,wxCollapsiblePane::SetLabelText,wxComboBox::SetLabelText,wxComboCtrl::SetLabelText,wxControlWithItems::SetLabelText,wxDataViewCtrl::SetLabelText,wxDatePickerCtrl::SetLabelText,wxFileCtrl::SetLabelText,wxGauge::SetLabelText,wxGenericDirCtrl::SetLabelText,wxHeaderCtrl::SetLabelText,wxHyperlinkCtrl::SetLabelText,wxInfoBar::SetLabelText,wxListBox::SetLabelText,wxListCtrl::SetLabelText,wxMediaCtrl::SetLabelText,wxPickerBase::SetLabelText,wxPropertyGrid::SetLabelText,wxRadioBox::SetLabelText,wxRadioButton::SetLabelText,wxRibbonControl::SetLabelText,wxRichTextCtrl::SetLabelText,wxRichTextStyleListCtrl::SetLabelText,wxScrollBar::SetLabelText,wxSlider::SetLabelText,wxSpinButton::SetLabelText,wxSpinCtrl::SetLabelText,wxSpinCtrlDouble::SetLabelText,wxStaticBitmap::SetLabelText,wxStaticBox::SetLabelText,wxStaticLine::SetLabelText,wxStaticText::SetLabelText,wxStatusBar::SetLabelText,wxStyledTextCtrl::SetLabelText,wxTextCtrl::SetLabelText,wxTimePickerCtrl::SetLabelText,wxToolBar::SetLabelText,wxTreeCtrl::SetLabelText,wxWebKitCtrl::SetLabelText,wxWebView::SetLabelText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxAboutDialogInfo::AddArtist (const wxString &artist)-->
  <!-- void wxAboutDialogInfo::AddDeveloper (const wxString &developer)-->
  <!-- void wxAboutDialogInfo::AddDocWriter (const wxString &docwriter)-->
  <!-- void wxAboutDialogInfo::AddTranslator (const wxString &translator)-->
  <!-- void wxAboutDialogInfo::SetArtists (const wxArrayString &artists)-->
  <!-- void wxAboutDialogInfo::SetCopyright (const wxString &copyright)-->
  <!-- void wxAboutDialogInfo::SetDescription (const wxString &description)-->
  <!-- void wxAboutDialogInfo::SetName (const wxString &name)-->
  <!-- void wxAboutDialogInfo::SetLicence (const wxString &l)-->
  <!-- void wxAboutDialogInfo::SetLicense (const wxString &l)-->
  <!-- void wxAboutDialogInfo::SetDevelopers (const wxArrayString &devs)-->
  <!-- void wxAboutDialogInfo::SetDocWriters (const wxArrayString &docwriters)-->
  <!-- void wxAboutDialogInfo::SetTranslators (const wxArrayString &translators)-->
  <function name="wxAboutDialogInfo::AddArtist,wxAboutDialogInfo::AddDeveloper,wxAboutDialogInfo::SetTranslators,wxAboutDialogInfo::SetLicence,wxAboutDialogInfo::SetLicense,wxAboutDialogInfo::SetName,wxAboutDialogInfo::AddDocWriter,wxAboutDialogInfo::SetDevelopers,wxAboutDialogInfo::SetDocWriters,wxAboutDialogInfo::SetDescription,wxAboutDialogInfo::AddTranslator,wxAboutDialogInfo::SetArtists,wxAboutDialogInfo::SetCopyright">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxAboutDialogInfo::SetVersion (const wxString &version, const wxString &longVersion=wxString())-->
  <function name="wxAboutDialogInfo::SetVersion">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default=""/>
  </function>
  <!-- void wxAboutDialogInfo::SetIcon (const wxIcon &)-->
  <function name="wxAboutDialogInfo::SetIcon">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGauge::SetValue(int pos)-->
  <!-- void wxGauge::SetRange(int range)-->
  <!-- void wxGauge::SetShadowWidth(int width)-->
  <function name="wxGauge::SetValue,wxGauge::SetRange,wxGauge::SetShadowWidth">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxRadioButton::SetValue(bool value)-->
  <function name="wxRadioButton::SetValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxSize wxWindowBase::GetTextExtent(const wxString & string) const-->
  <!-- wxSize wxWindow::GetTextExtent(const wxString & string) const-->
  <!-- wxSize wxTextCtrl::GetTextExtent(const wxString & string) const-->
  <!-- wxSize wxStaticText::GetTextExtent(const wxString & string) const-->
  <function name="wxWindowBase::GetTextExtent,wxWindow::GetTextExtent,wxTextCtrl::GetTextExtent,wxStaticText::GetTextExtent">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxSize"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxWindowBase::Center(int direction=wxBOTH) -->
  <!-- void wxWindowBase::CenterOnParent(int direction=wxBOTH) -->
  <!-- void wxWindowBase::Centre(int direction=wxBOTH) -->
  <!-- void wxWindowBase::CentreOnParent(int direction=wxBOTH) -->
  <!-- void wxWindow::Center(int direction=wxBOTH) -->
  <!-- void wxWindow::CenterOnParent(int direction=wxBOTH) -->
  <!-- void wxWindow::Centre(int direction=wxBOTH) -->
  <!-- void wxWindow::CentreOnParent(int direction=wxBOTH) -->
  <!-- void wxPreviewFrame::Center(int direction=wxBOTH) -->
  <!-- void wxPreviewFrame::CenterOnParent(int direction=wxBOTH) -->
  <!-- void wxPreviewFrame::Centre(int direction=wxBOTH) -->
  <!-- void wxPreviewFrame::CentreOnParent(int direction=wxBOTH) -->
  <function name="wxPreviewFrame::CentreOnParent,wxPreviewFrame::Centre,wxPreviewFrame::CenterOnParent,wxPreviewFrame::Center,wxWindow::Center,wxWindow::CenterOnParent,wxWindow::Centre,wxWindow::CentreOnParent,wxWindowBase::Center,wxWindowBase::CenterOnParent,wxWindowBase::Centre,wxWindowBase::CentreOnParent">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" default="wxBOTH" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxSlider::SetRange(int minValue, int maxValue) -->
  <!-- virtual void wxIntegerValidator::SetRange(ValueType minValue, ValueType maxValue) -->
  <!-- virtual void wxFloatingPointValidator::SetRange(ValueType minValue, ValueType maxValue) -->
  <function name="wxSlider::SetRange,wxIntegerValidator::SetRange,wxFloatingPointValidator::SetRange">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxFile::ReadAll(wxString * str, const wxMBConv & conv = wxConvAuto())	-->
  <function name="wxFile::ReadAll">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="out">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in" default="wxConvAuto()">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- size_t wxFile::Write(const void * buffer, size_t count)-->
  <function name="wxFile::Write">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
      <minsize type="argvalue" arg="2"/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual void wxTextCtrl::SetMaxLength(unsigned long len)-->
  <function name="wxTextEntry::SetMaxLength,wxTextCtrl::SetMaxLength">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxTextAttr::SetTextColour(const wxColour & colText) -->
  <!-- void wxTextAttr::SetBackgroundColor(const wxColour & colBack) -->
  <function name="wxTextAttr::SetTextColour,wxTextAttr::SetBackgroundColor">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxTextCtrl::SetModified( void ) -->
  <function name="wxTextCtrl::SetModified">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
  </function>
  <!-- wxTextAttr::SetTextColour-->
  <!-- void wxTextCtrl::SetEditable( bool edit) -->
  <function name="wxTextEntry::SetEditable,wxTextCtrl::SetEditable">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxFloatingPointValidator::SetPrecision(unsigned precision) -->
  <function name="wxFloatingPointValidator::SetPrecision">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxArrayString::Clear()-->
  <!-- void wxArrayString::Empty()-->
  <function name="wxArrayString::Clear,wxArrayString::Empty,std::vector::Clear,std::vector::Empty">
    <noreturn>false</noreturn>
    <leak-ignore/>
  </function>
  <!-- void wxArrayString::push_back(const wxString &s)-->
  <function name="wxArrayString::push_back">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- size_t wxArrayString::Add(const wxString & str, size_t copies = 1) -->
  <function name="wxArrayString::Add,std::vector::Add">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--void wxArrayString::Sort(bool reverseOrder=false) -->
  <function name="wxArrayString::Sort,std::vector::Sort">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxArrayString::Shrink(void) -->
  <function name="wxArrayString::Shrink,std::vector::Shrink">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
  </function>
  <!-- void wxArrayString::RemoveAt(int nIndex, size_t count = 1) -->
  <function name="wxArrayString::RemoveAt,std::vector::RemoveAt">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxArrayString::Remove(wxString &sz) -->
  <function name="wxArrayString::Remove,std::vector::Remove">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- size_t wxArrayInt::Add(int i, size_t copies = 1) -->
  <function name="wxArrayInt::Add,std::vector::Add">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- size_t wxArrayDouble::Add(double i, size_t copies = 1) -->
  <function name="wxArrayDouble::Add">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxString::BeforeFirst( wxUniChar ch, wxString * rest = NULL) const -->
  <!-- wxString wxString::BeforeLast( wxUniChar ch, wxString * rest = NULL) const -->
  <function name="wxString::BeforeFirst,wxString::BeforeLast">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxDir::GetNext(wxString * filename) const -->
  <function name="wxDir::GetNext">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="out">
      <not-null/>
    </arg>
  </function>
  <!-- bool wxDir::GetFirst(wxString * filename, const wxString & filespec = wxEmptyString, int flags = wxDIR_DEFAULT) const-->
  <function name="wxDir::GetFirst">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="out">
      <not-null/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="wxDIR_DEFAULT">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- size_t wxDir::Traverse(wxDirTraverser & sink, const wxString & filespec = wxEmptyString, int flags = wxDIR_DEFAULT) const-->
  <function name="wxDir::Traverse">
    <noreturn>false</noreturn>
    <returnValue type="size_t"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="out"/>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="wxDIR_DEFAULT">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--size_t wxArrayString::GetCount() const-->
  <function name="wxArrayString::GetCount,std::vector::GetCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="size_t"/>
    <use-retval/>
  </function>
  <!--wxString& wxArrayString::Item	(size_t nIndex) -->
  <!--const wxString& wxArrayString::Item (size_t nIndex) const -->
  <function name="wxArrayString::Item,std::vector::Item">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxString &amp;"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxArrayString::Insert(wxString lItem, size_t nIndex, size_t copies = 1)	-->
  <function name="wxArrayString::Insert,std::vector::Insert">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- "void wxArrayString::insert()" is identical to https://en.cppreference.com/w/cpp/container/vector/insert -->
  <!-- Return value type is "iterator" or "void" depending on the overloaded function. -->
  <function name="wxArrayString::insert">
    <noreturn>false</noreturn>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" default="0">
      <not-uninit/>
    </arg>
    <arg nr="3" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- int wxArrayString::Index(const wxString & sz, bool bCase = true, bool bFromEnd = false) const -->
  <function name="wxArrayString::Index,std::vector::Index">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="true" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxArrayString::IsEmpty()-->
  <function name="wxArrayString::IsEmpty,std::vector::IsEmpty">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
  </function>
  <!-- wxUniChar wxString::at(size_t n)const-->
  <function name="wxArrayString::at">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxUniChar"/>
    <const/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--wxPGProperty* wxPropertyGridInterface::Append(wxPGProperty * property)-->
  <!--wxPGProperty* wxPropertyGridPage::Append(wxPGProperty * property)-->
  <!--wxPGProperty* wxPropertyGrid::Append(wxPGProperty * property)-->
  <function name="wxPropertyGridInterface::Append,wxPropertyGridPage::Append,wxPropertyGrid::Append">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxPGProperty*"/>
    <arg nr="2" direction="in"/>
    <arg nr="2" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- int wxRound(double x) -->
  <function name="wxRound">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="int"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- double wxRadToDeg(double rad) -->
  <!-- double wxDegToRad(double deg) -->
  <function name="wxRadToDeg,wxDegToRad">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="double"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxIsNullDouble (double x)-->
  <!-- bool wxIsNaN	(double x)-->
  <!-- bool wxFinite (double x)-->
  <function name="wxIsNullDouble,wxIsNaN,wxFinite">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- unsigned int wxCTZ(wxUint32 x) -->
  <function name="wxCTZ">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="unsigned int"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxIsSameDouble(double x, doubly y)-->
  <function name="wxIsNullDouble">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- unsigned int wxGCD(unsigned int u, unsigned int v) -->
  <function name="wxGCD">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="unsigned int"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- static wxColour wxSystemSettings::GetColour(wxSystemColour index) -->
  <function name="wxSystemSettings::GetColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxColour"/>
    <use-retval/>
    <pure/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxStatusBar::SetStatusText (const wxstring &text, int n = 0) -->
  <function name="wxStatusBar::SetStatusText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxStatusBar::SetStatusStyles (int n, const int * styles)-->
  <function name="wxStatusBar::SetStatusStyles">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxStatusBar::SetMinHeight(int height) -->
  <function name="wxStatusBar::SetMinHeight">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxStatusBar::PopStatusText(int field = 0)-->
  <function name="wxStatusBar::PopStatusText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual void wxStatusBar::PushStatusText	(const wxString & string, int field = 0) -->
  <function name="wxStatusBar::PushStatusText">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual void wxStatusBar::SetFieldsCount	(int number = 1, const int * widths = NULL) -->
  <function name="wxStatusBar::SetFieldsCount">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" default="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>1:</valid>
    </arg>
    <arg nr="2" default="NULL" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <!-- void wxMemoryDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <!-- void wxBufferedDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <!-- void wxPaintDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <!-- void wxBufferedPaintDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <!-- void wxClientDC::DrawLine (const wxPoint &pt1, const wxPoint &pt2) -->
  <function name="wxDC::DrawLine,wxMemoryDC::DrawLine,wxBufferedDC::DrawLine,wxPaintDC::DrawLine,wxBufferedPaintDC::DrawLine,wxClientDC::DrawLine">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxMemoryDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxBufferedDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxBufferedPaintDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxClientDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxPaintDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <!-- void wxBufferedPaintDC::DrawRectangle (const wxPoint & pt, const wxSize & sz) -->
  <function name="wxDC::DrawRectangle,wxMemoryDC::DrawRectangle,wxBufferedDC::DrawRectangle,wxBufferedPaintDC::DrawRectangle,wxClientDC::DrawRectangle,wxPaintDC::DrawRectangle,wxBufferedPaintDC::DrawRectangle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- bool wxDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <!-- bool wxMemoryDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <!-- bool wxBufferedDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <!-- bool wxBufferedPaintDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <!-- bool wxGCDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <!-- bool wxPaintDC::Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC * source, wxCoord xsrc, wxCoord ysrc, wxRasterOperationMode logicalFunc = wxCOPY,
                       bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) -->
  <function name="wxDC::Blit,wxMemoryDC::Blit,wxBufferedDC::Blit,wxBufferedPaintDC::Blit,wxGCDC::Blit,wxPaintDC::Blit">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="6" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="7" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="8" direction="in" default="wxCOPY">
      <not-uninit/>
    </arg>
    <arg nr="9" direction="in" default="false">
      <not-uninit/>
    </arg>
    <arg nr="10" direction="in" default="wxDefaultCoord">
      <not-uninit/>
    </arg>
    <arg nr="11" direction="in" default="wxDefaultCoord">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawPolygon(int n, const wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fill_style = wxODDEVEN_RULE) -->
  <!-- void wxMemoryDC::DrawPolygon(int n, const wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fill_style = wxODDEVEN_RULE) -->
  <!-- void wxBufferedDC::DrawPolygon(int n, const wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fill_style = wxODDEVEN_RULE) -->
  <!-- void wxBufferedPaintDC::DrawPolygon(int n, const wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fill_style = wxODDEVEN_RULE) -->
  <!-- void wxPaintDC::DrawPolygon(int n, const wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fill_style = wxODDEVEN_RULE) -->
  <function name="wxDC::DrawPolygon,wxMemoryDC::DrawPolygon,wxBufferedDC::DrawPolygon,wxBufferedPaintDC::DrawPolygon,wxPaintDC::DrawPolygon">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="3" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxODDEVEN_RULE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxDC::DrawLabel(const wxString & text, const wxRect & rect, int alignment = wxALIGN_LEFT|wxALIGN_TOP, int indexAccel = -1) -->
  <!-- void wxMemoryDC::DrawLabel(const wxString & text, const wxRect & rect, int alignment = wxALIGN_LEFT|wxALIGN_TOP, int indexAccel = -1) -->
  <!-- void wxBufferedDC::DrawLabel(const wxString & text, const wxRect & rect, int alignment = wxALIGN_LEFT|wxALIGN_TOP, int indexAccel = -1) -->
  <!-- void wxBufferedPaintDC::DrawLabel(const wxString & text, const wxRect & rect, int alignment = wxALIGN_LEFT|wxALIGN_TOP, int indexAccel = -1) -->
  <function name="wxDC::DrawLabel,wxMemoryDC::DrawLabel,wxBufferedDC::DrawLabel,wxBufferedPaintDC::DrawLabel">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in" default="wxALIGN_LEFT|wxALIGN_TOP">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="-1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxPGProperty * wxPropertyGridInterface::Append( wxPGProperty * property ) -->
  <!-- wxPGProperty * wxPropertyGridManager::Append( wxPGProperty * property ) -->
  <function name="wxPropertyGridInterface::Append,wxPropertyGridManager::Append">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxPGProperty *"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- wxPGChoiceEntry & wxPGChoices::Add( const wxPGChoiceEntry & entry ) -->
  <function name="wxPGChoices::Add">
    <noreturn>false</noreturn>
    <returnValue type="wxPGChoiceEntry &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxPGProperty* wxPropertyGridInterface::GetProperty(const wxString & name) const -->
  <!-- wxPGProperty* wxPropertyGrid::GetProperty(const wxString & name) const -->
  <function name="wxPropertyGridInterface::GetProperty,wxPropertyGrid::GetProperty">
    <noreturn>false</noreturn>
    <returnValue type="wxPGProperty*"/>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGraphicsContext::SetPen(const wxPen & pen) -->
  <!-- void wxDC::SetPen(const wxPen & pen) -->
  <!-- void wxDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxDC::SetFont(const wxFont & font) -->
  <!-- void wxBufferedPaintDC::SetPen(const wxPen & pen) -->
  <!-- void wxBufferedPaintDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxBufferedPaintDC::SetFont(const wxFont & font) -->
  <!-- void wxPaintDC::SetPen(const wxPen & pen) -->
  <!-- void wxPaintDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxPaintDC::SetFont(const wxFont & font) -->
  <!-- void wxMemoryDC::SetPen(const wxPen & pen) -->
  <!-- void wxMemoryDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxMemoryDC::SetFont(const wxFont & font) -->
  <!-- void wxBufferedDC::SetPen(const wxPen & pen) -->
  <!-- void wxBufferedDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxBufferedDC::SetFont(const wxFont & font) -->
  <!-- void wxClientDC::SetPen(const wxPen & pen) -->
  <!-- void wxClientDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxClientDC::SetFont(const wxFont & font) -->
  <!-- void wxGCDC::SetPen(const wxPen & pen) -->
  <!-- void wxGCDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxGCDC::SetFont(const wxFont & font) -->
  <!-- void wxAutoBufferedPaintDC::SetPen(const wxPen & pen) -->
  <!-- void wxAutoBufferedPaintDC::SetBrush(const wxBrush & pen) -->
  <!-- void wxAutoBufferedPaintDC::SetFont(const wxFont & font) -->
  <function name="wxAutoBufferedPaintDC::SetFont,wxAutoBufferedPaintDC::SetBrush,wxAutoBufferedPaintDC::SetPen,wxGCDC::SetFont,wxGCDC::SetBrush,wxGCDC::SetPen,wxBufferedPaintDC::SetFont,wxBufferedPaintDC::SetBrush,wxBufferedPaintDC::SetPen,wxClientDC::SetPen,wxClientDC::SetBrush,wxClientDC::SetFont,wxPaintDC::SetPen,wxPaintDC::SetBrush,wxPaintDC::SetFont,wxGraphicsContext::SetPen,wxDC::SetPen,wxDC::SetBrush,wxDC::SetFont,wxMemoryDC::SetPen,wxMemoryDC::SetBrush,wxMemoryDC::SetFont,wxBufferedDC::SetPen,wxBufferedDC::SetBrush,wxBufferedDC::SetFont">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- @todo: void DrawBitmap (const wxBitmap &bitmap, wxCoord x, wxCoord y, bool useMask=false) -->
  <!-- void wxDC::DrawBitmap (const wxBitmap &bmp, const wxPoint &pt, bool useMask=false) -->
  <!-- void wxPaintDC::DrawBitmap(const wxBitmap &bmp, const wxPoint &pt, bool useMask=false) -->
  <!-- void wxClientDC::DrawBitmap(const wxBitmap &bmp, const wxPoint &pt, bool useMask=false) -->
  <!-- void wxMemoryDC::DrawBitmap(const wxBitmap &bmp, const wxPoint &pt, bool useMask=false) -->
  <!-- void wxAutoBufferedPaintDC::DrawBitmap(const wxBitmap &bmp, const wxPoint &pt, bool useMask=false) -->
  <function name="wxDC::DrawBitmap,wxPaintDC::DrawBitmap,wxClientDC::DrawBitmap,wxAutoBufferedPaintDC::DrawBitmap,wxMemoryDC::DrawBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxSizerItem* wxSizer::AddStretchSpacer (int prop = 1) -->
  <!-- wxSizerItem* wxBoxSizer::AddStretchSpacer (int prop = 1) -->
  <!-- wxSizerItem* wxStaticBoxSizer::AddStretchSpacer (int prop = 1) -->
  <function name="wxSizer::AddStretchSpacer,wxBoxSizer::AddStretchSpacer,wxStaticBoxSizer::AddStretchSpacer">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxSizerItem *"/>
    <arg nr="1" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxTextAttr::SetFont(const wxFont & font, int flags = wxTEXT_ATTR_FONT &~wxTEXT_ATTR_FONT_PIXEL_SIZE) -->
  <function name="wxTextAttr::SetFont">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxTEXT_ATTR_FONT &amp;~wxTEXT_ATTR_FONT_PIXEL_SIZE">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxAnimation::Load(wxInputStream & stream, wxAnimationType type = wxANIMATION_TYPE_ANY) -->
  <function name="wxAnimation::Load">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="inout"/>
    <arg nr="2" direction="in" default="wxANIMATION_TYPE_ANY">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxInputStream& wxInputStream::Read (void * buffer, size_t size) -->
  <!-- virtual wxInputStream& wxInputStream::ReadAll (void * buffer, size_t size) -->
  <function name="wxInputStream::Read,wxInputStream::ReadAll">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxInputStream &amp;"/>
    <arg nr="1" direction="out">
      <not-null/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <minsize type="argvalue" arg="1"/>
    </arg>
  </function>
  <!-- void wxPropertyGridManager::SetSplitterPosition(int pos, int column = 0) -->
  <function name="wxPropertyGridManager::SetSplitterPosition">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxWindow::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxWindow::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxControl::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxControl::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxDataViewListCtrl::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxDataViewListCtrl::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxStaticText::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxStaticText::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxButton::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxButton::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxBitmapButton::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxBitmapButton::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxToggleButton::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxToggleButton::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxTextCtrl::SetForegroundColour(const wxColour & colour) -->
  <!-- virtual bool wxTextCtrl::SetBackgroundColour(const wxColour & colour) -->
  <!-- virtual bool wxGrid::SetBackgroundColour(const wxColour & colour) -->
  <function name="wxBitmapButton::SetBackgroundColour,wxBitmapButton::SetForegroundColour,wxDataViewListCtrl::SetBackgroundColour,wxDataViewListCtrl::SetForegroundColour,wxControl::SetBackgroundColour,wxControl::SetForegroundColour,wxToggleButton::SetBackgroundColour,wxToggleButton::SetForegroundColour,wxTextCtrl::SetForegroundColour,wxGrid::SetBackgroundColour,wxTextCtrl::SetBackgroundColour,wxWindow::SetForegroundColour,wxWindow::SetBackgroundColour,wxStaticText::SetForegroundColour,wxStaticText::SetBackgroundColour,wxButton::SetForegroundColour,wxButton::SetBackgroundColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxImage& wxImage::Rescale(int width, int height, wxImageResizeQuality quality = wxIMAGE_QUALITY_NORMAL) -->
  <function name="wxImage::Rescale">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxImage &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxIMAGE_QUALITY_NORMAL">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxGrid::DeleteRows( int pos = 0, int numRows = 1, bool updateLabels = true ) -->
  <!-- bool wxGrid::DeleteCols( int pos = 0, int numCols = 1, bool updateLabels = true ) -->
  <function name="wxGrid::DeleteRows,wxGrid::DeleteCols">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="1">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawText( const wxString &amp; text, wxCoord x, wxCoord y ) -->
  <!-- void wxPaintDC::DrawText( const wxString &amp; text, wxCoord x, wxCoord y ) -->
  <!-- void wxClientDC::DrawText( const wxString &amp; text, wxCoord x, wxCoord y ) -->
  <!-- void wxMemoryDC::DrawText( const wxString &amp; text, wxCoord x, wxCoord y ) -->
  <function name="wxDC::DrawText,wxPaintDC::DrawText,wxClientDC::DrawText,wxMemoryDC::DrawText">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--         void wxGraphicsContext::SetBrush(const wxBrush & brush) -->
  <!-- virtual void wxGraphicsContext::SetBrush(const wxGraphicsBrush & brush) -->
  <function name="wxGraphicsContext::SetBrush">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGraphicsContext::DrawLines( size_t n, const wxPoint2DDouble * points, wxPolygonFillMode fillStyle = wxODDEVEN_RULE ) -->
  <function name="wxGraphicsContext::DrawLines">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>1:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="3" direction="in" default="wxODDEVEN_RULE">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxSpinCtrl::SetValue( const wxString & value ) -->
  <!-- void wxSpinCtrl::SetValue( int value ) -->
  <function name="wxSpinCtrl::SetValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxSize wxDC::GetTextExtent( const wxString & string ) -->
  <!-- wxSize wxPaintDC::GetTextExtent( const wxString & string ) -->
  <!-- wxSize wxClientDC::GetTextExtent( const wxString & string ) -->
  <!-- wxSize wxMemoryDC::GetTextExtent( const wxString & string ) -->
  <function name="wxDC::GetTextExtent,wxPaintDC::GetTextExtent,wxClientDC::GetTextExtent,wxMemoryDC::GetTextExtent">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxSize"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxString wxPathOnly(const wxString & path) -->
  <function name="wxPathOnly">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGridCellAttr::GetAlignment( int * hAlign, int * vAlign ) -->
  <function name="wxGridCellAttr::GetAlignment">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="out"/>
    <arg nr="2" direction="out"/>
  </function>
  <!-- virtual void wxGridCellRenderer::Draw(wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellStringRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellBoolRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellAutoWrapStringRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellEnumRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellFloatRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <!-- virtual void wxGridCellNumberRenderer::Draw (wxGrid &grid, wxGridCellAttr &attr, wxDC &dc, const wxRect &rect, int row, int col, bool isSelected) -->
  <function name="wxGridCellRenderer::Draw,wxGridCellStringRenderer::Draw,wxGridCellBoolRenderer::Draw,wxGridCellAutoWrapStringRenderer::Draw,wxGridCellEnumRenderer::Draw,wxGridCellFloatRenderer::Draw,wxGridCellNumberRenderer::Draw">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="inout"/>
    <arg nr="2" direction="inout"/>
    <arg nr="3" direction="inout"/>
    <arg nr="4" direction="in"/>
    <arg nr="5" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="7" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxGridCellEditor::IsAcceptedKey( wxKeyEvent & event ) -->
  <function name="wxGridCellEditor::IsAcceptedKey">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="inout"/>
  </function>
  <!-- void wxDC::SetTextForeground( const wxColour & colour ) -->
  <!-- void wxDC::SetTextBackground( const wxColour & colour ) -->
  <!-- void wxBufferedPaintDC::SetTextForeground( const wxColour & colour ) -->
  <!-- void wxBufferedPaintDC::SetTextBackground( const wxColour & colour ) -->
  <!-- void wxPaintDC::SetTextForeground( const wxColour & colour ) -->
  <!-- void wxPaintDC::SetTextBackground( const wxColour & colour ) -->
  <!-- void wxAutoBufferedPaintDC::SetTextForeground( const wxColour & colour ) -->
  <!-- void wxAutoBufferedPaintDC::SetTextBackground( const wxColour & colour ) -->
  <!-- void wxMemoryDC::SetTextForeground( const wxColour & colour ) -->
  <!-- void wxMemoryDC::SetTextBackground( const wxColour & colour ) -->
  <function name="wxMemoryDC::SetTextBackground,wxMemoryDC::SetTextForeground,wxAutoBufferedPaintDC::SetTextBackground,wxAutoBufferedPaintDC::SetTextForeground,wxPaintDC::SetTextBackground,wxPaintDC::SetTextForeground,wxDC::SetTextForeground,wxDC::SetTextBackground,wxBufferedPaintDC::SetTextForeground,wxBufferedPaintDC::SetTextBackground">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGridCellAttr::SetFont(const wxFont & font) -->
  <function name="wxGridCellAttr::SetFont">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1"/>
  </function>
  <!-- void wxGridCellAttr::GetSize(int * num_rows, int * num_cols) const-->
  <function name="wxGridCellAttr::GetSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <const/>
    <arg nr="1" direction="out">
      <not-null/>
    </arg>
    <arg nr="2" direction="out">
      <not-null/>
    </arg>
  </function>
  <!-- virtual wxStatusBar* wxFrameBase::CreateStatusBar(int number = 1, long style = wxSTB_DEFAULT_STYLE, wxWindowID id = 0, const wxString & name = wxStatusBarNameStr)-->
  <!-- virtual wxStatusBar* wxFrame::CreateStatusBar(int number = 1, long style = wxSTB_DEFAULT_STYLE, wxWindowID id = 0, const wxString & name = wxStatusBarNameStr)-->
  <function name="wxFrameBase::CreateStatusBar,wxFrame::CreateStatusBar">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxStatusBar*"/>
    <arg nr="1" default="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="wxSTB_DEFAULT_STYLE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" default="wxStatusBarNameStr" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxMemoryDC::SelectObject( wxBitmap & bmp ) -->
  <!-- void wxBufferedDC::SelectObject( wxBitmap & bmp ) -->
  <function name="wxMemoryDC::SelectObject,wxBufferedDC::SelectObject">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxTextEntry::AppendText( const wxString & text ) -->
  <!-- void wxTextEntry::WriteText( const wxString & text ) -->
  <!-- void wxTextCtrl::AppendText( const wxString & text ) -->
  <!-- void wxTextCtrl::WriteText( const wxString & text ) -->
  <!-- void wxStyledTextCtrl::AppendText( const wxString & text ) -->
  <function name="wxTextEntry::AppendText,wxTextEntry::WriteText,wxTextCtrl::AppendText,wxTextCtrl::WriteText,wxStyledTextCtrl::AppendText">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxString::Cmp(const wxString & s) const -->
  <!-- int wxString::CmpNoCase( const wxString & s ) const -->
  <function name="wxString::CmpNoCase,wxString::Cmp">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxGridCellCoords wxGrid::XYToCell(int x, int y) const -->
  <function name="wxGrid::XYToCell">
    <noreturn>false</noreturn>
    <returnValue type="wxGridCellCoords"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxMenuItem::SetBitmap(const wxBitmap & bmp, bool checked = true) -->
  <function name="wxMenuItem::SetBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!--         bool wxMenuItem::IsCheck() const -->
  <!--         bool wxMenuItem::IsCheckable() const -->
  <!--         bool wxMenuItem::IsRadio() const -->
  <!--         bool wxMenuItem::IsSeparator() const -->
  <!--         bool wxMenuItem::IsSubMenu() const -->
  <!-- virtual bool wxMenuItem::IsChecked() const -->
  <!-- virtual bool wxMenuItem::IsEnabled() const -->
  <function name="wxMenuItem::IsCheck,wxMenuItem::IsCheckable,wxMenuItem::IsRadio,wxMenuItem::IsSeparator,wxMenuItem::IsSubMenu,wxMenuItem::IsChecked,wxMenuItem::IsEnabled">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <const/>
    <use-retval/>
  </function>
  <!-- bool wxTextCtrl::SetDefaultStyle( const wxTextAttr & style ) -->
  <function name="wxTextCtrl::SetDefaultStyle">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <!-- const wxTextAttr & style -->
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxString wxString::BeforeFirst( wxUniChar ch, wxString * rest = NULL ) -->
  <function name="wxString::BeforeFirst">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="out" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxPaintDC::DrawCircle( wxCoord x, wxCoord y, wxCoord radius ) -->
  <!-- void wxDC::DrawCircle( wxCoord x, wxCoord y, wxCoord radius ) -->
  <!-- void wxAutoBufferedPaintDC::DrawCircle( wxCoord x, wxCoord y, wxCoord radius ) -->
  <!-- void wxMemoryDC::DrawCircle( wxCoord x, wxCoord y, wxCoord radius ) -->
  <function name="wxAutoBufferedPaintDC::DrawCircle,wxDC::DrawCircle,wxPaintDC::DrawCircle,wxMemoryDC::DrawCircle">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawArc(wxCoord xStart, wxCoord yStart, wxCoord xEnd, wxCoord yEnd, wxCoord xc, wxCoord yc) -->
  <!-- void wxPaintDC::DrawArc(wxCoord xStart, wxCoord yStart, wxCoord xEnd, wxCoord yEnd, wxCoord xc, wxCoord yc) -->
  <!-- void wxAutoBufferedPaintDC::DrawArc(wxCoord xStart, wxCoord yStart, wxCoord xEnd, wxCoord yEnd, wxCoord xc, wxCoord yc) -->
  <!-- void wxMemoryDC::DrawArc(wxCoord xStart, wxCoord yStart, wxCoord xEnd, wxCoord yEnd, wxCoord xc, wxCoord yc) -->
  <function name="wxAutoBufferedPaintDC::DrawArc,wxDC::DrawArc,wxPaintDC::DrawArc,wxMemoryDC::DrawArc">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxPaintDC::DrawCheckMark(wxCoord x,wxCoord y, wxCoord width, wxCoord height) -->
  <!-- void wxDC::DrawCheckMark(wxCoord x,wxCoord y, wxCoord width, wxCoord height) -->
  <!-- void wxAutoBufferedPaintDC::DrawCheckMark(wxCoord x,wxCoord y, wxCoord width, wxCoord height) -->
  <function name="wxAutoBufferedPaintDC::DrawCheckMark,wxDC::DrawCheckMark,wxPaintDC::DrawCheckMark">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxColour wxGrid::GetCellBackgroundColour (int row, int col) const -->
  <!-- wxColour wxGrid::GetCellFont (int row, int col) const -->
  <function name="wxGrid::GetCellBackgroundColour,wxGrid::GetCellFont">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- int wxGrid::GetColSize(int col) const -->
  <!-- int wxGrid::GetColLeft(int col) const -->
  <!-- int wxGrid::GetColRight(int col) const -->
  <!-- int wxGrid::GetColPos(int col) const -->
  <!-- int wxGrid::GetColMinimalWidth(int col) const -->
  <function name="wxGrid::GetColSize,wxGrid::GetColLeft,wxGrid::GetColRight,wxGrid::GetColPos,wxGrid::GetColMinimalWidth">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- bool wxGrid::IsColShown(int col) const -->
  <!-- bool wxGrid::IsRowShown(int row) const -->
  <function name="wxGrid::IsColShown,wxGrid::IsRowShown">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- wxGridSizesInfo wxGrid::GetColSizes(void) const -->
  <function name="wxGrid::GetColSizes">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxGridSizesInfo"/>
    <use-retval/>
    <const/>
  </function>
  <!-- int wxGrid::GetColMinimalAcceptableWidth(void) const -->
  <function name="wxGrid::GetColMinimalAcceptableWidth">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <const/>
  </function>
  <!-- wxString wxDataViewListCtrl::GetTextValue(unsigned int row, unsigned int col) const  -->
  <function name="wxDataViewListCtrl::GetTextValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- bool wxDataViewListCtrl::GetToggleValue(unsigned int row, unsigned int col) const  -->
  <function name="wxDataViewListCtrl::GetToggleValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxDC::SetBackgroundMode(int mode) -->
  <!-- void wxBufferedDC::SetBackgroundMode(int mode) -->
  <!-- void wxGCDC::SetBackgroundMode(int mode) -->
  <function name="wxDC::SetBackgroundMode,wxBufferedDC::SetBackgroundMode,wxGCDC::SetBackgroundMode">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxWindow::SetValidator(const wxValidator & validator) -->
  <!-- virtual void wxTextCtrl::SetValidator(const wxValidator & validator) -->
  <!-- virtual void wxGridCellTextEditor::SetValidator(const wxValidator & validator) -->
  <!-- virtual void wxGridCellFloatEditor::SetValidator(const wxValidator & validator) -->
  <!-- virtual void wxCheckBox::SetValidator(const wxValidator & validator) -->
  <function name="wxWindow::SetValidator,wxTextCtrl::SetValidator,wxGridCellTextEditor::SetValidator,wxGridCellFloatEditor::SetValidator,wxCheckBox::SetValidator">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxInfoBar::ShowMessage(const wxString & msg, int flags = wxICON_INFORMATION)-->
  <function name="wxInfoBar::ShowMessage">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxICON_INFORMATION">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxPen::SetColour(const wxColour & colour) -->
  <!-- virtual void wxPen::SetColour(unsigned char red, unsigned char green, unsigned char blue) -->
  <function name="wxPen::SetColour">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- void wxPen::SetWidth( int width ) -->
  <function name="wxPen::SetWidth">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual int wxDialog::ShowModal( ) -->
  <!-- virtual int wxColourDialog::ShowModal( ) -->
  <!-- virtual int wxDirDialog::ShowModal( ) -->
  <!-- virtual int wxFileDialog::ShowModal( ) -->
  <!-- virtual int wxFindReplaceDialog::ShowModal( ) -->
  <!-- virtual int wxFontDialog::ShowModal( ) -->
  <!-- virtual int wxGenericProgressDialog::ShowModal( ) -->
  <!-- virtual int wxProgressDialog::ShowModal( ) -->
  <!-- virtual int wxHtmlDialog::ShowModal( ) -->
  <!-- virtual int wxMessageDialog::ShowModal( ) -->
  <!-- virtual int wxMultiChoiceDialog::ShowModal( ) -->
  <!-- virtual int wxNumberEntryDialog::ShowModal( ) -->
  <!-- virtual int wxPGArrayEditorDialog::ShowModal( ) -->
  <!-- virtual int wxPGArrayStringEditorDialog::ShowModal( ) -->
  <!-- virtual int wxPrintAbortDialog::ShowModal( ) -->
  <!-- virtual int wxPropertySheetDialog::ShowModal( ) -->
  <!-- virtual int wxRichTextFormattingDialog::ShowModal( ) -->
  <!-- virtual int wxRearrangeDialog::ShowModal( ) -->
  <!-- virtual int wxRichTextStyleOrganiserDialog::ShowModal( ) -->
  <!-- virtual int wxSingleChoiceDialog::ShowModal( ) -->
  <!-- virtual int wxSymbolPickerDialog::ShowModal( ) -->
  <!-- virtual int wxTextEntryDialog::ShowModal( ) -->
  <!-- virtual int wxPasswordEntryDialog::ShowModal( ) -->
  <!-- virtual int wxWizard::ShowModal( ) -->
  <function name="wxDialog::ShowModal,wxWizard::ShowModal,wxPasswordEntryDialog::ShowModal,wxTextEntryDialog::ShowModal,wxSymbolPickerDialog::ShowModal,wxSingleChoiceDialog::ShowModal,wxRichTextStyleOrganiserDialog::ShowModal,wxRearrangeDialog::ShowModal,wxRichTextFormattingDialog::ShowModal,wxPropertySheetDialog::ShowModal,wxPrintAbortDialog::ShowModal,wxPGArrayStringEditorDialog::ShowModal,wxPGArrayEditorDialog::ShowModal,wxNumberEntryDialog::ShowModal,wxMultiChoiceDialog::ShowModal,wxMessageDialog::ShowModal,wxHtmlDialog::ShowModal,wxProgressDialog::ShowModal,wxGenericProgressDialog::ShowModal,wxFontDialog::ShowModal,wxFindReplaceDialog::ShowModal,wxColourDialog::ShowModal,wxDirDialog::ShowModal,wxFileDialog::ShowModal">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <leak-ignore/>
  </function>
  <!-- void wxDC::SetBackground(const wxBrush & brush) -->
  <!-- void wxBufferedDC::SetBackground(const wxBrush & brush) -->
  <!-- void wxMemoryDC::SetBackground(const wxBrush & brush) -->
  <!-- void wxGCDC::SetBackground(const wxBrush & brush) -->
  <!-- void wxAutoBufferedPaintDC::SetBackground(const wxBrush & brush) -->
  <function name="wxDC::SetBackground,wxBufferedDC::SetBackground,wxMemoryDC::SetBackground,wxGCDC::SetBackground,wxAutoBufferedPaintDC::SetBackground">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxPropertyGridManager::SetColumnTitle( int idx, const wxString & title ) -->
  <function name="wxPropertyGridManager::SetColumnTitle">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- wxRect & wxRect::Inflate( const wxSize & d ) -->
  <!-- wxRect & wxRect::Deflate( const wxSize & d ) -->
  <function name="wxRect::Inflate,wxRect::Deflate">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxRect &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::StyleSetForeground( int style, const wxColour & fore ) -->
  <function name="wxStyledTextCtrl::StyleSetForeground">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- wxString wxString::AfterFirst( wxUniChar ch ) const -->
  <!-- wxString wxString::AfterLast( wxUniChar ch ) const -->
  <function name="wxString::AfterFirst,wxString::AfterLast">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxString & wxString::Append (const char *psz)                    -->
  <!-- wxString & wxString::Append (const wchar_t *pwz)                 -->
  <!-- wxString & wxString::Append (const char *psz, size_t nLen)    (*)-->
  <!-- wxString & wxString::Append (const wchar_t *pwz, size_t nLen) (*)-->
  <!-- wxString & wxString::Append (const wxString &s)               (+)-->
  <!-- wxString & wxString::Append (wxUniChar ch, size_t count=1u)   (*)-->
  <!-- wxString & wxString::append (const char *psz)                    -->
  <!-- wxString & wxString::append (const wchar_t *pwz)                 -->
  <!-- wxString & wxString::append (const char *psz, size_t nLen)    (*)-->
  <!-- wxString & wxString::append (const wchar_t *pwz, size_t nLen) (*)-->
  <!-- wxString & wxString::append (const wxString &s)               (+)-->
  <!-- wxString & wxString::append (wxUniChar ch, size_t count=1u)   (*)-->
  <!-- wxString & wxString::append (const_iterator first, const_iterator last) (*)-->
  <function name="wxString::Append,wxString::append">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <arg nr="1" direction="in">
      <!-- <not-uninit/> Avoid FPs (+)-->
      <not-null/>
    </arg>
    <!--(*) 2.arg version not supported -->
  </function>
  <!-- wxWindow * wxWindowBase::FindWindow(long id) const -->
  <!-- wxWindow * wxWindowBase::FindWindow(const wxString & name)  const -->
  <!-- wxWindow * wxWindow::FindWindow(long id) const -->
  <!-- wxWindow * wxWindow::FindWindow(const wxString & name)  const -->
  <!-- wxWindow * wxDialog::FindWindow(long id) const -->
  <!-- wxWindow * wxDialog::FindWindow(const wxString & name)  const -->
  <function name="wxWindowBase::FindWindow,wxWindow::FindWindow,wxDialog::FindWindow">
    <noreturn>false</noreturn>
    <returnValue type="wxWindow *"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!--static wxWindow* wxWindow::FindWindowById(long id, const wxWindow * parent = 0) -->
  <function name="wxWindow::FindWindowById">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxWindow*"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxRect::SetX( int xx ) -->
  <!-- void wxRect::SetY( int yy ) -->
  <function name="wxRect::SetX,wxRect::SetY">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetMinute( unsigned short minute ) -->
  <function name="wxDateTime::SetMinute">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- Minutes in 0...59 range -->
      <valid>0:59</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetSecond( unsigned short second ) -->
  <function name="wxDateTime::SetSecond">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- Seconds in 0...59 (60 with leap seconds) range -->
      <valid>0:60</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetHour( unsigned short second ) -->
  <function name="wxDateTime::SetHour">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- Hours since midnight 0...23 -->
      <valid>0:23</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetYear( int year ) -->
  <function name="wxDateTime::SetYear">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetMonth( Month month ) -->
  <function name="wxDateTime::SetMonth">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>1:12</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxDateTime& wxDateTime::SetDay (unsigned short day) -->
  <function name="wxDateTime::SetDay">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDateTime &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <!-- Day of month in 1..31 range -->
      <valid>1:31</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxDateTime::FormatISODate( void ) const -->
  <!-- wxString wxDateTime::FormatISOTime( void ) const -->
  <!-- wxString wxDateTime::FormatTime( void ) const -->
  <function name="wxDateTime::FormatISODate,wxDateTime::FormatISOTime,wxDateTime::FormatTime">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <returnValue type="wxString"/>
    <use-retval/>
  </function>
  <!-- void wxListItem::SetText( const wxString & text ) -->
  <!-- void wxListItem::SetTextColour( const wxColour & colText ) -->
  <function name="wxListItem::SetText,wxListItem::SetTextColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxWindow * wxGetTopLevelParent( wxWindowBase * win ) -->
  <function name="wxGetTopLevelParent">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxWindow *"/>
    <use-retval/>
    <!-- wxWindowBase * win -->
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- wxString wxDateTime::Format(const wxString & format = wxDefaultDateTimeFormat, const TimeZone & tz = Local ) const-->
  <function name="wxDateTime::Format">
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in" default="wxDefaultDateTimeFormat"/>
    <arg nr="2" direction="in" default="Local"/>
  </function>
  <!-- wxString wxDateTime::FormatISOCombined(char sep = 'T') const -->
  <function name="wxDateTime::FormatISOCombined">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <arg nr="1" direction="in" default="T">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxImageList::Draw(int index, wxDC & dc, int x, int y, int flags = wxIMAGELIST_DRAW_NORMAL, bool solidBackground = false) -->
  <function name="wxImageList::Draw">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" direction="in" default="wxIMAGELIST_DRAW_NORMAL">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxWindow::Refresh(bool eraseBackground = true, const wxRect * rect = NULL) -->
  <function name="wxWindow::Refresh">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="NULL"/>
  </function>
  <!-- int wxImageList::Add( const wxBitmap & bitmap, const wxBitmap & mask = wxNullBitmap ) -->
  <function name="wxImageList::Add">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxNullBitmap"/>
  </function>
  <!-- virtual wxPGVIterator wxPropertyGridInterface::GetVIterator(int flags) const -->
  <!-- virtual wxPGVIterator wxPropertyGrid::GetVIterator(int flags) const -->
  <function name="wxPropertyGridInterface::GetVIterator,wxPropertyGrid::GetVIterator">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <const/>
    <returnValue type="wxPGVIterator"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxArrayString wxStringTokenize(const wxString & str, const wxString & delims = wxDEFAULT_DELIMITERS, wxStringTokenizerMode mode = wxTOKEN_DEFAULT) -->
  <function name="wxStringTokenize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxArrayString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxDEFAULT_DELIMITERS"/>
    <arg nr="3" direction="in" default="wxTOKEN_DEFAULT"/>
  </function>
  <!-- ssize_t wxFile::Read( void * pBuf, size_t nCount ) -->
  <function name="wxFile::Read">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="ssize_t"/>
    <use-retval/>
    <arg nr="1" direction="inout">
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>1:</valid>
    </arg>
  </function>
  <!-- static bool wxFile::Exists(const wxString & filename)-->
  <!-- static bool wxDir::Exists(const wxString & dirname)-->
  <function name="wxFile::Exists,wxDir::Exists">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxFile::Eof( void ) const -->
  <function name="wxFile::Eof">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
  </function>
  <!-- bool wxFile::Seek( wxFileOffset ofs, wxSeekMode mode = wxFromStart ) -->
  <function name="wxFFile::Seek">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxFromStart" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxFFile::SeekEnd( wxFileOffset ofs = 0 ) -->
  <function name="wxFFile::SeekEnd">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGridTableBase::SetValueAsDouble( int row, int col, double value ) -->
  <!-- void wxGridTableBase::SetValueAsBool( int row, int col, bool value ) -->
  <!-- void wxGridTableBase::SetValueAsLong( int row, int col, longs value ) -->
  <function name="wxGridTableBase::SetValueAsDouble,wxGridTableBase::SetValueAsDouble,wxGridTableBase::SetValueAsLong">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGridTableBase::SetValueAsLong( int row, int col, const wxString &value ) -->
  <function name="wxGridTableBase::SetValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!-- bool wxGridTableBase::GetValueAsBool( int row, int col ) -->
  <function name="wxGridTableBase::GetValueAsBool">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- double wxGridTableBase::GetValueAsDouble( int row, int col ) -->
  <function name="wxGridTableBase::GetValueAsDouble">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="double"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- long wxGridTableBase::GetValueAsLong( int row, int col ) -->
  <function name="wxGridTableBase::GetValueAsLong">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxGridTableBase::GetValue( int row, int col ) -->
  <function name="wxGridTableBase::GetValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxGridTableBase::CanSetValueAs( int row, int col, const wxString & typeName ) -->
  <!-- bool wxGridTableBase::CanGetValueAs( int row, int col, const wxString & typeName ) -->
  <function name="wxGridTableBase::CanSetValueAs,wxGridTableBase::CanGetValueAs">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!-- void wxPen::SetCap( wxPenCap cap ) -->
  <function name="wxPen::SetCap">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!--static wxString wxLocale::GetInfo(wxLocaleInfo index, wxLocaleCategory cat = wxLOCALE_CAT_DEFAULT) -->
  <function name="wxLocale::GetInfo">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxLOCALE_CAT_DEFAULT"/>
  </function>
  <!-- bool wxLocale::AddCatalog( const wxString & domain ) -->
  <!-- bool wxLocale::AddCatalog( const wxString & domain, wxLanguage msgIdLanguage ) -->
  <!-- bool wxLocale::AddCatalog( const wxString & domain, wxLanguage msgIdLanguage, const wxString msgldCharset ) -->
  <function name="wxLocale::AddCatalog">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxLANGUAGE_DEFAULT "/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
  </function>
  <!-- int wxItemContainer::Append( const wxString & item ) -->
  <!-- int wxComboBox::Append( const wxString & item ) -->
  <function name="wxItemContainer::AppendItems,wxComboBox::Append">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxSlider::SetValue(int value) -->
  <function name="wxSlider::SetValue">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPGProperty::SetLabel(const wxString & label) -->
  <function name="wxPGProperty::SetLabel">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxSize wxDC::GetSize( void ) const -->
  <!-- void GetSize (wxCoord *width, wxCoord *height) const -->
  <!-- wxSize wxDC::GetSizeMM( void ) const -->
  <!-- void GetSizeMM (wxCoord *width, wxCoord *height) const -->
  <!-- Derived classes: -->
  <!-- wxSize wxGCDC::GetSizeMM( void ) const -->
  <!-- wxSize wxGCDC::GetSize( void ) const -->
  <!-- wxSize wxClientDC::GetSize( void ) const-->
  <!-- wxSize wxClientDC::GetSizeMM( void ) const-->
  <!-- wxSize wxPaintDC::GetSize( void ) const -->
  <!-- wxSize wxPaintDC::GetSizeMM( void ) const -->
  <!-- wxSize wxBufferedPaintDC::GetSize( void ) const -->
  <!-- wxSize wxBufferedPaintDC::GetSizeMM( void ) const -->
  <!-- wxSize wxAutoBufferedPaintDC::GetSize( void ) const -->
  <!-- wxSize wxAutoBufferedPaintDC::GetSizeMM( void ) const -->
  <function name="wxDC::GetSizeMM,wxDC::GetSize,wxGCDC::GetSizeMM,wxGCDC::GetSize,wxClientDC::GetSize,wxClientDC::GetSizeMM,wxPaintDC::GetSize,wxPaintDC::GetSizeMM,wxBufferedPaintDC::GetSize,wxBufferedPaintDC::GetSizeMM,wxAutoBufferedPaintDC::GetSize,wxAutoBufferedPaintDC::GetSizeMM">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <returnValue/>
    <arg nr="1" default="0" direction="out"/>
    <arg nr="2" default="0" direction="out"/>
  </function>
  <!-- wxDataViewColumn* wxDataViewListCtrl::AppendTextColumn(const wxString & label, wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT, int width = -1, wxAlignment align = wxALIGN_LEFT, int flags = wxDATAVIEW_COL_RESIZABLE) -->
  <!-- wxDataViewColumn* wxDataViewListCtrl::AppendToggleColumn(const wxString & label, wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT, int width = -1, wxAlignment align = wxALIGN_LEFT, int flags = wxDATAVIEW_COL_RESIZABLE) -->
  <!-- wxDataViewColumn* wxDataViewListCtrl::AppendProgressColumn(const wxString & label, wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT, int width = -1, wxAlignment align = wxALIGN_LEFT, int flags = wxDATAVIEW_COL_RESIZABLE) -->
  <!-- wxDataViewColumn* wxDataViewListCtrl::AppendIconTextColumn(const wxString & label, wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT, int width = -1, wxAlignment align = wxALIGN_LEFT, int flags = wxDATAVIEW_COL_RESIZABLE) -->
  <function name="wxDataViewListCtrl::AppendTextColumn,wxDataViewListCtrl::AppendToggleColumn,wxDataViewListCtrl::AppendProgressColumn,wxDataViewListCtrl::AppendIconTextColumn">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDataViewColumn*"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxDATAVIEW_CELL_INERT" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="-1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" default="wxALIGN_LEFT" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" default="wxDATAVIEW_COL_RESIZABLE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxDataViewCtrl::AppendColumn(wxDataViewModel * model) -->
  <function name="wxDataViewCtrl::AppendColumn">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual bool wxDataViewCtrl::AssociateModel(wxDataViewModel * model) -->
  <function name="wxDataViewCtrl::AssociateModel">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxDataViewCtrl::SetExpanderColumn(wxDataViewColumn * col) -->
  <function name="wxDataViewCtrl::SetExpanderColumn">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxDataViewCtrl::SetIndent(int indent) -->
  <function name="wxDataViewCtrl::SetIndent">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- static void wxMemoryFSHandler::AddFile( const wxString & filename, const wxString & textdata ) -->
  <!-- static void wxMemoryFSHandler::AddFile( const wxString & filename, const void * binarydata, size_t size ) -->
  <!-- static void wxMemoryFSHandler::AddFile( const wxString & filename, wxImage & image, wxBitmapType type) -->
  <!-- static void wxMemoryFSHandler::AddFile( const wxString & filename, wxBitmap & bmp, wxBitmapType type) -->
  <function name="wxMemoryFSHandler::AddFile">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0"/>
    <arg nr="3" direction="in" default="0"/>
    <arg nr="4" direction="in" default="0"/>
  </function>
  <!-- void wxIcon::CopyFromBitmap( const wxBitmap & bmp ) -->
  <function name="wxIcon::CopyFromBitmap">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static void wxLog::AddTraceMask( const wxString & str ) -->
  <function name="wxLog::AddTraceMask">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxTextOutputStream::WriteString( const wxString & string ) -->
  <function name="wxTextOutputStream::WriteString">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxDataObjectComposite::Add( wxDataObjectSimple * dataObject, bool preferred = false ) -->
  <function name="wxDataObjectComposite::Add">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSplitterWindow::SetSashGravity( double gravity ) -->
  <function name="wxSplitterWindow::SetSashGravity">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0.0:1.0</valid>
    </arg>
  </function>
  <!-- void wxFileSystem::AddHandler( wxFileSystemHandler * handler ) -->
  <function name="wxFileSystem::AddHandler">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual bool wxXmlDocument::Load(const wxString & filename, const wxString & encoding = "UTF-8", int flags = wxXMLDOC_NONE) -->
  <!-- virtual bool wxXmlDocument::Load(wxInputStream & stream   , const wxString & encoding = "UTF-8", int flags = wxXMLDOC_NONE) -->
  <function name="wxXmlDocument::Load">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="UTF-8" direction="in"/>
    <arg nr="2" default="wxXMLDOC_NONE" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxFSFile * wxFileSystem::OpenFile( const wxString & location, int flags = wxFS_READ ) -->
  <function name="wxFileSystem::OpenFile">
    <noreturn>false</noreturn>
    <returnValue type="wxFSFile *"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxFS_READ" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxSplitterWindow::SetSashPosition( int position, bool redraw = true ) -->
  <function name="wxSplitterWindow::SetSashPosition">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--void wxSplitterWindow::SetMinimumPaneSize( int min ) -->
  <function name="wxSplitterWindow::SetMinimumPaneSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxSplitterWindow::SplitHorizontally(wxWindow * window1, wxWindow * window2, int sashPosition = 0) -->
  <!-- virtual bool wxSplitterWindow::SplitVertically(wxWindow * window1, wxWindow * window2, int sashPosition = 0) -->
  <function name="wxSplitterWindow::SplitHorizontally,wxSplitterWindow::SplitVertically">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxVariant wxPropertyGridInterface::GetPropertyValue( wxPGPropArg id ) -->
  <!-- wxVariant wxPropertyGridManager::GetPropertyValue( wxPGPropArg id ) -->
  <function name="wxPropertyGridInterface::GetPropertyValue,wxPropertyGridManager::GetPropertyValue">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <use-retval/>
    <returnValue type="wxVariant"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxListCtrl::SetItemState( long item, long state, long stateMask ) -->
  <function name="wxListCtrl::SetItemState">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxConcatFiles( const wxString & src1, const wxString & src2, const wxString & dest ) -->
  <function name="wxConcatFiles">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
  </function>
  <!-- bool wxCopyFile(const wxString & file1, const wxString & file2, bool overwrite = true ) -->
  <function name="wxCopyFile">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxTreeItemId wxTreeCtrl::AppendItem(const wxTreeItemId & parent, const wxString & text, int image = -1, int selImage = -1, wxTreeItemData * data = NULL)-->
  <function name="wxTreeCtrl::AppendItem">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxTreeItemId"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="-1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" default="-1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="5" default="NULL" direction="in"/>
  </function>
  <!-- void wxDataViewListCtrl::AppendItem(const wxVector< wxVariant > & values, wxUIntPtr data = NULL) -->
  <function name="wxDataViewListCtrl::AppendItem">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="NULL" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetColSize( int col, int width ) -->
  <function name="wxGrid::SetColSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--void wxGrid::SetCellBackgroundColour (int row, int col, const wxColour &colour) -->
  <function name="wxGrid::SetCellBackgroundColour">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!--void wxHtmlPrintout::SetHtmlText(const wxString & html, const wxString & basepath = wxEmptyString, bool isdir = true)-->
  <function name="wxHtmlPrintout::SetHtmlText">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxEmptyString" direction="in"/>
    <arg nr="3" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--void wxHtmlEasyPrinting::SetStandardFonts(int size = -1, const wxString & normal_face = wxEmptyString, const wxString & fixed_face = wxEmptyString ) -->
  <function name="wxHtmlEasyPrinting::SetStandardFonts">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" default="-1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="wxEmptyString" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
  </function>
  <!--void wxGrid::SetCellHighlightColour (const wxColour &colour) -->
  <function name="wxGrid::SetCellHighlightColour">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!--void wxGrid::SetCellEditor (int row, int col, wxGridCellEditor * editor) -->
  <function name="wxGrid::SetCellEditor">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="inout">
      <not-null/>
    </arg>
  </function>
  <!--virtual void wxGridCellEditor::StartingKey(wxKeyEvent & event)-->
  <!--virtual void wxGridCellTextEditor::StartingKey(wxKeyEvent & event)-->
  <function name="wxGridCellEditor::StartingKey,wxGridCellTextEditor::StartingKey">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!--virtual void wxGridCellEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellBoolEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellChoiceEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellTextEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellEnumEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellAutoWrapStringEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellFloatEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <!--virtual void wxGridCellNumberEditor::Create(wxWindow * parent, wxWindowID id, wxEvtHandler * evtHandler)-->
  <function name="wxGridCellEditor::Create,wxGridCellBoolEditor::Create,wxGridCellChoiceEditor::Create,wxGridCellNumberEditor::Create,wxGridCellTextEditor::Create,wxGridCellEnumEditor::Create,wxGridCellAutoWrapStringEditor::Create,wxGridCellFloatEditor::Create">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual bool wxBitmap::Create (int width, int height, int depth = wxBITMAP_SCREEN_DEPTH) -->
  <!-- virtual bool wxBitmap::Create (const wxSize& sz, int depth = wxBITMAP_SCREEN_DEPTH) -->
  <function name="wxBitmap::Create">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- virtual bool wxHtmlWindow::SetPage (const wxSize& source) -->
  <function name="wxHtmlWindow::SetPage">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxToolBarToolBase* wxToolBar::AddTool(int toolId, const wxString & label, const wxBitmap & bitmap, const wxString & shortHelp = wxEmptyString, wxItemKind kind = wxITEM_NORMAL) -->
  <function name="wxToolBar::AddTool">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxToolBarToolBase*"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxEmptyString"/>
    <arg nr="5" direction="in" default="wxITEM_NORMAL"/>
  </function>
  <!-- wxAuiToolBarItem* wxAuiToolBar::AddTool(int tool_id, const wxString & label, const wxBitmap & bitmap, const wxString & short_help_string = wxEmptyString,
wxItemKind kind = wxITEM_NORMAL) -->
  <function name="wxToolBar::AddTool">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxAuiToolBarItem*"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="wxEmptyString"/>
    <arg nr="5" direction="in" default="wxITEM_NORMAL"/>
  </function>
  <!-- wxString wxString::SubString( size_t from, size_t to ) const -->
  <function name="wxString::SubString">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. Use 'wxString::Mid' in new applications instead.</warn>
  </function>
  <!-- wxString wxString::substr(size_t nStart = 0, size_t nLen = npos) const -->
  <function name="wxString::substr">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <const/>
    <use-retval/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="1" default="wxString::npos" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxString::Mid( size_t first, size_t nCount=wxString::npos ) const -->
  <function name="wxString::Mid">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxString::npos">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxFont::SetPointSize( int pointsize ) -->
  <function name="wxFont::SetPointSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxNotebook::SetPageText(size_t page, const wxString & text) -->
  <function name="wxNotebook::SetPageText">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- virtual bool wxNotebook::SetPageImage(size_t page, const int imageId) -->
  <function name="wxNotebook::SetPageImage">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual int wxBookCtrlBase::SetSelection( size_t nPage ) -->
  <!-- virtual int wxToolbook::SetSelection( size_t nPage ) -->
  <!-- virtual int wxNotebook::SetSelection( size_t nPage ) -->
  <function name="wxBookCtrlBase::SetSelection,wxToolbook::SetSelection,wxNotebook::SetSelection">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxMenuItem * wxMenuBar::FindItem( int id, wxMenu * menu = NULL ) const -->
  <function name="wxMenuBar::FindItem">
    <noreturn>false</noreturn>
    <returnValue type="wxMenuItem *"/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="NULL" direction="inout"/>
  </function>
  <!-- virtual void wxWithImages::SetImageList(wxImageList * imageList) -->
  <!-- virtual void wxWithImages::AssignImageList(wxImageList * imageList) -->
  <!-- virtual void wxToolbook::SetImageList(wxImageList * imageList) -->
  <!-- virtual void wxToolbook::AssignImageList(wxImageList * imageList) -->
  <!-- virtual void wxTreeListCtrl::SetImageList(wxImageList * imageList) -->
  <!-- virtual void wxTreeListCtrl::AssignImageList(wxImageList * imageList) -->
  <!-- virtual void wxNotebook::SetImageList(wxImageList * imageList) -->
  <!-- virtual void wxNotebook::AssignImageList(wxImageList * imageList) -->
  <!-- virtual void wxDataViewTreeCtrl::SetImageList(wxImageList * imageList) -->
  <!-- virtual void wxDataViewTreeCtrl::AssignImageList(wxImageList * imageList) -->
  <function name="wxWithImages::SetImageList,wxWithImages::AssignImageList,wxDataViewTreeCtrl::SetImageList,wxDataViewTreeCtrl::AssignImageList,wxToolbook::SetImageList,wxToolbook::AssignImageList,wxTreeListCtrl::AssignImageList,wxNotebook::AssignImageList,wxTreeListCtrl::SetImageList,wxNotebook::SetImageList">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxTreeListCtrl::CheckItem(wxTreeListItem item, wxCheckBoxState state = wxCHK_CHECKED) -->
  <!-- void wxTreeListCtrl::CheckItemRecursively(wxTreeListItem item, wxCheckBoxState state = wxCHK_CHECKED) -->
  <function name="wxTreeListCtrl::CheckItem,wxTreeListCtrl::CheckItemRecursively">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxCHK_CHECKED" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxTreeListCtrl::Create(wxWindow * parent, wxWindowID id, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, long style = wxTL_DEFAULT_STYLE, const wxString & name = wxTreeListCtrlNameStr) -->
  <function name="wxTreeListCtrl::Create">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="wxDefaultPosition" direction="in"/>
    <arg nr="4" default="wxDefaultSize" direction="in"/>
    <arg nr="5" default="wxTL_DEFAULT_STYLE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" default="wxTreeListCtrlName" direction="in"/>
  </function>
  <!-- void wxTreeListCtrl::Collapse(wxTreeListItem item) -->
  <!-- void wxTreeListCtrl::Expand(wxTreeListItem item) -->
  <!-- void wxTreeListCtrl::EnsureVisible(wxTreeListItem item) -->
  <!-- void wxTreeListCtrl::UncheckItem(wxTreeListItem item) -->
  <!-- void wxTreeListCtrl::Unselect(wxTreeListItem item) -->
  <!-- void wxTreeListCtrl::UpdateItemParentStateRecursively(wxTreeListItem item) -->
  <function name="wxTreeListCtrl::Collapse,wxTreeListCtrl::Expand,wxTreeListCtrl::EnsureVisible,wxTreeListCtrl::UncheckItem,wxTreeListCtrl::Unselect,wxTreeListCtrl::UpdateItemParentStateRecursively">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxDataViewCtrl* wxTreeListCtrl::GetDataView() const -->
  <function name="wxTreeListCtrl::GetDataView">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="wxDataViewCtrl*"/>
  </function>
  <!-- unsigned wxTreeListCtrl::GetColumnCount() const -->
  <function name="wxTreeListCtrl::GetColumnCount">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="unsigned"/>
  </function>
  <!-- int wxTreeListCtrl::GetColumnWidth(unsigned col) const -->
  <function name="wxTreeListCtrl::GetColumnWidth">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="int"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxTreeListCtrl::SetItemText(wxTreeListItem item, int col, const wxString & text) -->
  <!-- void wxTreeListCtrl::SetItemText(wxTreeListItem item, const wxString & text) -->
  <function name="wxTreeListCtrl::SetItemText">
    <leak-ignore/>
    <returnValue type="void"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="" direction="in"/>
  </function>
  <!-- void wxTreeListCtrl::SetItemImage(wxTreeListItem item, int closed, int opened = -1) -->
  <function name="wxTreeListCtrl::SetItemImage">
    <leak-ignore/>
    <returnValue type="void"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- const wxString& wxTreeListCtrl::GetItemText(wxTreeListItem item, unsigned col = 0) const -->
  <function name="wxTreeListCtrl::GetItemText">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="const wxString &amp;"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxTreeListItem wxTreeListCtrl::GetFirstChild(wxTreeListItem item) const -->
  <!-- wxTreeListItem wxTreeListCtrl::GetItemParent(wxTreeListItem item) const -->
  <!-- wxTreeListItem wxTreeListCtrl::GetNextItem(wxTreeListItem item) const -->
  <!-- wxTreeListItem wxTreeListCtrl::GetNextSibling(wxTreeListItem item) const -->
  <function name="wxTreeListCtrl::GetFirstChild,wxTreeListCtrl::GetItemParent,wxTreeListCtrl::GetNextItem,wxTreeListCtrl::GetNextSibling">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="wxTreeListItem"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
  </function>
  <!-- unsigned wxTreeListCtrl::GetSelections(wxTreeListItems & selections) const -->
  <function name="wxTreeListCtrl::GetSelections">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="unsigned"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="out"/>
  </function>
  <!-- wxTreeListItem wxTreeListCtrl::GetFirstItem() const -->
  <!-- wxTreeListItem wxTreeListCtrl::GetRootItem() const -->
  <!-- wxTreeListItem wxTreeListCtrl::GetSelection() const -->
  <function name="wxTreeListCtrl::GetFirstItem,wxTreeListCtrl::GetRootItem,wxTreeListCtrl::GetSelection">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <returnValue type="wxTreeListItem"/>
    <noreturn>false</noreturn>
  </function>
  <!-- bool wxTreeListCtrl::IsExpanded(wxTreeListItem item ) const -->
  <!-- bool wxTreeListCtrl::IsSelected(wxTreeListItem item ) const -->
  <function name="wxTreeListCtrl::IsExpanded,wxTreeListCtrl::IsSelected">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- FlagType wxPGProperty::HasFlag(wxPGPropertyFlags flag) const -->
  <function name="wxPGProperty::HasFlag">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="FlagType"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxWindow::HasFlag(int flag) const -->
  <!-- bool wxTextCtrl::HasFlag(int flag) const -->
  <!-- bool wxWindow::HasScrollbar(int orient) const -->
  <function name="wxWindow::HasFlag,wxTextCtrl::HasFlag,wxWindow::HasScrollbar">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxCheckBoxState wxTreeListCtrl::GetCheckedState(wxTreeListItem item) const -->
  <function name="wxTreeListCtrl::GetCheckedState">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="wxCheckBoxState"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxClientData* wxTreeListCtrl::GetItemData(wxTreeListItem item) const -->
  <function name="wxTreeListCtrl::GetItemData">
    <leak-ignore/>
    <use-retval/>
    <const/>
    <noreturn>false</noreturn>
    <returnValue type="wxClientData*"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxTreeListCtrl::AppendColumn(const wxString & title, int width = wxCOL_WIDTH_AUTOSIZE, wxAlignment align = wxALIGN_LEFT, int flags = wxCOL_RESIZABLE) -->
  <function name="wxTreeListCtrl::AppendColumn">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxCOL_WIDTH_AUTOSIZE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="wxALIGN_LEFT" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" default="wxCOL_RESIZABLE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxTreeListCtrl::AreAllChildrenInState(wxTreeListItem item, wxCheckBoxState state ) const -->
  <function name="wxTreeListCtrl::AreAllChildrenInState">
    <use-retval/>
    <const/>
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- wxTreeListItem wxTreeListCtrl::AppendItem(wxTreeListItem parent, const wxString & text, int imageClosed = -1, int imageOpened = -1, wxClientData * data = NULL) -->
  <function name="wxTreeListCtrl::AppendItem">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxTreeListItem"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="-1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="4" default="-1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="5" default="NULL" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxTreeListCtrl::DeleteColumn(unsigned col) -->
  <function name="wxTreeListCtrl::DeleteColumn">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxTreeListCtrl::ClearColumns() -->
  <!-- void wxTreeListCtrl::DeleteAllItems() -->
  <!-- void wxTreeListCtrl::UnselectAll() -->
  <function name="wxTreeListCtrl::ClearColumns,wxTreeListCtrl::DeleteAllItems,wxTreeListCtrl::UnselectAll">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- void wxTextEntryDialog::SetTextValidator(const wxTextValidator & validator) -->
  <!-- void wxTextEntryDialog::SetTextValidator(wxTextValidatorStyle style = wxFILTER_NONE) -->
  <function name="wxTextEntryDialog::SetTextValidator">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="wxFILTER_NONE"/>
  </function>
  <!-- static wxString wxString::FromUTF8( const char * utf8 )                   -->
  <!-- static wxString wxString::FromUTF8Unchecked( const char * utf8 )          -->
  <!-- static wxString wxString::FromUTF8Unchecked( const std::string & s ) (*)  -->
  <function name="wxString::FromUTF8,wxString::FromUTF8Unchecked">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <pure/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- bool wxZipOutputStream::PutNextEntry(const wxString & name, const wxDateTime & dt = wxDateTime::Now(), wxFileOffset size = wxInvalidOffset) -->
  <function name="wxZipOutputStream::PutNextEntry">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxDateTime::Now()"/>
    <arg nr="3" direction="in" default="wxInvalidOffset">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::MarkerSetForeground(int markerNumber, const wxColour & fore)-->
  <!-- void wxStyledTextCtrl::MarkerSetBackground(int markerNumber, const wxColour & back)-->
  <!-- void wxStyledTextCtrl::MarkerSetBackgroundSelected(int markerNumber, const wxColour & back)-->
  <function name="wxStyledTextCtrl::MarkerSetForeground,wxStyledTextCtrl::MarkerSetBackground,wxStyledTextCtrl::MarkerSetBackgroundSelected">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!--void wxPropertyGridInterface::SetPropertyAttribute(wxPGPropArg id, const wxString & attrName, wxVariant value, long argFlags = 0)-->
  <!--void wxPropertyGridPage::SetPropertyAttribute(wxPGPropArg id, const wxString & attrName, wxVariant value, long argFlags = 0)-->
  <!--void wxPropertyGridManager::SetPropertyAttribute(wxPGPropArg id, const wxString & attrName, wxVariant value, long argFlags = 0)-->
  <!--void wxPropertyGrid::SetPropertyAttribute(wxPGPropArg id, const wxString & attrName, wxVariant value, long argFlags = 0)-->
  <function name="wxPropertyGridInterface::SetPropertyAttribute,wxPropertyGridPage::SetPropertyAttribute,wxPropertyGridManager::SetPropertyAttribute,wxPropertyGrid::SetPropertyAttribute">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--static wxPGEditor* wxPropertyGrid::RegisterEditorClass (wxPGEditor * editor, bool noDefCheck = false)-->
  <function name="wxPropertyGrid::RegisterEditorClass">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxPGEditor*"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="1" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxGridCellEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellBoolEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellChoiceEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellTextEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellEnumEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellAutoWrapStringEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellFloatEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <!--         void wxGridCellNumberEditor::BeginEdit(int row, int col, wxGrid * grid) -->
  <function name="wxGridCellEditor::BeginEdit,wxGridCellBoolEditor::BeginEdit,wxGridCellNumberEditor::BeginEdit,wxGridCellChoiceEditor::BeginEdit,wxGridCellFloatEditor::BeginEdit,wxGridCellTextEditor::BeginEdit,wxGridCellEnumEditor::BeginEdit,wxGridCellAutoWrapStringEditor::BeginEdit">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="inout">
      <not-null/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::MarkerDefine(int markerNumber, int markerSymbol, const wxColour & foreground = wxNullColour, const wxColour & background = wxNullColour) -->
  <function name="wxStyledTextCtrl::MarkerDefine">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" direction="in" default="wxNullColour"/>
    <arg nr="4" direction="in" default="wxNullColour"/>
  </function>
  <!-- void wxSleep( int nSecs ) -->
  <!-- void wxMilliSleep( unsigned long milliseconds ) -->
  <!-- void wxMicroSleep( unsigned long ns ) -->
  <function name="wxSleep,wxMilliSleep,wxMicroSleep">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SetColFormatNumber( int col ) -->
  <function name="wxGrid::SetColFormatNumber">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetDefaultColSize( int width, bool resizeExistingCols = false ) -->
  <function name="wxGrid::SetDefaultColSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetDefaultRowSize( int height, bool resizeExistingRows = false ) -->
  <function name="wxGrid::SetDefaultRowSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetDefaultRenderer( wxGridCellRenderer * renderer ) -->
  <function name="wxGrid::SetDefaultRenderer">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxSizer::SetMinSize(const wxSize & size) -->
  <!-- void wxSizer::SetMinSize(int width, int height) -->
  <function name="wxSizer::SetMinSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::SetDeviceOrigin(wxCoord x, wxCoord y) -->
  <!-- void wxGCDC::SetDeviceOrigin(wxCoord x, wxCoord y) -->
  <function name="wxDC::SetDeviceOrigin,wxGCDC::SetDeviceOrigin">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxTopLevelWindow::SetMinSize(const wxSize & size) -->
  <!-- virtual void wxTopLevelWindow::SetMaxSize(const wxSize & size) -->
  <!-- virtual void wxTopLevelWindow::SetMinClientSize(const wxSize & size) -->
  <!-- virtual void wxTopLevelWindow::SetMaxClientSize(const wxSize & size) -->
  <!-- virtual void wxWindowBase::SetMinSize(const wxSize & size) -->
  <!-- virtual void wxWindowBase::SetMaxSize(const wxSize & size) -->
  <!-- virtual void wxWindowBase::SetMinClientSize(const wxSize & size) -->
  <!-- virtual void wxWindowBase::SetMaxClientSize(const wxSize & size) -->
  <!-- virtual void wxWindow::SetMinSize(const wxSize & size) -->
  <!-- virtual void wxWindow::SetMaxSize(const wxSize & size) -->
  <!-- virtual void wxWindow::SetMinClientSize(const wxSize & size) -->
  <!-- virtual void wxWindow::SetMaxClientSize(const wxSize & size) -->
  <!--         void wxTextCtrl::SetMinSize(const wxSize & size) -->
  <!--         void wxTextCtrl::SetMaxSize(const wxSize & size) -->
  <!--         void wxStaticText::SetMinSize(const wxSize & size) -->
  <!--         void wxStaticText::SetMaxSize(const wxSize & size) -->
  <!--         void wxButton::SetMinSize(const wxSize & size) -->
  <!--         void wxButton::SetMaxSize(const wxSize & size) -->
  <!--         void wxPropertyGridManager::SetMinSize(const wxSize & size) -->
  <!--         void wxPropertyGridManager::SetMaxSize(const wxSize & size) -->
  <!--         void wxComboBox::SetMinSize(const wxSize & size) -->
  <!--         void wxComboBox::SetMaxSize(const wxSize & size) -->
  <function name="wxTopLevelWindow::SetMaxClientSize,wxTopLevelWindow::SetMinClientSize,wxTopLevelWindow::SetMaxSize,wxTopLevelWindow::SetMinSize,wxWindowBase::SetMaxClientSize,wxWindowBase::SetMinClientSize,wxWindowBase::SetMaxSize,wxWindowBase::SetMinSize,wxWindow::SetMinSize,wxWindow::SetMaxSize,wxComboBox::SetMinSize,wxComboBox::SetMaxSize,wxWindow::SetMinClientSize,wxWindow::SetMaxClientSize,wxTextCtrl::SetMinSize,wxTextCtrl::SetMaxSize,wxStaticText::SetMinSize,wxStaticText::SetMaxSize,wxButton::SetMinSize,wxButton::SetMaxSize,wxPropertyGridManager::SetMinSize,wxPropertyGridManager::SetMaxSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!--void wxScrolledWindow::AdjustScrollbars(void) -->
  <function name="wxScrolledWindow::AdjustScrollbars">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!--wxSize wxWindow::GetSize(void) const -->
  <!--wxSize wxControl::GetSize(void) const -->
  <!--wxSize wxSpinButton::GetSize(void) const -->
  <function name="wxWindow::GetSize,wxControl::GetSize,wxSpinButton::GetSize">
    <leak-ignore/>
    <const/>
    <noreturn>false</noreturn>
    <use-retval/>
    <returnValue type="wxSize"/>
  </function>
  <!--wxString wxControl::GetLabel () const -->
  <!--wxString wxControl::GetLabelText () const -->
  <function name="wxControl::GetLabel,wxControl::GetLabelText">
    <leak-ignore/>
    <const/>
    <noreturn>false</noreturn>
    <use-retval/>
    <returnValue type="wxString"/>
  </function>
  <!--wxSizer* wxWindow::GetSizer(void) const -->
  <function name="wxWindow::GetSizer">
    <leak-ignore/>
    <const/>
    <noreturn>false</noreturn>
    <use-retval/>
    <returnValue type="wxSizer*"/>
  </function>
  <!--void wxRect::SetPosition(const wxPoint & pos) -->
  <function name="wxRect::SetPosition">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxSpinCtrlDouble::Enable( bool enable = true ) -->
  <!-- void wxToggleButton::Enable( bool enable = true ) -->
  <!-- void wxStaticText::Enable( bool enable = true ) -->
  <!-- void wxStaticBox::Enable( bool enable = true ) -->
  <!-- void wxMenuItem::Enable( bool enable = true ) -->
  <function name="wxSpinCtrlDouble::Enable,wxToggleButton::Enable,wxStaticText::Enable,wxStaticBox::Enable,wxMenuItem::Enable">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxMenuItem::Check( bool enable = true ) -->
  <function name="wxMenuItem::Check">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxPropertyGridInterface::ClearSelection(bool validation = false) -->
  <!-- bool wxPropertyGridManager::ClearSelection(bool validation = false) -->
  <function name="wxPropertyGridInterface::ClearSelection,wxPropertyGridManager::ClearSelection">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="false">
      <not-uninit/>
    </arg>
  </function>
  <!-- template <class T> const T wxMin(const T& a, const T& b); -->
  <function name="wxMin">
    <use-retval/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue>arg1&lt;arg2?arg1:arg2</returnValue>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- template <class T> const T& wxMax(const T& a, const T& b); -->
  <function name="wxMax">
    <use-retval/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue>arg1&gt;arg2?arg1:arg2</returnValue>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxGenericProgressDialog::Update(int value, const wxString & newmsg = wxEmptyString, bool * skip = NULL ) -->
  <!-- virtual bool wxProgressDialog::Update(int value, const wxString & newmsg = wxEmptyString, bool * skip = NULL ) -->
  <function name="wxGenericProgressDialog::Update,wxProgressDialog::Update">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxGenericProgressDialog::Pulse(const wxString &msg=wxEmptyString, bool *skip=NULL ) -->
  <!-- virtual bool wxProgressDialog::Pulse(const wxString &msg=wxEmptyString, bool *skip=NULL ) -->
  <function name="wxGenericProgressDialog::Update,wxProgressDialog::Pulse">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in" default="wxEmptyString"/>
    <arg nr="2" direction="in" default="NULL"/>
  </function>
  <!-- bool wxGenericProgressDialog::WasCancelled() const -->
  <function name="wxGenericProgressDialog::WasCancelled">
    <const/>
    <leak-ignore/>
    <use-retval/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
  </function>
  <!-- void wxGrid::SetRowLabelSize( int width ) -->
  <function name="wxGrid::SetRowLabelSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--         void wxWindow::SetWindowStyle(long style)     -->
  <!--         void wxTextCtrl::SetWindowStyle(long style)   -->
  <!--         void wxStaticText::SetWindowStyle(long style) -->
  <!--         void wxStaticLine::SetWindowStyle(long style) -->
  <!-- virtual void wxWindow::SetWindowStyleFlag(long style) -->
  <!-- virtual void wxTextCtrl::SetWindowStyleFlag(long style) -->
  <function name="wxWindow::SetWindowStyle,wxWindow::SetWindowStyleFlag,wxTextCtrl::SetWindowStyle,wxStaticText::SetWindowStyle,wxStaticLine::SetWindowStyle,wxTextCtrl::SetWindowStyleFlag">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::SetLexer(int lexer) -->
  <!-- void wxStyledTextCtrl::SetMainSelection(int selection) -->
  <!-- void wxStyledTextCtrl::SetMarginLeft(int l) -->
  <!-- void wxStyledTextCtrl::SetMarginRight(int r) -->
  <!-- void wxStyledTextCtrl::SetMarginOptions(int opt) -->
  <!-- void wxStyledTextCtrl::SetModEventMask(int mask) -->
  <function name="wxStyledTextCtrl::SetLexer,wxStyledTextCtrl::SetMainSelection,wxStyledTextCtrl::SetMarginLeft,wxStyledTextCtrl::SetMarginRight,wxStyledTextCtrl::SetMarginOptions,wxStyledTextCtrl::SetModEventMask">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool     wxRegEx::GetMatch(size_t * start, size_t * len, size_t index = 0) const -->
  <!-- wxString wxRegEx::GetMatch(const wxString & text, size_t index = 0) const -->
  <function name="wxRegEx::GetMatch">
    <noreturn>false</noreturn>
    <const/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::SetMarginSensitive( int margin, bool sensitive ) -->
  <function name="wxStyledTextCtrl::SetMarginSensitive">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::SetMarginMask( int margin, int mask ) -->
  <function name="wxStyledTextCtrl::SetMarginMask">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxPen::SetStyle(wxPenStyle style) -->
  <function name="wxPen::SetStyle">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- template<typename EventTag , typename Class , typename EventArg , typename EventHandler >
       void wxEvtHandler::Bind(const EventTag & eventType, void(Class::*)(EventArg &) method, EventHandler * handler, int id = wxID_ANY, int lastId = wxID_ANY, wxObject * userData = NULL) -->
  <!-- void wxSpinCtrl::Bind(const EventTag & eventType, void(wxSpinCtrl::*)(EventArg &) method, EventHandler * handler, int id = wxID_ANY, int lastId = wxID_ANY, wxObject * userData = NULL) -->
  <!-- void wxButton::Bind(const EventTag & eventType, void(wxSpinCtrl::*)(EventArg &) method, EventHandler * handler, int id = wxID_ANY, int lastId = wxID_ANY, wxObject * userData = NULL) -->
  <function name="wxEvtHandler::Bind,wxSpinCtrl::Bind,wxButton::Bind">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="inout">
      <not-null/>
    </arg>
    <arg nr="4" direction="in" default="wxID_ANY">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="in" default="wxID_ANY">
      <not-uninit/>
    </arg>
    <arg nr="6" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStockGDI::DeleteAll( void ) -->
  <function name="wxStockGDI::DeleteAll">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- void wxStopWatch::Pause( void ) -->
  <!-- void wxStopWatch::Resume( void ) -->
  <function name="wxStopWatch::Pause,wxStopWatch::Resume">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- long wxStopWatch::Time(void)	const -->
  <function name="wxStopWatch::Time">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <use-retval/>
    <const/>
  </function>
  <!-- wxLongLong wxStopWatch::TimeInMicro(void) const -->
  <function name="wxStopWatch::TimeInMicro">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxLongLong"/>
    <use-retval/>
    <const/>
  </function>
  <!-- void wxStopWatch::Start(long milliseconds = 0) -->
  <function name="wxStopWatch::Start">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxBrush * wxStockGDI::GetBrush( Item item ) -->
  <function name="wxStockGDI::GetBrush">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxBrush *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxColour * wxStockGDI::GetColour( Item item ) -->
  <function name="wxStockGDI::GetColour">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxColour *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxCursor * wxStockGDI::GetCursor( Item item ) -->
  <function name="wxStockGDI::GetCursor">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxCursor *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxFont * wxStockGDI::GetFont( Item item ) -->
  <function name="wxStockGDI::GetFont">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxFont *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxPen * wxStockGDI::GetPen( Item item ) -->
  <function name="wxStockGDI::GetPen">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxPen *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxStockGDI & wxStockGDI::instance( void ) -->
  <function name="wxStockGDI::instance">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxStockGDI &amp;"/>
    <use-retval/>
  </function>
  <!-- bool wxRemoveFile( const wxString & file ) -->
  <function name="wxRemoveFile">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxRenameFile( const wxString & oldpath, const wxString & newpath, bool overwrite = true ) -->
  <function name="wxRenameFile">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- int wxRmDir( const wxString & path ) -->
  <function name="wxRmDir">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxRmdir( const wxString & dir, int flags = 0 ) -->
  <function name="wxRmdir">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxSetWorkingDirectory( const wxString & d ) -->
  <function name="wxSetWorkingDirectory">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxPrintf(const char *format, ...); -->
  <function name="wxPrintf">
    <returnValue type="int"/>
    <noreturn>false</noreturn>
    <leak-ignore/>
    <formatstr/>
    <arg nr="1" direction="in">
      <formatstr/>
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxBell( void ) -->
  <function name="wxBell">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- void wxPostEvent( wxEvtHandler * dest, const wxEvent & event ) -->
  <function name="wxPostEvent">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxQueueEvent( wxEvtHandler * dest, wxEvent * event ) -->
  <function name="wxQueueEvent">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- bool wxIsupper( const wxUniChar & c ) -->
  <!-- bool wxIsxdigit( const wxUniChar & c ) -->
  <!-- bool wxIsspace( const wxUniChar & c ) -->
  <!-- bool wxIspunct( const wxUniChar & c ) -->
  <!-- bool wxIsprint( const wxUniChar & c ) -->
  <!-- bool wxIslower( const wxUniChar & c ) -->
  <!-- bool wxIsgraph( const wxUniChar & c ) -->
  <!-- bool wxIsdigit( const wxUniChar & c ) -->
  <!-- bool wxIscntrl( const wxUniChar & c ) -->
  <!-- bool wxIsascii( const wxUniChar & c ) -->
  <!-- bool wxIsalpha( const wxUniChar & c ) -->
  <!-- bool wxIsalnum( const wxUniChar & c ) -->
  <function name="wxIsupper,wxIsxdigit,wxIsspace,wxIspunct,wxIsprint,wxIslower,wxIsgraph,wxIsdigit,wxIsctrl,wxIscntrl,wxIsascii,wxIsalpha,wxIsalnum">
    <use-retval/>
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxIsctrl( const wxUniChar & c ) -->
  <function name="wxIsctrl">
    <use-retval/>
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxGrid::SetCellRenderer( int row, int col, wxGridCellRenderer * renderer ) -->
  <function name="wxGrid::SetCellRenderer">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- void wxNavigationKeyEvent::SetWindowChange(bool windowChange) -->
  <!-- void wxNavigationKeyEvent::SetFromTab(bool fromTab) -->
  <!-- void wxNavigationKeyEvent::SetDirection(bool direction) -->
  <!-- void wxNavigationKeyEvent::SetFlags(long flags) -->
  <function name="wxNavigationKeyEvent::SetWindowChange,wxNavigationKeyEvent::SetFromTab,wxNavigationKeyEvent::SetFlags,wxNavigationKeyEvent::SetDirection">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetDefaultCellAlignment( int horiz, int vert ) -->
  <function name="wxGrid::SetDefaultCellAlignment">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetColLabelSize( int height ) -->
  <function name="wxGrid::SetColLabelSize">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::EnableGridLines( bool enable = true ) -->
  <function name="wxGrid::EnableGridLines">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::EnableEditing( bool edit ) -->
  <function name="wxGrid::EnableEditing">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::SetRowLabelAlignment( int horiz, int vert ) -->
  <!-- void wxGrid::SetColLabelAlignment( int horiz, int vert ) -->
  <function name="wxGrid::SetRowLabelAlignment,wxGrid::SetColLabelAlignment">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxGrid::EnableDragRowSize( bool enable = true ) -->
  <!-- void wxGrid::EnableDragGridSize( bool enable = true ) -->
  <!-- void wxGrid::EnableDragColSize( bool enable = true ) -->
  <!-- void wxGrid::EnableDragColMove( bool enable = true ) -->
  <function name="wxGrid::EnableDragRowSize,wxGrid::EnableDragGridSize,wxGrid::EnableDragColSize,wxGrid::EnableDragColMove">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in" default="true">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxDataViewCtrl::SetRowHeight(int rowHeight) -->
  <!--         bool wxDataViewTreeCtrl::SetRowHeight(int rowHeight) -->
  <!--         bool wxDataViewListCtrl::SetRowHeight(int rowHeight) -->
  <function name="wxDataViewCtrl::SetRowHeight,wxDataViewTreeCtrl::SetRowHeight,wxDataViewListCtrl::SetRowHeight">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawPoint( wxCoord x, wxCoord y ) -->
  <function name="wxDC::DrawPoint">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxDataViewCtrl::Expand(const wxDataViewItem & item) -->
  <!--         void wxDataViewListCtrl::Expand(const wxDataViewItem & item) -->
  <!--         void wxDataViewTreeCtrl::Expand(const wxDataViewItem & item) -->
  <function name="wxDataViewCtrl::Expand,wxDataViewListCtrl::Expand,wxDataViewTreeCtrl::Expand">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxWindow::Update(void) -->
  <function name="wxWindow::Update">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
  </function>
  <!-- virtual bool wxGenericProgressDialog::Update(int value, const wxString & newmsg = wxEmptyString, bool * skip = NULL) -->
  <!--         bool wxProgressDialog::Update(int value, const wxString & newmsg = wxEmptyString, bool * skip = NULL) -->
  <function name="wxGenericProgressDialog::Update,wxProgressDialog::Update">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="inout" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxEvent::Skip(bool skip = true) -->
  <!-- void wxCommandEvent::Skip(bool skip = true) -->
  <!-- void wxKeyEvent::Skip(bool skip = true) -->
  <function name="wxEvent::Skip,wxCommandEvent::Skip,wxKeyEvent::Skip">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxPropertyGridManager::SetColumnCount(int colCount, int page = -1) -->
  <function name="wxPropertyGridManager::SetColumnCount">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>1:</valid>
    </arg>
    <arg nr="2" default="-1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxStatusBar::GetFieldRect( int i, wxRect & rect ) const -->
  <function name="wxStatusBar::GetFieldRect">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="out"/>
  </function>
  <!-- wxDataViewItem wxDataViewTreeCtrl::AppendContainer(const wxDataViewItem & parent, const wxString & text, int icon = -1, int expanded = -1, wxClientData * data = NULL) -->
  <function name="wxDataViewTreeCtrl::AppendContainer">
    <leak-ignore/>
    <noreturn>false</noreturn>
    <returnValue type="wxDataViewItem"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in" default="-1">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in" default="-1">
      <not-uninit/>
    </arg>
    <arg nr="5" direction="out" default="NULL">
      <not-uninit/>
    </arg>
  </function>
  <!-- int wxString::Find (wxUniChar ch, bool fromEnd=false) const -->
  <!-- int wxString::Find (const wxString &sub) const -->
  <function name="wxString::Find">
    <use-retval/>
    <const/>
    <leak-ignore/>
    <returnValue type="int"/>
    <noreturn>false</noreturn>
    <arg nr="any" direction="in"/>
  </function>
  <!-- int wxString::First (const wxUniChar ch) const -->
  <!-- int wxString::First (const wxString &sub) const -->
  <function name="wxString::First">
    <use-retval/>
    <const/>
    <leak-ignore/>
    <returnValue type="int"/>
    <noreturn>false</noreturn>
    <arg nr="any" direction="in"/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. Use 'wxString::Find' in new applications instead.</warn>
  </function>
  <!-- int wxString::Freq(wxUniChar ch) const -->
  <function name="wxString::Freq">
    <use-retval/>
    <const/>
    <leak-ignore/>
    <returnValue type="int"/>
    <noreturn>false</noreturn>
    <arg nr="any" direction="in"/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. You should not use it in new code.</warn>
  </function>
  <!-- size_t wxString::find(const wxString & str, size_t nStart = 0) const -->
  <!-- size_t wxString::find(const char * sz     , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find(const wchar_t * sz  , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find(wxUniChar ch        , size_t nStart = 0,) const -->
  <!-- size_t wxString::find_first_of(const wxString & str, size_t nStart = 0) const -->
  <!-- size_t wxString::find_first_of(const char * sz     , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_first_of(const wchar_t * sz  , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_first_of(wxUniChar ch        , size_t nStart = 0,) const -->
  <!-- size_t wxString::find_last_of(const wxString & str, size_t nStart = 0) const -->
  <!-- size_t wxString::find_last_of(const char * sz     , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_last_of(const wchar_t * sz  , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_last_of(wxUniChar ch        , size_t nStart = 0,) const -->
  <!-- size_t wxString::find_first_not_of(const wxString & str, size_t nStart = 0) const -->
  <!-- size_t wxString::find_first_not_of(const char * sz     , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_first_not_of(const wchar_t * sz  , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_first_not_of(wxUniChar ch        , size_t nStart = 0,) const -->
  <!-- size_t wxString::find_last_not_of (const wxString & str, size_t nStart = 0) const -->
  <!-- size_t wxString::find_last_not_of (const char * sz     , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_last_not_of (const wchar_t * sz  , size_t nStart = 0, size_t n = npos) const -->
  <!-- size_t wxString::find_last_not_of (wxUniChar ch        , size_t nStart = 0,) const -->
  <function name="wxString::find,wxString::find_last_of,wxString::find_first_of,wxString::find_first_not_of,wxString::find_last_not_of">
    <use-retval/>
    <const/>
    <leak-ignore/>
    <returnValue type="std::size_t"/>
    <noreturn>false</noreturn>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="std::wxString::npos">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawRoundedRectangle( const wxRect & r, double radius ) -->
  <!-- void wxPaintDC::DrawRoundedRectangle( const wxRect & r, double radius ) -->
  <!-- void wxMemoryDC::DrawRoundedRectangle( const wxRect & r, double radius ) -->
  <function name="wxDC::DrawRoundedRectangle,wxPaintDC::DrawRoundedRectangle,wxMemoryDC::DrawRoundedRectangle">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxDC::DrawRotatedText( const wxString & text, wxCoord x, wxCoord y, double angle ) -->
  <!-- void wxPaintDC::DrawRotatedText( const wxString & text, wxCoord x, wxCoord y, double angle ) -->
  <!-- void wxMemoryDC::DrawRotatedText( const wxString & text, wxCoord x, wxCoord y, double angle ) -->
  <function name="wxDC::DrawRotatedText,wxPaintDC::DrawRotatedText,wxMemoryDC::DrawRotatedText">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxMenuBar::Enable(int id, bool enable)-->
  <function name="wxMenuBar::Enable">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="any" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxTextValidator::SetCharExcludes( const wxString & chars ) -->
  <function name="wxTextValidator::SetCharExcludes">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxStyledTextCtrl::ToggleFold( int line ) -->
  <function name="wxStyledTextCtrl::ToggleFold">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::SetWrapMode( int wrapMode ) -->
  <function name="wxStyledTextCtrl::SetWrapMode">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- int wxStyledTextCtrl::LineFromPosition( int pos ) const -->
  <function name="wxStyledTextCtrl::LineFromPosition">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- int wxStyledTextCtrl::GetFoldLevel( int line ) const -->
  <function name="wxStyledTextCtrl::GetFoldLevel">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::StyleSetFont( int styleNum, const wxFont & font ) -->
  <function name="wxStyledTextCtrl::StyleSetFont">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxStyledTextCtrl::StyleSetBold( int style, bool bold ) -->
  <!-- void wxStyledTextCtrl::SetMarginWidth(int margin, int pixelWidth) -->
  <!-- void wxStyledTextCtrl::SetMarginType(int margin, int marginType) -->
  <function name="wxStyledTextCtrl::StyleSetBold,wxStyledTextCtrl::SetMarginWidth,wxStyledTextCtrl::SetMarginType">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxStyledTextCtrl::SetKeyWords( int keyWordSet, const wxString & keyWords ) -->
  <function name="wxStyledTextCtrl::SetKeyWords">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!--void wxStyledTextCtrl::SetProperty(const wxString & key, const wxString & value) -->
  <function name="wxStyledTextCtrl::SetProperty">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxStyledTextCtrl::StyleSetBackground( int style, const wxColour & back ) -->
  <function name="wxStyledTextCtrl::StyleSetBackground">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxGrid::UseNativeColHeader( bool native = true ) -->
  <function name="wxGrid::UseNativeColHeader">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxGrid::SetTable(wxGridTableBase * table, bool takeOwnership = false, wxGridSelectionModes selmode = wxGridSelectCells) -->
  <function name="wxGrid::SetTabler">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="wxGridSelectCells" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SetTabBehaviour( TabBehaviour behaviour ) -->
  <function name="wxGrid::SetTabBehaviour">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyValueString( wxPGPropArg id, const wxString & value ) -->
  <!-- void wxPropertyGrid::SetPropertyValueString( wxPGPropArg id, const wxString & value ) -->
  <function name="wxPropertyGridInterface::SetPropertyValueString,wxPropertyGrid::SetPropertyValueString">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxPropertyGridManager::SetSplitterPosition( int pos, int column = 0 ) -->
  <!-- void wxPropertyGridPage::SetSplitterPosition( int pos, int column = 0 ) -->
  <function name="wxPropertyGridManager::SetSplitterPosition,wxPropertyGridPage::SetSplitterPosition">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxPropertyGridInterface::SetColumnProportion( unsigned int column, int proportion ) -->
  <!-- bool wxPropertyGridPage::SetColumnProportion( unsigned int column, int proportion ) -->
  <function name="wxPropertyGridInterface::SetColumnProportion,wxPropertyGridPage::SetColumnProportion">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPropertyGridManager::ShowHeader( bool show = true ) -->
  <function name="wxPropertyGridManager::ShowHeader">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxRect::Offset( const wxPoint &pt ) -->
  <!-- void wxRect::Offset( wxCoord dx, wxCoord dy ) -->
  <function name="wxRect::Offset">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxRect::Intersects(const wxRect & rect) const -->
  <function name="wxRect::Intersects">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxRect::SetLeftBottom( const wxPoint & p ) -->
  <!-- void wxRect::SetLeftTop( const wxPoint & p ) -->
  <!-- void wxRect::SetRightBottom( const wxPoint & p ) -->
  <!-- void wxRect::SetRightTop( const wxPoint & p ) -->
  <function name="wxRect::SetLeftBottom,wxRect::SetLeftTop,wxRect::SetRightBottom,wxRect::SetRightTop">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxRect::SetRight( int right ) -->
  <!-- void wxRect::SetLeft( int left ) -->
  <!-- void wxRect::SetWidth(int width)-->
  <!-- void wxRect::SetHeight( int h ) -->
  <function name="wxRect::SetRight,wxRect::SetLeft,wxRect::SetWidth,wxRect::SetHeight">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- bool wxTextEntry::AutoComplete( wxTextCompleter * completer ) -->
  <!-- bool wxTextEntry::AutoComplete( const wxArrayString & choices ) -->
  <!-- bool wxSearchCtrl::AutoComplete( wxTextCompleter * completer ) -->
  <!-- bool wxSearchCtrl::AutoComplete( const wxArrayString & choices ) -->
  <function name="wxTextEntryBase::AutoComplete,wxSearchCtrl::AutoComplete">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual bool wxTextEntry::SetHint (const wxString & hint) -->
  <!-- virtual bool wxTextCtrl::SetHint (const wxString & hint) -->
  <function name="wxTextEntry::SetHint,wxTextCtrl::SetHint">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxSearchCtrl::SetDescriptiveText(const wxString & text)-->
  <function name="wxSearchCtrl::SetDescriptiveText">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxSearchCtrl::ShowCancelButton(bool show) -->
  <!-- virtual void wxSearchCtrl::ShowSearchButton(bool show) -->
  <function name="wxSearchCtrl::ShowCancelButton">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxPGProperty::SetChoices(wxPGChoices & choices) -->
  <function name="wxPGProperty::SetChoices">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyHelpString(wxPGPropArg id, const wxString & helpString) -->
  <!-- void wxPropertyGridPage::SetPropertyHelpString(wxPGPropArg id, const wxString & helpString) -->
  <function name="wxPropertyGridInterface::SetPropertyHelpString,wxPropertyGridPage::SetPropertyHelpString">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
  </function>
  <!-- void wxScrolledWindow::SetScrollRate( int xstep, int ystep ) -->
  <function name="wxScrolledWindow::SetScrollRate">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxGraphicsContext* wxGraphicsRenderer::CreateContext(wxWindow * window) -->
  <!-- virtual wxGraphicsContext* wxGraphicsRenderer::CreateContext(const wxWindowDC &dc) -->
  <!-- virtual wxGraphicsContext* wxGraphicsRenderer::CreateContext(const wxMemoryDC &dc) -->
  <!-- virtual wxGraphicsContext* wxGraphicsRenderer::CreateContext(const wxPrinterDC &dc) -->
  <!-- virtual wxGraphicsContext* wxGraphicsRenderer::CreateContext(const wxEnhMetaFileDC &dc) -->
  <!-- static  wxGraphicsContext* wxGraphicsRenderer::CreateContextFromUnknownDC( const wxDC & dc ) -->
  <function name="wxGraphicsRenderer::CreateContext,wxGraphicsRenderer::CreateContextFromUnknownDC">
    <noreturn>false</noreturn>
    <returnValue type="wxGraphicsContext *"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual bool wxGraphicsContext::SetInterpolationQuality(wxInterpolationQuality interpolation) -->
  <!-- virtual bool wxGraphicsContext::SetAntialiasMode(wxAntialiasMode antialias) -->
  <function name="wxGraphicsContext::SetInterpolationQuality,wxGraphicsContext::SetAntialiasMode">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGCDC::SetGraphicsContext( wxGraphicsContext * ctx ) -->
  <function name="wxGCDC::SetGraphicsContext">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- wxGraphicsContext * wxDC::GetGraphicsContext( void ) -->
  <function name="wxGCDC::GetGraphicsContext">
    <noreturn>false</noreturn>
    <returnValue type="wxGraphicsContext *"/>
    <use-retval/>
  </function>
  <!-- virtual wxOutputStream & wxOutputStream::Write( const void * buffer, size_t size ) -->
  <!--         wxOutputStream & wxMemoryOutputStream::Write( const void * buffer, size_t size ) -->
  <!-- virtual wxOutputStream & wxOutputStream::WriteAll( const void * buffer, size_t size ) -->
  <!--         wxOutputStream & wxMemoryOutputStream::WriteAll( const void * buffer, size_t size ) -->
  <function name="wxOutputStream::Write,wxOutputStream::WriteAll,wxMemoryOutputStream::Write,wxMemoryOutputStream::WriteAll">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="wxOutputStream &amp;"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- @todo: bool wxCmdLineParser::Found( const wxString & name) const -->
  <!-- bool wxCmdLineParser::Found( const wxString & name, wxString * value ) const -->
  <!-- bool wxCmdLineParser::Found( const wxString & name, long * value ) const -->
  <!-- bool wxCmdLineParser::Found( const wxString & name, double * value ) const -->
  <!-- bool wxCmdLineParser::Found( const wxString & name, wxDateTime * value ) const -->
  <function name="wxCmdLineParser::Found">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="out">
      <not-null/>
    </arg>
  </function>
  <!-- static wxString wxFileSystem::FileNameToURL( const wxFileName & filename ) -->
  <function name="wxFileSystem::FileNameToURL">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <pure/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxFileName::FileExists() const -->
  <function name="wxFileName::FileExists">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
  </function>
  <!-- wxColour wxColourPickerCtrl::GetColour() const -->
  <function name="wxColourPickerCtrl::GetColour">
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
  </function>
  <!--void  wxColourPickerCtrl::SetColour(const wxColour &c) -->
  <!--void  wxColourPickerCtrl::SetColour(const wxString &colourStr) -->
  <function name="wxColourPickerCtrl::SetColour">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--wxString& wxString::Remove(size_t pos) -->
  <!--wxString& wxString::Remove(size_t pos, size_t len) -->
  <function name="wxString::Remove">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. Use 'wxString::Truncate' in new applications instead.</warn>
  </function>
  <!--wxString& wxString::Truncate(size_t len) -->
  <function name="wxString::Truncate">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--void wxString::UpperCase(void) -->
  <function name="wxString::UpperCase">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. Use 'wxString::MakeUpper' in new applications instead.</warn>
  </function>
  <!--void wxString::LowerCase(void) -->
  <function name="wxString::LowerCase">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <warn severity="style">This is a wxWidgets 1.xx compatibility function. Use 'wxString::MakeLower' in new applications instead.</warn>
  </function>
  <!-- static wxUniChar wxFileName::GetPathSeparator(wxPathFormat format = wxPATH_NATIVE) -->
  <function name="wxFileName::GetPathSeparator">
    <noreturn>false</noreturn>
    <returnValue type="wxUniChar"/>
    <pure/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" default="wxPATH_NATIVE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxFileName::GetPath(int flags = wxPATH_GET_VOLUME, wxPathFormat format = wxPATH_NATIVE) const -->
  <function name="wxFileName::GetPath">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" default="wxPATH_GET_VOLUME" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="1" default="wxPATH_NATIVE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxWindow::ClientToScreen(int * x, int * y) const -->
  <function name="wxWindow::ClientToScreen">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="out">
      <not-null/>
    </arg>
    <arg nr="2" direction="out">
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxToolBar::EnableTool(int toolId, bool enable)-->
  <function name="wxToolBar::EnableTool">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxImage::SetMaskColour( unsigned char r, unsigned char g, unsigned char b ) -->
  <function name="wxImage::SetMaskColour">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:255</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <valid>0:255</valid>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <valid>0:255</valid>
    </arg>
  </function>
  <!-- void wxListItem::SetColumn(int col) -->
  <!-- void wxListItem::SetId(long id) -->
  <!-- void wxListItem::SetImage(int image) -->
  <!-- void wxListItem::SetMask(long mask) -->
  <!-- void wxListItem::SetStateMask(long stateMask) -->
  <!-- void wxListItem::SetWidth(int width) -->
  <function name="wxListItem::SetColumn,wxListItem::SetId,wxListItem::SetImage,wxListItem::SetMask,wxListItem::SetStateMask,wxListItem::SetWidth">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxPopupTransientWindow::ProcessLeftDown(wxMouseEvent & event) -->
  <function name="wxPopupTransientWindow::ProcessLeftDown">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout"/>
  </function>
  <!-- virtual void wxPopupTransientWindow::Popup(wxWindow * focus = NULL) -->
  <function name="wxPopupTransientWindow::Popup">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" default="0" direction="inout">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxPoint wxMouseEvent::GetLogicalPosition(const wxDC & dc) const -->
  <function name="wxMouseEvent::GetLogicalPosition">
    <noreturn>false</noreturn>
    <returnValue type="wxPoint"/>
    <leak-ignore/>
    <use-retval/>
    <const/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxAuiPaneInfo& wxAuiManager::GetPane(wxWindow * window) -->
  <!-- wxAuiPaneInfo& wxAuiManager::GetPane(const wxString & name) -->
  <function name="wxAuiManager::GetPane">
    <noreturn>false</noreturn>
    <returnValue type="wxAuiPaneInfo &amp;"/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1"/>
  </function>
  <!-- bool wxAuiManager::AddPane(wxWindow * window, const wxAuiPaneInfo & pane_info)-->
  <!-- bool wxAuiManager::AddPane(wxWindow * window, int direction = wxLEFT, const wxString & caption = wxEmptyString) -->
  <!-- bool wxAuiManager::AddPane(wxWindow * window, const wxAuiPaneInfo & pane_info, const wxPoint & drop_pos) -->
  <function name="wxAuiManager::AddPane">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1"/>
    <arg nr="2" direction="in" default="wxLEFT"/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
  </function>
  <!-- virtual void wxConfigBase::SetPath(const wxString &strPath) = 0 -->
  <!-- virtual void wxConfig::SetPath(const wxString &strPath) -->
  <!-- virtual void wxFileConfig::SetPath(const wxString &strPath)-->
  <!-- virtual void wxRegConfig::SetPath(const wxString &strPath)-->
  <function name="wxConfigBase::SetPath,wxConfig::SetPath,wxFileConfig::SetPath,wxRegConfig::SetPath">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxConfigBase * wxConfigBase::Set( wxConfigBase * pConfig ) -->
  <function name="wxConfigBase::Set">
    <noreturn>false</noreturn>
    <returnValue type="wxConfigBase *"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- static wxWindow* wxWindow::FindWindowByName(const wxString & name, const wxWindow * parent = 0) -->
  <!-- static wxWindow* wxWindow::FindWindowByLabel(const wxString & label, const wxWindow * parent = 0) -->
  <function name="wxWindow::FindWindowByName,wxWindow::FindWindowByLabel">
    <noreturn>false</noreturn>
    <returnValue type="wxWindow *"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual void wxTextCtrl::GetSelection(long* from, long* to) const  -->
  <function name="wxTextCtrl::GetSelection">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-null/>
    </arg>
  </function>
  <!-- long wxListCtrl::GetNextItem( long item, int geometry = wxLIST_NEXT_ALL, int state = wxLIST_STATE_DONTCARE ) const -->
  <function name="wxListCtrl::GetNextItem">
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <use-retval/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="wxLIST_NEXT_ALL" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="wxLIST_STATE_DONTCARE" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxTextCtrl::SetStyle( long start, long end, const wxTextAttr & style ) -->
  <function name="wxTextCtrl::SetStyle">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in"/>
  </function>
  <!-- static wxWindow* wxWindow::FindWindowById(long id const wxWindow * parent = 0) -->
  <function name="wxWindow::FindWindowById">
    <noreturn>false</noreturn>
    <returnValue type="wxWindow *"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!--wxString wxString::Left(size_t count) const -->
  <!--wxString wxString::Right(size_t count) const -->
  <function name="wxString::Right,wxString::Left">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <const/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>1:</valid>
    </arg>
  </function>
  <!--void wxDC::SetLogicalFunction(wxRasterOperationMode function)-->
  <function name="wxDC::SetLogicalFunction">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--bool wxLayoutAlgorithm::LayoutFrame (wxFrame * frame, wxWindow * mainWindow = NULL) -->
  <!--bool wxLayoutAlgorithm::LayoutMDIFrame (wxMDIParentFrame * frame, wxRect * rect = NULL) -->
  <!--bool wxLayoutAlgorithm::LayoutWindow (wxWindow * frame, wxWindow * mainWindow = NULL) -->
  <function name="wxLayoutAlgorithm::LayoutFrame,wxLayoutAlgorithm::LayoutMDIFrame,wxLayoutAlgorithm::LayoutWindow">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" default="NULL" direction="inout">
      <not-uninit/>
    </arg>
  </function>
  <!--virtual wxPGCellRenderer* wxPGProperty::GetCellRenderer(int column) const -->
  <function name="wxPGProperty::GetCellRenderer,wxEnumProperty::GetCellRenderer,wxStringProperty::GetCellRenderer">
    <noreturn>false</noreturn>
    <returnValue type="wxPGCellRenderer*"/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--static void wxImage::AddHandler(wxImageHandler * handler)-->
  <function name="wxImage::AddHandler">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!--void wxGrid::SetGridLineColour(const wxColour & colour) -->
  <!--void wxGrid::SetLabelBackgroundColour(const wxColour & colour) -->
  <!--void wxGrid::SetLabelTextColour(const wxColour & colour) -->
  <!--void wxGrid::SetLabelFont(const wxFont & font) -->
  <function name="wxGrid::SetGridLineColour,wxGrid::SetLabelBackgroundColour,wxGrid::SetLabelTextColour,wxGrid::SetLabelFont">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--bool wxShell(const wxString &command=wxEmptyString)-->
  <function name="wxShell">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" default="wxEmptyString" direction="in"/>
  </function>
  <!--void wxDC::SetLayoutDirection(wxLayoutDirection dir)-->
  <function name="wxDC::SetLayoutDirection">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--virtual bool wxImage::SaveFile(wxOutputStream & stream, const wxString & mimetype) const -->
  <!--virtual bool wxImage::SaveFile(wxOutputStream & stream, wxBitmapType type) const -->
  <!--virtual bool wxImage::SaveFile(const wxString & name, wxBitmapType type) const -->
  <!--virtual bool wxImage::SaveFile(const wxString & name, const wxString & mimetype) const -->
  <!--virtual bool wxImage::SaveFile(const wxString & name) const -->
  <function name="wxImage::SaveFile">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <leak-ignore/>
    <arg nr="1"/>
    <arg nr="2" default="" direction="in"/>
  </function>
  <!--static void wxLog::SetTimestamp(const wxString & format) -->
  <function name="wxLog::SetTimestamp">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <pure/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--virtual void wxTextEntry::ChangeValue(const wxString & value)-->
  <!--virtual void wxTextCtrl::ChangeValue(const wxString & value)-->
  <function name="wxTextEntry::ChangeValue,wxTextCtrl::ChangeValue">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--virtual void wxWindowBase::SetName(const wxString & name)-->
  <!--virtual void wxWindow::SetName(const wxString & name)-->
  <!--virtual void wxMessageDialog::SetName(const wxString & name)-->
  <function name="wxWindowBase::SetName,wxWindow::SetName,wxMessageDialog::SetName">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--void wxWindowBase::SetClientSize(int width, int height)-->
  <!--void wxWindowBase::SetClientSize(const wxSize &sz)-->
  <!--void wxWindowBase::SetClientSize(const wxRect &rect)-->
  <!--void wxWindow::SetClientSize(int width, int height)-->
  <!--void wxWindow::SetClientSize(const wxSize &sz)-->
  <!--void wxWindow::SetClientSize(const wxRect &rect)-->
  <function name="wxWindowBase::SetClientSize,wxWindow::SetClientSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="any" direction="in"/>
  </function>
  <!--void wxCommandEvent::SetClientData(void * clientData)-->
  <!--void wxCommandEvent::SetClientObject(void * clientObj)-->
  <function name="wxCommandEvent::SetClientData,wxCommandEvent::SetClientObject">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--virtual void wxWindow::SetMinClientSize(const wxSize & size)-->
  <!--virtual void wxWindow::SetMinSize(const wxSize & size)-->
  <!--virtual void wxGrid::SetMinClientSize(const wxSize & size)-->
  <!--virtual void wxGrid::SetMinSize(const wxSize & size)-->
  <function name="wxWindow::SetMinClientSize,wxWindow::SetMinSize,wxGrid::SetMinClientSize,wxGrid::SetMinSize">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!--bool wxShutdown(int flags = wxSHUTDOWN_POWEROFF) -->
  <function name="wxShutdown">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" default="wxSHUTDOWN_POWEROFF" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--bool wxSizer::Hide(wxWindow * window, bool recursive = false) -->
  <!--bool wxSizer::Hide(wxSizer * sizer, bool recursive = false)-->
  <!--bool wxSizer::Hide(size_t index)-->
  <function name="wxSizer::Hide,wxBoxSizer::Hide,wxStaticBoxSizer::Hide">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!--bool wxSizer::IsShown(wxWindow * window) const-->
  <!--bool wxSizer::IsShown(wxSizer * sizer) const-->
  <!--bool wxSizer::IsShown(size_t index) const-->
  <function name="wxSizer::IsShown,wxBoxSizer::IsShown,wxStaticBoxSizer::IsShown">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--unsigned long wxGetProcessId(void)-->
  <function name="wxGetProcessId">
    <noreturn>false</noreturn>
    <returnValue type="unsigned long"/>
    <leak-ignore/>
    <use-retval/>
  </function>
  <!-- const wxString& wxHtmlEasyPrinting::GetName( void )  const -->
  <function name="wxHtmlEasyPrinting::GetName">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <leak-ignore/>
    <use-retval/>
    <const/>
  </function>
  <!-- wxPageSetupDialogData * wxHtmlEasyPrinting::GetPageSetupData( void ) -->
  <function name="wxHtmlEasyPrinting::GetPageSetupData">
    <noreturn>false</noreturn>
    <returnValue type="wxPageSetupDialogData *"/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- wxWindow wxHtmlEasyPrinting::GetParentWindow( void )  const -->
  <function name="wxHtmlEasyPrinting::GetParentWindow">
    <noreturn>false</noreturn>
    <returnValue type="wxWindow *"/>
    <leak-ignore/>
    <use-retval/>
    <const/>
  </function>
  <!-- wxPrintData * wxHtmlEasyPrinting::GetPrintData( void ) -->
  <function name="wxHtmlEasyPrinting::GetPrintData">
    <noreturn>false</noreturn>
    <returnValue type="wxPrintData *"/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- void wxHtmlEasyPrinting::PageSetup( void ) -->
  <function name="wxHtmlEasyPrinting::PageSetup">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
  </function>
  <!-- bool wxHtmlEasyPrinting::PreviewFile( const wxString & htmlfile ) -->
  <function name="wxHtmlEasyPrinting::PreviewFile">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxHtmlEasyPrinting::PreviewText( const wxString & htmltext, const wxString & basepath = wxEmptyString ) -->
  <function name="wxHtmlEasyPrinting::PreviewText">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxEmptyString" direction="in"/>
  </function>
  <!-- bool wxHtmlEasyPrinting::PrintFile( const wxString & htmlfile ) -->
  <function name="wxHtmlEasyPrinting::PrintFile">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxHtmlEasyPrinting::PrintText( const wxString & htmltext, const wxString & basepath = wxEmptyString ) -->
  <function name="wxHtmlEasyPrinting::PrintText">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxEmptyString" direction="in"/>
  </function>
  <!-- void wxHtmlEasyPrinting::SetFooter( const wxString & footer, int pg = wxPAGE_ALL ) -->
  <function name="wxHtmlEasyPrinting::SetFooter">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxPAGE_ALL" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxHtmlEasyPrinting::SetHeader( const wxString & header, int pg = wxPAGE_ALL ) -->
  <function name="wxHtmlEasyPrinting::SetHeader">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxPAGE_ALL" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxHtmlEasyPrinting::SetParentWindow(wxWindow *w) -->
  <function name="wxHtmlEasyPrinting::SetParentWindow">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxGridCellEnumRenderer::SetParameters (const wxString &params)-->
  <function name="wxGridCellEnumRenderer::SetParameters">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxGrid::SetTable(wxGridTableBase * table, bool takeOwnership = false, wxGridSelectionModes selmode = wxGridSelectCells) -->
  <function name="wxGrid::SetTable">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="wxGridSelectCells" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SetColMinimalAcceptableWidth( int width ) -->
  <function name="wxGrid::SetColMinimalAcceptableWidth">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SetColMinimalWidth( int col, int width ) -->
  <function name="wxGrid::SetColMinimalWidth">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxGrid::SelectRow(int row, bool addToSelected = false) -->
  <function name="wxGrid::SelectRow">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="false" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxGrid::InsertCols(int pos = 0, int numCols = 1, bool updateLabels = true) -->
  <!-- bool wxGrid::InsertRows(int pos = 0, int numCols = 1, bool updateLabels = true) -->
  <function name="wxGrid::InsertCols,wxGrid::InsertRows">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" default="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxOperatingSystemId wxGetOsVersion(int * major = NULL, int * minor = NULL)-->
  <function name="wxGetOsVersion">
    <noreturn>false</noreturn>
    <returnValue type="wxOperatingSystemId"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" default="NULL" direction="out"/>
    <arg nr="2" default="NULL" direction="out"/>
  </function>
  <!-- int wxGrid::GetGridCursorRow() const  -->
  <!-- int wxGrid::GetGridCursorCol() const  -->
  <function name="wxGrid::GetGridCursorRow,wxGrid::GetGridCursorCol">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- wxColour wxGrid::GetGridLineColour() const  -->
  <function name="wxGrid::GetGridLineColour">
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- virtual int wxAnimation::GetDelay(unsigned int i) const -->
  <function name="wxAnimation::GetDelay">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- wxImage wxImage::Rotate(double angle, const wxPoint & rotationCentre, bool interpolating = true, wxPoint * offsetAfterRotation = NULL) const -->
  <function name="wxImage::Rotate">
    <noreturn>false</noreturn>
    <returnValue type="wxImage"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="true" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" default="NULL" direction="out"/>
  </function>
  <!-- void wxImage::RotateHue(double angle) -->
  <function name="wxImage::RotateHue">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxImage wxImage::Rotate90(bool clockwise = true) const -->
  <function name="wxImage::Rotate90">
    <noreturn>false</noreturn>
    <returnValue type="wxImage"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxImage wxImage::Rotate180() const -->
  <function name="wxImage::Rotate180">
    <noreturn>false</noreturn>
    <returnValue type="wxImage"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- virtual wxImage wxAnimation::GetFrame(unsigned int i) const -->
  <function name="wxAnimation::GetFrame">
    <noreturn>false</noreturn>
    <returnValue type="wxImage"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual unsigned int wxAnimation::GetFrameCount(void) const -->
  <function name="wxAnimation::GetFrameCount">
    <noreturn>false</noreturn>
    <returnValue type="unsigned int"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- virtual bool wxAnimation::Load(wxInputStream & stream, wxAnimationType type = wxANIMATION_TYPE_ANY) -->
  <function name="wxAnimation::Load">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="out"/>
    <arg nr="2" default="wxANIMATION_TYPE_ANY" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxAnimation::LoadFile(const wxString &name, wxAnimationType type = wxANIMATION_TYPE_ANY) -->
  <function name="wxAnimation::LoadFile">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxANIMATION_TYPE_ANY" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual wxSize wxAnimation::GetSize() const -->
  <function name="wxAnimation::GetSize">
    <noreturn>false</noreturn>
    <returnValue type="wxSize"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- virtual bool wxAnimation::IsOk() const -->
  <function name="wxAnimation::IsOk">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <const/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!-- const wxCharBuffer wxString::ToAscii( void ) const -->
  <!-- const const char * wxString::ToAscii( void ) const -->
  <function name="wxString::ToAscii">
    <noreturn>false</noreturn>
    <const/>
    <use-retval/>
    <leak-ignore/>
  </function>
  <!--        bool wxFileName::IsDir( void ) const -->
  <!--        bool wxFileName::IsDirReadable( void ) const -->
  <!-- static bool wxFileName::IsDirReadable( const wxString &path ) const -->
  <!--        bool wxFileName::IsDirWritable( void ) const -->
  <!-- static bool wxFileName::IsDirWritable( const wxString &path ) const -->
  <!--        bool wxFileName::IsFileExecutable( void ) const -->
  <!-- static bool wxFileName::IsFileExecutable( const wxString &file ) const -->
  <!--        bool wxFileName::IsFileReadable( void ) const -->
  <!-- static bool wxFileName::IsFileReadable( const wxString &file ) const -->
  <!--        bool wxFileName::IsFileWritable( void ) const -->
  <!-- static bool wxFileName::IsFileWritable( const wxString &file ) const -->
  <!--      bool wxFileName::IsOk( void ) const -->
  <function name="wxFileName::IsDirWritable,wxFileName::IsDir,wxFileName::IsDirReadable,wxFileName::IsFileExecutable,wxFileName::IsFileReadable,wxFileName::IsFileWritable,wxFileName::IsOk">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <const/>
    <leak-ignore/>
    <arg nr="1" default="wxEmptyString" direction="in"/>
  </function>
  <!-- void wxDC::CopyAttributes(const wxDC & dc) -->
  <function name="wxDC::CopyAttributes">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxTextFile::Open(const wxString & strFile, const wxMBConv & conv = wxConvAuto()) -->
  <function name="wxTextFile::Open">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxConvAuto()" direction="in"/>
  </function>
  <!-- bool wxTextFile::Write(wxTextFileType typeNew = wxTextFileType_None, const wxMBConv & conv = wxConvAuto()) -->
  <function name="wxTextFile::Write">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" default="wxTextFileType_None" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="wxConvAuto()" direction="in"/>
  </function>
  <!-- static wxString wxString::From8BitData(const char * buf) -->
  <!-- static wxString wxString::From8BitData(const char * buf, size_t len) -->
  <function name="wxString::From8BitData">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-null/>
      <not-uninit/>
      <strz/>
      <minsize type="argvalue" arg="2"/>
    </arg>
    <arg nr="2" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!--wxPoint wxWindow::ConvertDialogToPixels(const wxPoint & pt) const -->
  <!--wxSize wxWindow::ConvertDialogToPixels(const wxSize & sz) const -->
  <!--wxPoint wxWindow::ConvertPixelsToDialog(const wxPoint & pt) const -->
  <!--wxSize wxWindow::ConvertPixelsToDialog(const wxSize & sz) const -->
  <function name="wxWindow::ConvertDialogToPixels,wxWindow::ConvertPixelsToDialog">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <const/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!--wxSizerFlags& wxSizerFlags::Align(int direction)	-->
  <function name="wxSizerFlags::Align">
    <noreturn>false</noreturn>
    <returnValue type="wxSizerFlags &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--wxSizerFlags& wxSizerFlags::Border(int direction = wxALL) -->
  <!--wxSizerFlags& wxSizerFlags::Border(int direction, int borderinpixels)	-->
  <function name="wxSizerFlags::Border">
    <noreturn>false</noreturn>
    <returnValue type="wxSizerFlags &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in" default="wxALL">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="2" direction="in" default="0">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!--       wxRect wxGrid::CellToRect(int row, int col) const -->
  <!-- TODO: wxRect wxGrid::CellToRect(const wxGridCellCoords & coords) const -->
  <function name="wxGrid::CellToRect">
    <noreturn>false</noreturn>
    <returnValue type="wxRect"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- int wxGrid::GetRowLabelSize() const -->
  <!-- int wxGrid::GetColLabelSize() const -->
  <!-- int wxGrid::GetRowMinimalAcceptableHeight() const -->
  <!-- int wxGrid::GetScrollLineX() const -->
  <!-- int wxGrid::GetScrollLineY() const -->
  <!-- int wxGrid::GetNumberRows() const -->
  <!-- int wxGrid::GetNumberFrozenRows() const -->
  <!-- int wxGrid::GetNumberFrozenCols() const -->
  <!-- int wxGrid::GetNumberCols() const -->
  <function name="wxGrid::GetRowLabelSize,wxGrid::GetColLabelSize,wxGrid::GetRowMinimalAcceptableHeight,wxGrid::GetScrollLineX,wxGrid::GetScrollLineY,wxGrid::GetNumberRows,wxGrid::GetNumberFrozenRows,wxGrid::GetNumberFrozenCols,wxGrid::wxGrid::GetNumberCols">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- wxFont wxGrid::GetLabelFont() const -->
  <function name="wxGrid::GetLabelFont">
    <noreturn>false</noreturn>
    <returnValue type="wxFont"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- wxColour wxGrid::GetLabelBackgroundColour() const -->
  <!-- wxColour wxGrid::GetLabelTextColour() const -->
  <function name="wxGrid::GetLabelTextColour,wxGrid::GetLabelBackgroundColour">
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- wxGridSizesInfo wxGrid::GetRowSizes() const -->
  <function name="wxGrid::GetRowSizes">
    <noreturn>false</noreturn>
    <returnValue type="wxGridSizesInfo"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- wxString wxGrid::GetRowLabelValue(int row) const -->
  <function name="wxGrid::GetRowLabelValue">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- int wxGrid::GetRowMinimalHeight(int col) const -->
  <function name="wxGrid::GetRowMinimalHeight">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- virtual wxString wxTextCtrl::GetLineText(long lineNo) const -->
  <function name="wxTextCtrl::GetLineText">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- wxWindow* wxBookCtrlBase::GetPage(size_t page) const -->
  <!-- wxWindow* wxNotebook::GetPage(size_t page) const -->
  <function name="wxBookCtrlBase::GetPage,wxNotebook::GetPage">
    <noreturn>false</noreturn>
    <returnValue type="wxWindow *"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxCmdLineParser::SetLogo (const wxString & logo) -->
  <!-- void wxCmdLineParser::SetSwitchChars (const wxString & switchChars) -->
  <!-- void wxCmdLineParser::SetCmdLine (const wxString & commandline) -->
  <function name="wxCmdLineParser::SetSwitchChars,wxCmdLineParser::SetLogo,wxCmdLineParser::SetCmdLine">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxCmdLineParser::SetDesc(const wxCmdLineEntryDesc * desc) -->
  <function name="wxCmdLineParser::SetDesc">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
  </function>
  <!-- virtual void wxWebView::SetPage(const wxString & html, const wxString & baseUrl) -->
  <!-- virtual void wxWebView::SetPage(wxInputStream & html, wxString baseUrl) -->
  <function name="wxWebView::SetPage">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- static wxWebView* wxWebView::New (const wxString & backend = wxWebViewBackendDefault) -->
  <!-- static wxWebView* wxWebView::New (wxWindow * parent, wxWindowID id, const wxString & url = wxWebViewDefaultURLStr, const wxPoint & pos = wxDefaultPosition, const wxSize & size = wxDefaultSize, const wxString & backend = wxWebViewBackendDefault, long style = 0, const wxString & name = wxWebViewNameStr) -->
  <function name="wxWebView::New">
    <noreturn>false</noreturn>
    <returnValue type="wxWebView*"/>
    <leak-ignore/>
    <use-retval/>
    <arg nr="any" direction="in"/>
  </function>
  <!-- void wxColourData::SetCustomColour(int i, const wxColour &c)  -->
  <function name="wxColourData::SetCustomColour">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <!-- From wxWidgets-documentation: An integer between 0 and 15, being any of the 15 custom colours that the user has saved. -->
      <valid>0:15</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxColour wxColourData::GetCustomColour(int i) const -->
  <function name="wxColourData::GetCustomColour">
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <!-- From wxWidgets-documentation: An integer between 0 and 15, being any of the 15 custom colours that the user has saved. -->
      <valid>0:15</valid>
    </arg>
  </function>
  <!-- bool wxDragImage::Move(const wxPoint & pt) -->
  <function name="wxDragImage::Move">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- bool wxDragImage::Show() -->
  <function name="wxDragImage::Show">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
  </function>
  <!-- bool wxDragImage::BeginDrag(const wxPoint & hotspot, wxWindow * window, bool fullScreen = false, wxRect * rect = NULL) -->
  <!-- bool wxDragImage::BeginDrag(const wxPoint & hotspot, wxWindow * window, wxWindow * boundingWindow) -->
  <function name="wxDragImage::BeginDrag">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="3" default="false" direction="in"/>
    <arg nr="4" default="NULL" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxString & wxString::Prepend(const wxString &str); -->
  <function name="wxString::Prepend">
    <noreturn>false</noreturn>
    <returnValue type="wxString &amp;"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual void wxFileDialog::SetMessage(const wxString &str); -->
  <!-- virtual void wxFileDialog::SetPath(const wxString &str); -->
  <!-- virtual void wxFileDialog::SetFilename(const wxString &str); -->
  <!-- virtual void wxFileDialog::SetWildcard(const wxString &str); -->
  <!-- virtual void wxFileDialog::SetDirectory(const wxString &str); -->
  <function name="wxFileDialog::SetMessage,wxFileDialog::SetPath,wxFileDialog::SetFilename,wxFileDialog::SetWildcard,wxFileDialog::SetDirectory">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual bool wxFont::SetFaceName(const wxString &str); -->
  <function name="wxFont::SetFaceName">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static int wxSystemSettings::GetMetric(wxSystemMetric index, wxWindow * win = NULL) -->
  <function name="wxSystemSettings::GetMetric">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" default="NULL" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- static wxString wxSystemOptions::GetOption(const wxString & name) -->
  <function name="wxSystemOptions::GetOption">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static int wxSystemOptions::GetOptionInt(const wxString & name) -->
  <function name="wxSystemOptions::GetOptionInt">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- static bool wxSystemOptions::HasOption(const wxString & name) -->
  <!-- static bool wxSystemOptions::IsFalse(const wxString & name) -->
  <function name="wxSystemOptions::HasOption,wxSystemOptions::IsFalse">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual int wxTextCtrl::GetNumberOfLines(void) const -->
  <function name="wxTextCtrl::GetNumberOfLines">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
  </function>
  <!-- static wxFont wxSystemSettings::GetFont(wxSystemFont index) -->
  <function name="wxSystemSettings::GetFont">
    <noreturn>false</noreturn>
    <returnValue type="wxFont"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- long wxGetNumberFromUser(const wxString & message,
     const wxString & prompt,
     const wxString & caption,
     long value,
     long min = 0,
     long max = 100,
     wxWindow * parent = NULL,
     const wxPoint & pos = wxDefaultPosition
     )-->
  <function name="wxGetNumberFromUser">
    <noreturn>false</noreturn>
    <returnValue type="long"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="inout">
      <not-uninit/>
    </arg>
    <arg nr="5" default="0" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="6" default="100" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="7" default="NULL" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="7" default="wxDefaultPosition" direction="in"/>
  </function>
  <!-- wxString wxGetPasswordFromUser (const wxString & message,
                                       const wxString & caption = wxGetPasswordFromUserPromptStr,
                                       const wxString & default_value = wxEmptyString,
                                       wxWindow * parent = NULL,
                                       int x = wxDefaultCoord,
                                       int y = wxDefaultCoord,
                                       bool centre = true) -->
  <function name="wxGetPasswordFromUser">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="Enter Password" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
    <arg nr="4" default="NULL" direction="inout">
      <not-uninit/>
    </arg>
    <arg nr="5" default="wxDefaultCoord" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" default="wxDefaultCoord" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="7" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxString wxGetTextFromUser(const wxString &message, 
                                   const wxString &caption=wxGetTextFromUserPromptStr, 
                                   const wxString &default_value=wxEmptyString, 
                                   wxWindow *parent=NULL, 
                                   int x=wxDefaultCoord, 
                                   int y=wxDefaultCoord, 
                                   bool centre=true) -->
  <function name="wxGetTextFromUser">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="Input Text" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
    <arg nr="4" default="NULL" direction="inout">
      <not-uninit/>
    </arg>
    <arg nr="5" default="wxDefaultCoord" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="6" default="wxDefaultCoord" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="7" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- bool wxGetEnvMap (wxEnvVariableHashMap * map) -->
  <function name="wxGetEnvMap">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="out">
      <not-null/>
      <not-uninit/>
    </arg>
  </function>
  <!-- virtual bool wxPrinter::Print(wxWindow * parent, wxPrintout * printout, bool prompt = true) -->
  <function name="wxPrinter::Print">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
      <not-uninit/>
    </arg>
    <arg nr="2" direction="inout">
      <not-null/>
      <not-uninit/>
    </arg>
    <arg nr="3" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxFont wxGetFontFromUser(wxWindow *parent, const wxFont & fontInit, const wxString & caption = wxEmptyString) -->
  <function name="wxGetFontFromUser">
    <noreturn>false</noreturn>
    <returnValue type="wxFont"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
  </function>
  <!-- wxColour wxGetColourFromUser (wxWindow *parent, const wxColour &colInit, const wxString &caption=wxEmptyString, wxColourData *data=NULL) -->
  <function name="wxGetColourFromUser">
    <noreturn>false</noreturn>
    <returnValue type="wxColour"/>
    <leak-ignore/>
    <arg nr="1" direction="inout">
      <not-null/>
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="wxEmptyString" direction="in"/>
    <arg nr="4" default="NULL" direction="out">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyCell(wxPGPropArg id, int column, const wxString & text = wxEmptyString, const wxBitmap & bitmap = wxNullBitmap, const wxColour & fgCol = wxNullColour, const wxColour & bgCol = wxNullColour ) -->
  <!-- void wxPropertyGrid::SetPropertyCell(wxPGPropArg id, int column, const wxString & text = wxEmptyString, const wxBitmap & bitmap = wxNullBitmap, const wxColour & fgCol = wxNullColour, const wxColour & bgCol = wxNullColour ) -->
  <function name="wxPropertyGridInterface::SetPropertyCell,wxPropertyGrid::SetPropertyCell">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
    <arg nr="3" default="wxEmptyString" direction="in"/>
    <arg nr="4" default="wxNullBitmap" direction="in"/>
    <arg nr="5" default="wxNullColour" direction="in"/>
    <arg nr="6" default="wxNullColour" direction="in"/>
  </function>
  <!-- bool wxPropertyGridInterface::HideProperty(wxPGPropArg id, bool hide = true, int flags = wxPG_RECURSE) -->
  <!-- bool wxPropertyGridPage::HideProperty(wxPGPropArg id, bool hide = true, int flags = wxPG_RECURSE) -->
  <function name="wxPropertyGridInterface::HideProperty,wxPropertyGridPage::HideProperty">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="true" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="wxPG_RECURSE" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxColourData::SetColour(const wxColour & colour) -->
  <function name="wxColourData::SetColour">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- int wxCmdLineParser::Parse(bool giveUsage = true) -->
  <function name="wxCmdLineParser::Parse">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <leak-ignore/>
    <arg nr="1" default="true" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxPGMultiButton::Add(const wxString & label, int id = -2) -->
  <!-- void wxPGMultiButton::Add(const wxBitmap & bitmap, int id = -2) -->
  <function name="wxPGMultiButton::Add">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="-2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- int wxPGMultiButton::GetButtonId(unsigned int i) const -->
  <function name="wxPGMultiButton::GetButtonId">
    <noreturn>false</noreturn>
    <returnValue type="int"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
      <not-bool/>
    </arg>
  </function>
  <!-- wxString wxCmdLineParser::GetParam(size_t n = 0) const -->
  <function name="wxCmdLineParser::GetParam">
    <noreturn>false</noreturn>
    <returnValue type="wxString"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- void wxPropertyGridInterface::SetPropertyEditor(wxPGPropArg id, const wxPGEditor * editor) -->
  <!-- void wxPropertyGridInterface::SetPropertyEditor(wxPGPropArg id, const wxString &name) -->
  <!-- void wxPropertyGridPage::SetPropertyEditor(wxPGPropArg id, const wxPGEditor * editor) -->
  <!-- void wxPropertyGridPage::SetPropertyEditor(wxPGPropArg id, const wxString &name) -->
  <function name="wxPropertyGridInterface::SetPropertyEditor,wxPropertyGridPage::SetPropertyEditor">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
  </function>
  <!-- virtual bool wxPGProperty::OnEvent(wxPropertyGrid * propgrid, wxWindow * wnd_primary, wxEvent & event)-->
  <!--         bool wxStringProperty::OnEvent(wxPropertyGrid * propgrid, wxWindow * wnd_primary, wxEvent & event)-->
  <!--         bool wxPGTextCtrlEditor::OnEvent(wxPropertyGrid * propgrid, wxWindow * wnd_primary, wxEvent & event)-->
  <function name="wxPGProperty::OnEvent,wxStringProperty::OnEvent,wxPGTextCtrlEditor::OnEvent">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-null/>
    </arg>
    <arg nr="3" direction="inout"/>
  </function>
  <!-- wxString& wxString::insert(size_t nPos, const wxString & str) -->
  <!-- wxString& wxString::insert(size_t nPos, const wxString & str, size_t nStart, size_t n)-->
  <!-- wxString& wxString::insert(size_t nPos, const char * sz, size_t n ) -->
  <!-- wxString& wxString::insert(size_t nPos, const wchar_t * sz, size_t n) -->
  <!-- wxString& wxString::insert(size_t nPos, size_t n, wxUniChar ch) -->
  <!-- iterator  wxString::insert(iterator it, wxUniChar ch) -->
  <!-- void      wxString::insert(iterator it, const_iterator first, const_iterator last) -->
  <!-- void      wxString::insert(iterator it, size_type n, wxUniChar ch)-->
  <!-- Return value type is "iterator", "wxString&" or "void" depending on the overloaded function. -->
  <function name="wxString::insert">
    <noreturn>false</noreturn>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in" default="0"/>
    <arg nr="3" direction="in" default="0"/>
    <arg nr="4" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual bool wxPGProperty::StringToValue (wxVariant & variant, const wxString & text, int argFlags = 0) const -->
  <function name="wxPGProperty::StringToValue">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in"/>
    <arg nr="3" default="0" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxArrayString:reserve(wxString::size_type new_capacity); -->
  <function name="wxArrayString::reserve">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- void wxRichTextAttr:SetFlags(long flags); -->
  <function name="wxRichTextAttr::SetFlags">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- virtual void wxWizard::SetPageSize(const wxSize & sizePage) -->
  <function name="wxWizard::SetPageSize">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="void"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- long wxExecute (const wxString & command, int flags = wxEXEC_ASYNC, wxProcess * callback = NULL, const wxExecuteEnv * env = NULL) -->
  <!-- long wxExecute (char ** argv            , int flags = wxEXEC_ASYNC, wxProcess * callback = NULL, const wxExecuteEnv * env = NULL) -->
  <!-- long wxExecute (wchar_t ** argv         , int flags = wxEXEC_ASYNC, wxProcess * callback = NULL, const wxExecuteEnv * env = NULL) -->
  <!-- long wxExecute (wxString &command       , wxArrayString &output   , int flags = 0              , const wxExecuteEnv * env = NULL) -->
  <!-- long wxExecute(const wxString & command , wxArrayString & output  , wxArrayString & errors     , int flags = 0, const wxExecuteEnv * env = NULL) -->
  <function name="wxExecute">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="long"/>
    <arg nr="1" direction="in"/>
    <arg nr="4" default="0" direction="in"/>
    <arg nr="5" default="NULL" direction="in"/>
  </function>
  <!-- bool wxImageList::Create (int width, int height, bool mask = true, int initialCount = 1) -->
  <function name="wxImageList::Create">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="3" default="true" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" default="1" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
  </function>
  <!-- wxPen* wxPenList::FindOrCreatePen(const wxColour & colour, int width = 1, wxPenStyle style = wxPENSTYLE_SOLID) -->
  <!-- wxPen* wxThePenList::FindOrCreatePen(const wxColour & colour, int width = 1, wxPenStyle style = wxPENSTYLE_SOLID) -->
  <function name="wxPenList::FindOrCreatePen,wxThePenList::FindOrCreatePen">
    <noreturn>false</noreturn>
    <use-retval/>
    <returnValue type="wxPen*"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" default="wxPENSTYLE_SOLID" direction="in"/>
  </function>
  <!-- wxBrush* wxBrushList::FindOrCreateBrush(const wxColour & colour, wxBrushStyle style = wxBRUSHSTYLE_SOLID) -->
  <!-- wxBrush* wxTheBrushList::FindOrCreateBrush(const wxColour & colour, wxBrushStyle style = wxBRUSHSTYLE_SOLID) -->
  <function name="wxBrushList::FindOrCreateBrush,wxTheBrushList::FindOrCreateBrush">
    <noreturn>false</noreturn>
    <use-retval/>
    <returnValue type="wxBrush*"/>
    <arg nr="1" direction="in"/>
    <arg nr="2" default="wxBRUSHSTYLE_SOLID" direction="in"/>
  </function>
  <!-- virtual bool wxClipboard::IsSupported(const wxDataFormat & format)-->
  <function name="wxClipboard::IsSupported,wxTheClipboard::IsSupported">
    <noreturn>false</noreturn>
    <use-retval/>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- virtual bool wxClipboard::GetData(wxDataObject & data)-->
  <function name="wxClipboard::GetData,wxTheClipboard::GetData">
    <noreturn>false</noreturn>
    <leak-ignore/>
    <returnValue type="bool"/>
    <arg nr="1" direction="out"/>
  </function>
  <!-- virtual bool wxClipboard::SetData(wxDataObject * data)-->
  <function name="wxClipboard::SetData,wxTheClipboard::SetData">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-null/>
      <not-uninit/>
    </arg>
  </function>
  <!-- wxColour wxColourDatabase::Find(const wxString & colourName) const -->
  <function name="wxColourDatabase::Find,wxTheColourDatabase::Find">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <returnValue type="wxColour"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxString wxColourDatabase::FindName(const wxColour & colour) const -->
  <function name="wxColourDatabase::FindName,wxTheColourDatabase::FindName">
    <noreturn>false</noreturn>
    <const/>
    <leak-ignore/>
    <returnValue type="wxString"/>
    <use-retval/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxCommandEvent::SetExtraLong( long extraLong ) -->
  <function name="wxCommandEvent::SetExtraLong">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- void wxEvtHandler::AddPendingEvent( const wxEvent & event ) -->
  <function name="wxEvtHandler::AddPendingEvent">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- void wxTreeCtrl::SelectItem( const wxTreeItemId & item ) -->
  <function name="wxTreeCtrl::SelectItem">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxTreeItemData * wxTreeCtrl::GetItemData( const wxTreeItemId & item ) const -->
  <function name="wxTreeCtrl::GetItemData">
    <noreturn>false</noreturn>
    <returnValue type="wxTreeItemData *"/>
    <const/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
  </function>
  <!-- wxFont* wxFontList::FindOrCreateFont(int point_size, 
       wxFontFamily family,
       wxFontStyle style,
       wxFontWeight weight,
       bool underline = false,
       const wxString & facename = wxEmptyString,
       wxFontEncoding encoding = wxFONTENCODING_DEFAULT 
  )-->
  <function name="wxFontList::FindOrCreateFont,wxTheFontList::FindOrCreateFont">
    <noreturn>false</noreturn>
    <returnValue type="wxFont*"/>
    <leak-ignore/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in"/>
    <arg nr="3" direction="in"/>
    <arg nr="4" direction="in"/>
    <arg nr="5" direction="in" default="false"/>
    <arg nr="6" direction="in" default="wxEmptyString"/>
    <arg nr="7" direction="in" default="wxFONTENCODING_DEFAULT"/>
  </function>
  <!-- void wxCmdLineParser::AddSwitch(const wxString & name,
            const wxString & lng = wxEmptyString,
            const wxString & desc = wxEmptyString,
            int flags = 0 
    )-->
  <function name="wxCmdLineParser::AddSwitch">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1" direction="in"/>
    <arg nr="2" direction="in" default="wxEmptyString"/>
    <arg nr="3" direction="in" default="wxEmptyString"/>
    <arg nr="4" direction="in" default="0">
      <not-uninit/>
    </arg>
  </function>
  <!-- wxImage wxImage::Scale(
               int width,
               int height,
               wxImageResizeQuality quality = wxIMAGE_QUALITY_NORMAL
       ) const-->
  <function name="wxImage::Scale">
    <noreturn>false</noreturn>
    <returnValue type="wxImage"/>
    <use-retval/>
    <leak-ignore/>
    <const/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in" default="wxIMAGE_QUALITY_NORMAL"/>
  </function>
  <!-- bool wxString::Alloc( size_t nLen ) -->
  <function name="wxString::Alloc">
    <noreturn>false</noreturn>
    <returnValue type="bool"/>
    <arg nr="1" direction="in">
      <not-uninit/>
    </arg>
    <warn severity="style">Please note that this method does the same thing as the standard 'reserve()' one and should not be used in new code.</warn>
  </function>
</def>
