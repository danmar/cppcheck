<?xml version="1.0"?>
<def format="2">
  <!-- libcurl C API. See https://curl.haxx.se/libcurl/c/ -->
  <!-- The libcurl C API is typically include by '#include <curl/curl.h>' -->
  <!-- ########## libcurl Types ########## -->
  <podtype name="CURLcode"/>
  <!-- ########## libcurl defines / macros ########## -->
  <define name="CURLE_OK" value="(0)"/>
  <!-- ########## libcurl Allocation / Deallocation ########## -->
  <resource>
    <alloc init="true">curl_easy_init</alloc>
    <alloc init="true">curl_easy_duphandle</alloc>
    <dealloc>curl_easy_cleanup</dealloc>
  </resource>
  <memory>
    <alloc init="true">curl_easy_escape</alloc>
    <alloc init="true">curl_easy_unescape</alloc>
    <dealloc>curl_free</dealloc>
  </memory>
  <!-- ########## libcurl C API Functions ########## -->
  <!-- void curl_easy_cleanup(CURL * handle ); -->
  <function name="curl_easy_cleanup">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- CURL *curl_easy_duphandle(CURL *handle ); -->
  <function name="curl_easy_duphandle">
    <noreturn>false</noreturn>
    <returnValue type="CURL *"/>
    <use-retval/>
    <arg nr="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- char *curl_easy_escape( CURL * curl , const char * string , int length ); -->
  <function name="curl_easy_escape">
    <noreturn>false</noreturn>
    <returnValue type="char *"/>
    <use-retval/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_getinfo(CURL *curl, CURLINFO info, ... ); -->
  <function name="curl_easy_getinfo">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="out">
      <not-bool/>
    </arg>
  </function>
  <!-- CURL *curl_easy_init( ); -->
  <function name="curl_easy_init">
    <noreturn>false</noreturn>
    <returnValue type="CURL *"/>
    <use-retval/>
  </function>
  <!-- CURLcode curl_easy_pause(CURL *handle , int bitmask ); -->
  <function name="curl_easy_pause">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_perform(CURL * easy_handle ); -->
  <function name="curl_easy_perform">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_recv( CURL * curl , void * buffer , size_t buflen , size_t * n ); -->
  <function name="curl_easy_recv">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="out">
      <minsize type="argvalue" arg="3"/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="4" direction="out">
      <not-null/>
      <not-bool/>
    </arg>
  </function>
  <!-- void curl_easy_reset(CURL *handle ); -->
  <function name="curl_easy_reset">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_send( CURL * curl , const void * buffer , size_t buflen , size_t * n ); -->
  <function name="curl_easy_send">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <minsize type="argvalue" arg="3"/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
      <valid>0:</valid>
    </arg>
    <arg nr="4" direction="out">
      <not-null/>
      <not-bool/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_setopt(CURL *handle, CURLoption option, parameter); -->
  <function name="curl_easy_setopt">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
  </function>
  <!-- const char *curl_easy_strerror(CURLcode errornum); -->
  <function name="curl_easy_strerror">
    <noreturn>false</noreturn>
    <returnValue type="const char *"/>
    <use-retval/>
    <arg nr="1" direction="in">
      <not-uninit/>
      <not-bool/>
    </arg>
  </function>
  <!-- char *curl_easy_unescape( CURL * curl , const char * url , int inlength , int * outlength ); -->
  <function name="curl_easy_unescape">
    <noreturn>false</noreturn>
    <returnValue type="char *"/>
    <arg nr="1">
      <not-uninit/>
    </arg>
    <arg nr="2" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="3" direction="in">
      <not-uninit/>
    </arg>
    <arg nr="4" direction="out">
      <not-bool/>
    </arg>
  </function>
  <!-- CURLcode curl_easy_upkeep(CURL * handle ); -->
  <function name="curl_easy_upkeep">
    <noreturn>false</noreturn>
    <returnValue type="CURLcode"/>
    <leak-ignore/>
    <arg nr="1">
      <not-uninit/>
    </arg>
  </function>
  <!-- void curl_free( char * ptr ); -->
  <function name="curl_free">
    <noreturn>false</noreturn>
    <returnValue type="void"/>
    <arg nr="1"/>
  </function>
</def>
